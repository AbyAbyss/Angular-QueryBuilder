var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ArrowIconContext.html",[0,0.106,1,0.607]],["body/interfaces/ArrowIconContext.html",[0,0.21,1,0.732,2,0.195,3,0.167,4,0.167,5,0.195,6,0.195,7,0.552,8,0.167,9,0.323,10,1.15,11,1.248,12,0.998,13,0.233,14,0.029,15,1.249,16,0.167,17,0.552,18,0.509,19,0.264,20,0.429,21,1.164,22,1.016,23,0.552,24,0.673,25,1.075,26,0.969,27,0.762,28,0.912,29,0.896,30,0.338,31,0.329,32,0.732,33,0.732,34,0.552,35,0.468,36,0.552,37,0.468,38,1.076,39,0.552,40,0.509,41,0.509,42,0.732,43,0.552,44,0.429,45,0.509,46,0.468,47,0.509,48,0.509,49,0.429,50,0.509,51,0.552,52,0.552,53,0.509,54,0.509,55,0.509,56,0.509,57,0.509,58,0.509,59,0.552,60,0.509,61,0.552,62,0.509,63,0.552,64,0.509,65,0.509,66,0.509,67,0.509,68,0.509,69,0.509,70,0.509,71,0.509,72,0.509,73,0.509,74,0.468,75,0.552,76,0.509,77,0.552,78,0.552,79,0.509,80,0.732,81,1.075,82,0.732,83,0.732,84,0.732,85,0.509,86,0.509,87,0.912,88,0.552,89,0.509,90,0.468,91,0.509,92,0.509,93,0.509,94,0.509,95,0.509,96,0.509,97,0.509,98,0.509,99,0.509,100,0.509,101,0.017,102,0.017]],["title/interfaces/ButtonGroupContext.html",[0,0.106,99,0.607]],["body/interfaces/ButtonGroupContext.html",[0,0.21,1,0.497,2,0.191,3,0.163,4,0.163,5,0.191,6,0.191,7,0.539,8,0.163,9,0.318,10,1.145,11,1.242,12,0.994,13,0.279,14,0.029,15,1.846,16,0.163,17,0.539,18,0.497,19,0.263,20,0.419,21,1.163,22,1.013,23,0.539,24,0.661,25,1.071,26,0.965,27,0.755,28,0.903,29,0.889,30,0.335,31,0.324,32,0.719,33,0.719,34,0.539,35,0.457,36,0.539,37,0.457,38,1.065,39,0.539,40,0.497,41,0.497,42,0.719,43,0.539,44,0.419,45,0.497,46,0.457,47,0.497,48,0.497,49,0.419,50,0.497,51,0.539,52,0.539,53,0.497,54,0.497,55,0.497,56,0.497,57,0.497,58,0.497,59,0.539,60,0.497,61,0.539,62,0.497,63,0.539,64,0.497,65,0.497,66,0.497,67,0.497,68,0.497,69,0.497,70,0.497,71,0.497,72,0.497,73,0.497,74,0.457,75,0.539,76,0.497,77,0.539,78,0.539,79,0.497,80,0.982,81,1.071,82,0.982,83,0.982,84,0.719,85,0.497,86,0.497,87,0.903,88,0.539,89,0.497,90,0.457,91,0.497,92,0.497,93,0.497,94,0.497,95,0.497,96,0.497,97,0.497,98,0.497,99,0.719,100,0.497,101,0.017,102,0.017]],["title/interfaces/EmptyWarningContext.html",[0,0.106,89,0.607]],["body/interfaces/EmptyWarningContext.html",[0,0.21,1,0.505,2,0.194,3,0.165,4,0.165,5,0.194,6,0.194,7,0.548,8,0.165,9,0.322,10,1.149,11,1.246,12,0.996,13,0.254,14,0.029,15,1.242,16,0.165,17,0.548,18,0.505,19,0.263,20,0.426,21,1.164,22,1.015,23,0.548,24,0.669,25,1.074,26,0.968,27,0.76,28,0.909,29,0.894,30,0.337,31,0.327,32,0.727,33,0.727,34,0.548,35,0.464,36,0.548,37,0.464,38,1.072,39,0.548,40,0.505,41,0.505,42,0.727,43,0.548,44,0.426,45,0.505,46,0.464,47,0.505,48,0.505,49,0.426,50,0.505,51,0.548,52,0.548,53,0.505,54,0.505,55,0.505,56,0.505,57,0.505,58,0.505,59,0.548,60,0.505,61,0.548,62,0.505,63,0.548,64,0.505,65,0.505,66,0.505,67,0.505,68,0.505,69,0.505,70,0.505,71,0.505,72,0.505,73,0.505,74,0.464,75,0.548,76,0.505,77,0.548,78,0.548,79,0.505,80,0.727,81,1.074,82,0.727,83,0.727,84,0.727,85,0.505,86,0.505,87,0.909,88,0.548,89,0.727,90,0.857,91,0.505,92,0.505,93,0.505,94,0.505,95,0.505,96,0.505,97,0.505,98,0.505,99,0.505,100,0.505,101,0.017,102,0.017]],["title/interfaces/Entity.html",[0,0.106,29,0.511]],["body/interfaces/Entity.html",[0,0.21,1,0.504,2,0.193,3,0.165,4,0.165,5,0.193,6,0.193,7,0.547,8,0.165,9,0.321,10,1.105,11,1.199,12,0.983,13,0.254,14,0.029,16,0.165,17,0.547,18,0.504,19,0.263,20,0.425,21,1.165,22,1.014,23,0.547,24,0.668,25,1.073,26,0.967,27,0.834,28,0.908,29,0.914,30,0.367,31,0.395,32,0.726,33,0.726,34,0.547,35,0.463,36,0.547,37,0.463,38,1.071,39,0.547,40,0.504,41,0.504,42,0.726,43,1.011,44,0.425,45,0.504,46,0.463,47,0.504,48,0.504,49,0.425,50,0.504,51,0.547,52,0.547,53,0.504,54,0.504,55,0.504,56,0.504,57,0.504,58,0.504,59,0.547,60,0.504,61,0.547,62,0.504,63,0.547,64,0.504,65,0.504,66,0.504,67,0.504,68,0.504,69,0.504,70,0.504,71,0.504,72,0.504,73,0.504,74,0.463,75,0.547,76,0.504,77,0.547,78,0.547,79,0.504,80,0.726,81,1.073,82,0.726,83,0.726,84,0.726,85,0.504,86,0.504,87,0.908,88,0.547,89,0.504,90,0.463,91,0.504,92,0.504,93,0.504,94,0.504,95,0.504,96,0.504,97,0.504,98,0.504,99,0.504,100,0.504,101,0.017,102,0.017]],["title/interfaces/EntityContext.html",[0,0.106,91,0.607]],["body/interfaces/EntityContext.html",[0,0.21,1,0.501,2,0.192,3,0.164,4,0.164,5,0.192,6,0.192,7,0.544,8,0.164,9,0.32,10,1.147,11,1.244,12,0.983,13,0.269,14,0.029,15,1.587,16,0.164,17,0.544,18,0.501,19,0.263,20,0.422,21,1.163,22,1.02,23,0.544,24,0.665,25,1.072,26,0.966,27,0.757,28,0.906,29,0.966,30,0.336,31,0.326,32,0.723,33,0.723,34,0.544,35,0.461,36,0.544,37,0.461,38,1.069,39,0.544,40,0.501,41,0.501,42,0.723,43,0.544,44,0.422,45,0.501,46,0.461,47,0.501,48,0.501,49,0.422,50,0.501,51,0.544,52,0.544,53,0.501,54,0.501,55,0.501,56,0.501,57,0.501,58,0.501,59,0.544,60,0.501,61,0.544,62,0.501,63,0.544,64,0.501,65,0.501,66,0.501,67,0.501,68,0.501,69,0.501,70,0.501,71,0.501,72,0.501,73,0.501,74,0.461,75,0.544,76,0.501,77,0.544,78,0.544,79,0.501,80,0.723,81,1.072,82,0.723,83,0.723,84,0.723,85,0.501,86,0.501,87,0.996,88,0.544,89,0.501,90,0.461,91,0.723,92,0.501,93,0.501,94,0.501,95,0.501,96,0.501,97,0.501,98,0.501,99,0.501,100,0.501,101,0.017,102,0.017]],["title/interfaces/EntityMap.html",[0,0.106,42,0.607]],["body/interfaces/EntityMap.html",[0,0.21,1,0.515,2,0.197,3,0.168,4,0.168,5,0.283,6,0.283,7,0.558,8,0.168,10,1.111,11,1.205,12,0.987,13,0.14,14,0.029,16,0.168,17,0.558,18,0.515,19,0.264,20,0.434,21,1.165,22,1.017,23,0.558,24,0.678,25,1.077,26,0.971,27,0.765,28,0.915,29,0.919,30,0.339,31,0.33,32,0.737,33,0.861,34,0.558,35,0.473,36,0.558,37,0.473,38,1.08,39,0.558,40,0.515,41,0.515,42,0.861,43,0.558,44,0.434,45,0.515,46,0.473,47,0.515,48,0.515,49,0.434,50,0.515,51,0.558,52,0.558,53,0.515,54,0.515,55,0.515,56,0.515,57,0.515,58,0.515,59,0.558,60,0.515,61,0.558,62,0.515,63,0.558,64,0.515,65,0.515,66,0.515,67,0.515,68,0.515,69,0.515,70,0.515,71,0.515,72,0.515,73,0.515,74,0.473,75,0.558,76,0.515,77,0.558,78,0.558,79,0.515,80,0.737,81,1.077,82,0.737,83,0.737,84,0.737,85,0.515,86,0.515,87,0.915,88,0.558,89,0.515,90,0.473,91,0.515,92,0.515,93,0.515,94,0.515,95,0.515,96,0.515,97,0.515,98,0.515,99,0.515,100,0.515,101,0.017,102,0.017,103,1.019,104,2.794]],["title/interfaces/Field.html",[0,0.106,26,0.511]],["body/interfaces/Field.html",[0,0.208,1,0.472,2,0.181,3,0.154,4,0.154,5,0.181,6,0.181,7,0.512,8,0.154,9,0.306,10,1.087,11,1.179,12,0.973,13,0.315,14,0.029,15,1.182,16,0.154,17,0.512,18,0.472,19,0.261,20,0.398,21,1.165,22,1.006,23,0.512,24,0.636,25,1.076,26,0.964,27,0.819,28,0.98,29,0.931,30,0.399,31,0.386,32,0.692,33,0.692,34,0.98,35,0.83,36,0.98,37,0.83,38,1.043,39,0.512,40,0.472,41,0.472,42,0.692,43,0.512,44,0.398,45,0.472,46,0.434,47,0.472,48,0.472,49,0.398,50,0.472,51,0.512,52,0.512,53,0.472,54,0.472,55,0.472,56,0.472,57,0.472,58,0.472,59,0.512,60,0.472,61,0.512,62,0.472,63,0.512,64,0.472,65,0.472,66,0.472,67,0.472,68,0.472,69,0.472,70,0.472,71,0.472,72,0.472,73,0.472,74,0.434,75,0.512,76,0.472,77,0.512,78,0.512,79,0.472,80,0.692,81,1.061,82,0.692,83,0.692,84,0.692,85,0.472,86,0.472,87,0.884,88,0.512,89,0.472,90,0.434,91,0.472,92,0.472,93,0.472,94,0.472,95,0.472,96,0.472,97,0.472,98,0.472,99,0.472,100,0.472,101,0.016,102,0.016]],["title/interfaces/FieldContext.html",[0,0.106,93,0.607]],["body/interfaces/FieldContext.html",[0,0.21,1,0.497,2,0.191,3,0.163,4,0.163,5,0.191,6,0.191,7,0.539,8,0.163,9,0.318,10,1.145,11,1.242,12,0.981,13,0.279,14,0.029,15,1.748,16,0.163,17,0.539,18,0.497,19,0.263,20,0.419,21,1.163,22,1.02,23,0.539,24,0.661,25,1.071,26,0.999,27,0.755,28,0.903,29,0.889,30,0.335,31,0.324,32,0.719,33,0.719,34,0.539,35,0.457,36,0.539,37,0.457,38,1.065,39,0.539,40,0.497,41,0.497,42,0.719,43,0.539,44,0.419,45,0.497,46,0.457,47,0.497,48,0.497,49,0.419,50,0.497,51,0.539,52,0.539,53,0.497,54,0.497,55,0.497,56,0.497,57,0.497,58,0.497,59,0.539,60,0.497,61,0.539,62,0.497,63,0.539,64,0.497,65,0.497,66,0.497,67,0.497,68,0.497,69,0.497,70,0.497,71,0.497,72,0.497,73,0.497,74,0.457,75,0.539,76,0.497,77,0.539,78,0.539,79,0.497,80,0.719,81,1.071,82,0.719,83,0.719,84,0.719,85,0.497,86,0.497,87,0.994,88,0.539,89,0.497,90,0.457,91,0.497,92,0.497,93,0.719,94,0.497,95,0.926,96,0.497,97,0.497,98,0.497,99,0.497,100,0.497,101,0.017,102,0.017]],["title/interfaces/FieldMap.html",[0,0.106,32,0.607]],["body/interfaces/FieldMap.html",[0,0.21,1,0.515,2,0.197,3,0.168,4,0.168,5,0.283,6,0.283,7,0.558,8,0.168,10,1.111,11,1.205,12,0.987,13,0.14,14,0.029,16,0.168,17,0.558,18,0.515,19,0.264,20,0.434,21,1.165,22,1.017,23,0.558,24,0.678,25,1.077,26,0.979,27,0.765,28,0.915,29,0.899,30,0.339,31,0.33,32,0.861,33,0.861,34,0.558,35,0.473,36,0.558,37,0.473,38,1.08,39,0.558,40,0.515,41,0.515,42,0.737,43,0.558,44,0.434,45,0.515,46,0.473,47,0.515,48,0.515,49,0.434,50,0.515,51,0.558,52,0.558,53,0.515,54,0.515,55,0.515,56,0.515,57,0.515,58,0.515,59,0.558,60,0.515,61,0.558,62,0.515,63,0.558,64,0.515,65,0.515,66,0.515,67,0.515,68,0.515,69,0.515,70,0.515,71,0.515,72,0.515,73,0.515,74,0.473,75,0.558,76,0.515,77,0.558,78,0.558,79,0.515,80,0.737,81,1.077,82,0.737,83,0.737,84,0.737,85,0.515,86,0.515,87,0.915,88,0.558,89,0.515,90,0.473,91,0.515,92,0.515,93,0.515,94,0.515,95,0.515,96,0.515,97,0.515,98,0.515,99,0.515,100,0.515,101,0.017,102,0.017,103,1.019,105,2.794]],["title/interfaces/InputContext.html",[0,0.106,98,0.607]],["body/interfaces/InputContext.html",[0,0.21,1,0.497,2,0.191,3,0.163,4,0.163,5,0.191,6,0.191,7,0.539,8,0.163,9,0.318,10,1.145,11,1.242,12,0.981,13,0.279,14,0.029,15,1.581,16,0.163,17,0.539,18,0.497,19,0.263,20,0.419,21,1.163,22,1.02,23,0.539,24,0.661,25,1.071,26,0.999,27,0.755,28,0.903,29,0.889,30,0.371,31,0.324,32,0.719,33,0.719,34,0.539,35,0.457,36,0.539,37,0.457,38,1.065,39,0.539,40,0.497,41,0.497,42,0.719,43,0.539,44,0.419,45,0.497,46,0.457,47,0.497,48,0.497,49,0.419,50,0.497,51,0.539,52,0.539,53,0.497,54,0.497,55,0.497,56,0.497,57,0.497,58,0.497,59,0.539,60,0.497,61,0.539,62,0.497,63,0.539,64,0.497,65,0.497,66,0.497,67,0.497,68,0.497,69,0.497,70,0.497,71,0.497,72,0.497,73,0.497,74,0.457,75,0.539,76,0.497,77,0.539,78,0.539,79,0.497,80,0.719,81,1.071,82,0.719,83,0.719,84,0.719,85,0.497,86,0.497,87,0.994,88,0.539,89,0.497,90,0.457,91,0.497,92,0.497,93,0.497,94,0.497,95,0.497,96,0.497,97,0.497,98,0.719,99,0.497,100,0.497,101,0.017,102,0.017]],["title/interfaces/LocalRuleMeta.html",[0,0.106,40,0.607]],["body/interfaces/LocalRuleMeta.html",[0,0.21,1,0.509,2,0.195,3,0.167,4,0.167,5,0.195,6,0.195,7,0.552,8,0.167,9,0.323,10,1.108,11,1.202,12,1.003,13,0.233,14,0.029,16,0.167,17,0.552,18,0.509,19,0.264,20,0.429,21,1.164,22,1.016,23,0.552,24,0.673,25,1.1,26,0.969,27,0.762,28,0.912,29,0.896,30,0.338,31,0.329,32,0.732,33,0.732,34,0.552,35,0.468,36,0.552,37,0.468,38,1.076,39,0.552,40,0.732,41,0.936,42,0.732,43,0.552,44,0.429,45,0.509,46,0.468,47,0.509,48,0.509,49,0.429,50,0.509,51,0.552,52,0.552,53,0.509,54,0.509,55,0.509,56,0.509,57,0.509,58,0.509,59,0.552,60,0.509,61,0.552,62,0.509,63,0.552,64,0.509,65,0.509,66,0.509,67,0.509,68,0.509,69,0.509,70,0.509,71,0.509,72,0.509,73,0.509,74,0.468,75,0.552,76,0.509,77,0.552,78,0.552,79,0.509,80,0.732,81,1.075,82,0.732,83,0.732,84,0.732,85,0.509,86,0.509,87,0.912,88,0.552,89,0.509,90,0.468,91,0.509,92,0.509,93,0.509,94,0.509,95,0.509,96,0.509,97,0.509,98,0.509,99,0.509,100,0.509,101,0.017,102,0.017]],["title/interfaces/OperatorContext.html",[0,0.106,97,0.607]],["body/interfaces/OperatorContext.html",[0,0.21,1,0.501,2,0.192,3,0.164,4,0.164,5,0.192,6,0.192,7,0.544,8,0.164,9,0.32,10,1.147,11,1.244,12,0.983,13,0.269,14,0.029,15,1.587,16,0.164,17,0.544,18,0.501,19,0.263,20,0.422,21,1.164,22,1.02,23,0.544,24,0.665,25,1.072,26,0.966,27,0.757,28,0.996,29,0.891,30,0.336,31,0.326,32,0.723,33,0.723,34,0.544,35,0.461,36,0.544,37,0.461,38,1.069,39,0.544,40,0.501,41,0.501,42,0.723,43,0.544,44,0.422,45,0.501,46,0.461,47,0.501,48,0.501,49,0.422,50,0.501,51,0.544,52,0.544,53,0.501,54,0.501,55,0.501,56,0.501,57,0.501,58,0.501,59,0.544,60,0.501,61,0.544,62,0.501,63,0.544,64,0.501,65,0.501,66,0.501,67,0.501,68,0.501,69,0.501,70,0.501,71,0.501,72,0.501,73,0.501,74,0.461,75,0.544,76,0.501,77,0.544,78,0.544,79,0.501,80,0.723,81,1.072,82,0.723,83,0.723,84,0.723,85,0.501,86,0.501,87,0.996,88,0.544,89,0.501,90,0.461,91,0.501,92,0.501,93,0.501,94,0.501,95,0.501,96,0.501,97,0.723,98,0.501,99,0.501,100,0.501,101,0.017,102,0.017]],["title/interfaces/Option.html",[0,0.106,30,0.198]],["body/interfaces/Option.html",[0,0.21,1,0.51,2,0.196,3,0.167,4,0.167,5,0.196,6,0.196,7,0.554,8,0.167,9,0.324,10,1.109,11,1.203,12,0.986,13,0.234,14,0.029,16,0.167,17,0.554,18,0.51,19,0.264,20,0.43,21,1.165,22,1.016,23,0.554,24,0.674,25,1.076,26,0.969,27,0.837,28,0.912,29,0.896,30,0.348,31,0.396,32,0.733,33,0.733,34,0.554,35,0.469,36,0.554,37,0.469,38,1.077,39,0.554,40,0.51,41,0.51,42,0.733,43,0.554,44,0.43,45,0.51,46,0.469,47,0.51,48,0.51,49,0.43,50,0.51,51,0.554,52,0.554,53,0.51,54,0.51,55,0.51,56,0.51,57,0.51,58,0.51,59,0.554,60,0.51,61,0.554,62,0.51,63,0.554,64,0.51,65,0.51,66,0.51,67,0.51,68,0.51,69,0.51,70,0.51,71,0.51,72,0.51,73,0.51,74,0.469,75,0.554,76,0.51,77,0.554,78,0.554,79,0.51,80,0.733,81,1.076,82,0.733,83,0.733,84,0.733,85,0.51,86,0.51,87,0.912,88,0.554,89,0.51,90,0.469,91,0.51,92,0.51,93,0.51,94,0.51,95,0.51,96,0.51,97,0.51,98,0.51,99,0.51,100,0.51,101,0.017,102,0.017]],["title/directives/QueryArrowIconDirective.html",[106,0.558,107,2.164]],["body/directives/QueryArrowIconDirective.html",[2,0.332,3,0.284,4,0.284,5,0.427,6,0.427,8,0.284,9,0.46,13,0.283,14,0.028,16,0.284,19,0.19,30,0.284,31,0.332,101,0.024,102,0.024,103,2.057,106,0.956,107,3.709,108,4.448,109,4.704,110,1.995,111,1.995,112,4.152,113,2.394,114,2.52,115,1.995,116,1.995,117,2.761,118,4.704,119,1.995,120,4.704,121,1.715,122,1.995,123,1.593,124,1.995]],["title/interfaces/QueryBuilderClassNames.html",[0,0.106,44,0.511]],["body/interfaces/QueryBuilderClassNames.html",[0,0.203,1,0.386,2,0.148,3,0.126,4,0.126,5,0.148,6,0.148,7,0.419,8,0.126,9,0.263,10,1.029,11,1.116,12,0.961,13,0.33,14,0.029,16,0.126,17,0.419,18,0.386,19,0.254,20,0.325,21,1.172,22,0.992,23,0.419,24,0.811,25,1.022,26,0.914,27,0.678,28,0.811,29,0.818,30,0.411,31,0.279,32,0.595,33,0.595,34,0.419,35,0.355,36,0.419,37,0.355,38,0.957,39,0.419,40,0.386,41,0.386,42,0.595,43,0.419,44,0.501,45,0.816,46,0.751,47,0.816,48,0.816,49,0.688,50,0.816,51,0.886,52,0.886,53,0.816,54,0.816,55,0.816,56,0.816,57,0.816,58,0.816,59,0.886,60,0.816,61,0.886,62,0.816,63,0.886,64,0.816,65,0.816,66,0.816,67,0.816,68,0.816,69,0.816,70,0.816,71,0.816,72,0.816,73,0.816,74,0.355,75,0.419,76,0.386,77,0.419,78,0.419,79,0.386,80,0.595,81,1.022,82,0.595,83,0.595,84,0.595,85,0.386,86,0.386,87,0.811,88,0.419,89,0.386,90,0.355,91,0.386,92,0.386,93,0.386,94,0.386,95,0.386,96,0.386,97,0.386,98,0.386,99,0.386,100,0.386,101,0.014,102,0.014]],["title/interfaces/QueryBuilderConfig.html",[0,0.106,74,0.558]],["body/interfaces/QueryBuilderConfig.html",[0,0.208,1,0.464,2,0.178,3,0.152,4,0.152,5,0.178,6,0.178,7,0.504,8,0.152,9,0.302,10,1.083,11,1.175,12,0.97,13,0.308,14,0.029,15,1.994,16,0.152,17,0.504,18,0.464,19,0.261,20,0.391,21,1.159,22,1.004,23,0.504,24,0.629,25,1.074,26,0.977,27,0.735,28,0.879,29,0.928,30,0.398,31,0.312,32,0.896,33,0.684,34,0.504,35,0.427,36,0.504,37,0.427,38,1.037,39,0.504,40,0.464,41,0.464,42,0.896,43,0.504,44,0.391,45,0.464,46,0.427,47,0.464,48,0.464,49,0.391,50,0.464,51,0.504,52,0.504,53,0.464,54,0.464,55,0.464,56,0.464,57,0.464,58,0.464,59,0.504,60,0.464,61,0.504,62,0.464,63,0.504,64,0.464,65,0.464,66,0.464,67,0.464,68,0.464,69,0.464,70,0.464,71,0.464,72,0.464,73,0.464,74,0.629,75,0.972,76,0.896,77,0.504,78,0.972,79,0.896,80,0.956,81,1.058,82,0.956,83,0.956,84,0.956,85,0.896,86,0.464,87,0.879,88,0.504,89,0.464,90,0.427,91,0.464,92,0.464,93,0.464,94,0.464,95,0.464,96,0.464,97,0.464,98,0.464,99,0.464,100,0.464,101,0.016,102,0.016]],["title/modules/QueryBuilderModule.html",[125,1.958,126,1.958]],["body/modules/QueryBuilderModule.html",[2,0.248,3,0.212,4,0.212,14,0.029,16,0.354,18,0.647,19,0.228,101,0.02,102,0.02,107,4.276,121,1.281,123,1.19,125,2.789,126,4.073,127,2.089,128,2.954,129,4.438,130,2.309,131,2.089,132,2.954,133,2.954,134,2.954,135,4.786,136,4.276,137,4.276,138,4.276,139,4.276,140,4.276,141,4.276,142,4.276,143,4.276,144,3.943,145,2.954,146,2.585,147,3.514,148,3.514,149,4.69,150,4.69,151,2.954,152,4.69,153,2.309]],["title/directives/QueryButtonGroupDirective.html",[106,0.558,136,2.164]],["body/directives/QueryButtonGroupDirective.html",[2,0.331,3,0.282,4,0.282,5,0.427,6,0.427,8,0.282,9,0.458,13,0.283,14,0.028,16,0.282,19,0.19,30,0.282,31,0.331,49,0.937,101,0.024,102,0.024,103,2.053,106,0.954,110,1.988,111,1.988,113,2.388,114,2.517,115,1.988,116,1.988,117,2.759,119,1.988,121,1.708,122,1.988,123,1.586,124,1.988,136,3.701,154,3.939,155,4.733,156,3.939,157,3.939,158,4.686,159,2.542]],["title/directives/QueryEmptyWarningDirective.html",[106,0.558,137,2.164]],["body/directives/QueryEmptyWarningDirective.html",[2,0.332,3,0.284,4,0.284,5,0.427,6,0.427,8,0.284,9,0.46,13,0.283,14,0.028,16,0.284,19,0.19,30,0.284,31,0.332,101,0.024,102,0.024,103,2.057,106,0.956,110,1.995,111,1.995,113,2.394,114,2.52,115,1.995,116,1.995,117,2.761,119,1.995,121,1.715,122,1.995,123,1.593,124,1.995,137,3.709,160,3.974,161,4.704,162,4.152,163,4.704,164,4.704]],["title/directives/QueryEntityDirective.html",[106,0.558,138,2.164]],["body/directives/QueryEntityDirective.html",[2,0.334,3,0.285,4,0.285,5,0.428,6,0.428,8,0.285,9,0.461,13,0.284,14,0.028,16,0.285,19,0.191,30,0.285,31,0.334,101,0.024,102,0.024,103,2.062,106,0.958,110,2.003,111,2.003,113,2.4,114,2.522,115,2.003,116,2.003,117,2.764,119,2.003,121,1.722,122,2.003,123,1.599,124,2.003,138,3.718,159,2.562,165,4.723,166,4.162,167,4.723,168,4.723]],["title/directives/QueryFieldDirective.html",[106,0.558,139,2.164]],["body/directives/QueryFieldDirective.html",[2,0.334,3,0.285,4,0.285,5,0.428,6,0.428,8,0.285,9,0.461,13,0.284,14,0.028,16,0.285,19,0.191,30,0.285,31,0.334,101,0.024,102,0.024,103,2.062,106,0.958,110,2.003,111,2.003,113,2.4,114,2.522,115,2.003,116,2.003,117,2.764,119,2.003,121,1.722,122,2.003,123,1.599,124,2.003,139,3.718,159,2.562,169,4.723,170,4.162,171,4.723,172,4.723]],["title/directives/QueryInputDirective.html",[106,0.558,140,2.164]],["body/directives/QueryInputDirective.html",[2,0.289,3,0.246,4,0.246,5,0.435,6,0.435,8,0.246,9,0.421,13,0.321,14,0.029,16,0.246,19,0.165,21,1.082,27,0.845,30,0.312,31,0.422,81,0.692,101,0.022,102,0.022,103,2.176,106,0.962,110,1.734,111,1.734,113,2.195,114,2.42,115,1.734,116,1.734,117,2.669,119,2.195,121,1.49,122,1.734,123,1.384,124,1.734,140,3.402,159,3.414,160,2.687,173,4.089,174,3.808,175,5.97,176,4.089,177,5.176,178,3.808,179,4.089,180,4.089,181,4.089,182,4.089,183,4.089,184,4.775,185,5.176,186,4.775,187,4.089,188,3.437,189,3.437,190,5.176,191,4.089,192,4.089,193,4.089,194,4.089,195,4.089]],["title/directives/QueryOperatorDirective.html",[106,0.558,141,2.164]],["body/directives/QueryOperatorDirective.html",[2,0.334,3,0.285,4,0.285,5,0.428,6,0.428,8,0.285,9,0.461,13,0.284,14,0.028,16,0.285,19,0.191,30,0.285,31,0.334,101,0.024,102,0.024,103,2.062,106,0.958,110,2.003,111,2.003,113,2.4,114,2.522,115,2.003,116,2.003,117,2.764,119,2.003,121,1.722,122,2.003,123,1.599,124,2.003,141,3.718,159,2.562,196,4.723,197,4.162,198,4.723,199,4.723]],["title/directives/QueryRemoveButtonDirective.html",[106,0.558,142,2.164]],["body/directives/QueryRemoveButtonDirective.html",[2,0.332,3,0.284,4,0.284,5,0.427,6,0.427,8,0.284,9,0.46,13,0.283,14,0.028,16,0.284,19,0.19,30,0.284,31,0.332,101,0.024,102,0.024,103,2.057,106,0.956,110,1.995,111,1.995,113,2.394,114,2.52,115,1.995,116,1.995,117,2.761,119,1.995,121,1.715,122,1.995,123,1.593,124,1.995,142,3.709,200,4.448,201,4.704,202,4.744,203,4.704,204,4.704]],["title/directives/QuerySwitchGroupDirective.html",[106,0.558,143,2.164]],["body/directives/QuerySwitchGroupDirective.html",[2,0.332,3,0.284,4,0.284,5,0.427,6,0.427,8,0.284,9,0.46,13,0.283,14,0.028,16,0.284,19,0.19,30,0.284,31,0.332,101,0.024,102,0.024,103,2.057,106,0.956,110,1.995,111,1.995,113,2.394,114,2.52,115,1.995,116,1.995,117,2.761,119,1.995,121,1.715,122,1.995,123,1.593,124,1.995,143,3.709,154,3.955,156,3.955,157,3.955,205,4.448,206,4.744]],["title/interfaces/RemoveButtonContext.html",[0,0.106,100,0.607]],["body/interfaces/RemoveButtonContext.html",[0,0.21,1,0.505,2,0.194,3,0.165,4,0.165,5,0.194,6,0.194,7,0.548,8,0.165,9,0.322,10,1.149,11,1.246,12,0.984,13,0.254,14,0.029,15,1.592,16,0.165,17,0.548,18,0.505,19,0.263,20,0.426,21,1.163,22,1.021,23,0.548,24,0.669,25,1.074,26,0.968,27,0.76,28,0.909,29,0.894,30,0.337,31,0.327,32,0.727,33,0.727,34,0.548,35,0.464,36,0.548,37,0.464,38,1.072,39,0.548,40,0.505,41,0.505,42,0.727,43,0.548,44,0.426,45,0.505,46,0.464,47,0.505,48,0.505,49,0.426,50,0.505,51,0.548,52,0.548,53,0.505,54,0.505,55,0.505,56,0.505,57,0.505,58,0.505,59,0.548,60,0.505,61,0.548,62,0.505,63,0.548,64,0.505,65,0.505,66,0.505,67,0.505,68,0.505,69,0.505,70,0.505,71,0.505,72,0.505,73,0.505,74,0.464,75,0.548,76,0.505,77,0.548,78,0.548,79,0.505,80,0.727,81,1.074,82,0.727,83,0.727,84,0.988,85,0.505,86,0.505,87,0.909,88,0.548,89,0.505,90,0.464,91,0.505,92,0.505,93,0.505,94,0.505,95,0.505,96,0.505,97,0.505,98,0.505,99,0.505,100,0.727,101,0.017,102,0.017]],["title/interfaces/Rule.html",[0,0.106,22,0.511]],["body/interfaces/Rule.html",[0,0.21,1,0.499,2,0.191,3,0.163,4,0.163,5,0.191,6,0.191,7,0.541,8,0.163,9,0.319,10,1.103,11,1.196,12,0.982,13,0.268,14,0.029,16,0.163,17,0.541,18,0.499,19,0.263,20,0.42,21,1.166,22,1.017,23,0.541,24,0.663,25,1.072,26,0.989,27,0.832,28,0.995,29,0.943,30,0.375,31,0.325,32,0.721,33,0.721,34,0.541,35,0.459,36,0.541,37,0.459,38,1.067,39,0.541,40,0.499,41,0.499,42,0.721,43,0.541,44,0.42,45,0.499,46,0.459,47,0.499,48,0.499,49,0.42,50,0.499,51,0.541,52,0.541,53,0.499,54,0.499,55,0.499,56,0.499,57,0.499,58,0.499,59,0.541,60,0.499,61,0.541,62,0.499,63,0.541,64,0.499,65,0.499,66,0.499,67,0.499,68,0.499,69,0.499,70,0.499,71,0.499,72,0.499,73,0.499,74,0.459,75,0.541,76,0.499,77,0.541,78,0.541,79,0.499,80,0.721,81,1.072,82,0.721,83,0.721,84,0.721,85,0.499,86,0.499,87,0.904,88,0.541,89,0.499,90,0.459,91,0.499,92,0.499,93,0.499,94,0.499,95,0.499,96,0.499,97,0.499,98,0.499,99,0.499,100,0.499,101,0.017,102,0.017]],["title/interfaces/RuleSet.html",[0,0.106,12,0.511]],["body/interfaces/RuleSet.html",[0,0.21,1,0.504,2,0.193,3,0.165,4,0.165,5,0.193,6,0.193,7,0.547,8,0.165,9,0.321,10,1.105,11,1.199,12,0.99,13,0.254,14,0.029,16,0.165,17,0.547,18,0.504,19,0.263,20,0.785,21,1.164,22,1.024,23,0.924,24,0.908,25,1.087,26,0.967,27,0.759,28,0.908,29,0.893,30,0.355,31,0.327,32,0.726,33,0.726,34,0.547,35,0.463,36,0.547,37,0.463,38,1.071,39,0.547,40,0.504,41,0.504,42,0.726,43,0.547,44,0.425,45,0.504,46,0.463,47,0.504,48,0.504,49,0.425,50,0.504,51,0.547,52,0.547,53,0.504,54,0.504,55,0.504,56,0.504,57,0.504,58,0.504,59,0.547,60,0.504,61,0.547,62,0.504,63,0.547,64,0.504,65,0.504,66,0.504,67,0.504,68,0.504,69,0.504,70,0.504,71,0.504,72,0.504,73,0.504,74,0.463,75,0.547,76,0.504,77,0.547,78,0.547,79,0.504,80,0.726,81,1.073,82,0.726,83,0.726,84,0.726,85,0.504,86,0.504,87,0.908,88,0.547,89,0.504,90,0.463,91,0.504,92,0.504,93,0.504,94,0.504,95,0.504,96,0.504,97,0.504,98,0.504,99,0.504,100,0.504,101,0.017,102,0.017]],["title/interfaces/SwitchGroupContext.html",[0,0.106,86,0.607]],["body/interfaces/SwitchGroupContext.html",[0,0.21,1,0.505,2,0.194,3,0.165,4,0.165,5,0.194,6,0.194,7,0.548,8,0.165,9,0.322,10,1.149,11,1.246,12,0.996,13,0.254,14,0.029,15,1.592,16,0.165,17,0.548,18,0.505,19,0.263,20,0.426,21,1.163,22,1.015,23,0.548,24,0.669,25,1.074,26,0.968,27,0.76,28,0.909,29,0.894,30,0.337,31,0.327,32,0.727,33,0.727,34,0.548,35,0.464,36,0.548,37,0.464,38,1.072,39,0.548,40,0.505,41,0.505,42,0.727,43,0.548,44,0.426,45,0.505,46,0.464,47,0.505,48,0.505,49,0.426,50,0.505,51,0.548,52,0.548,53,0.505,54,0.505,55,0.505,56,0.505,57,0.505,58,0.505,59,0.548,60,0.505,61,0.548,62,0.505,63,0.548,64,0.505,65,0.505,66,0.505,67,0.505,68,0.505,69,0.505,70,0.505,71,0.505,72,0.505,73,0.505,74,0.464,75,0.548,76,0.505,77,0.548,78,0.548,79,0.505,80,0.727,81,1.074,82,0.727,83,0.727,84,0.727,85,0.505,86,0.727,87,0.998,88,0.548,89,0.505,90,0.464,91,0.505,92,0.505,93,0.505,94,0.505,95,0.505,96,0.505,97,0.505,98,0.505,99,0.505,100,0.505,101,0.017,102,0.017]],["title/changelog.html",[207,1.809,208,1.809,209,2.314]],["body/changelog.html",[0,0.151,9,0.287,12,0.548,13,0.177,14,0.02,15,1.11,19,0.143,20,0.548,22,0.73,24,0.797,25,0.598,26,0.821,27,0.832,28,0.996,29,0.548,35,0.598,37,0.896,41,0.65,44,0.73,45,0.65,46,0.598,49,0.548,60,0.65,85,0.65,87,0.797,90,0.797,101,0.02,102,0.02,106,0.956,108,2.596,112,2.596,123,1.195,130,2.32,153,3.092,160,3.092,162,3.461,166,2.596,170,2.596,174,3.461,178,2.596,189,3.955,197,2.596,200,2.596,205,3.461,209,2.967,210,2.967,211,2.967,212,6.27,213,3.529,214,6.51,215,4.704,216,4.942,217,3.955,218,3.529,219,5.291,220,3.529,221,3.529,222,5.39,223,2.967,224,3.529,225,3.955,226,3.955,227,2.967,228,2.967,229,3.955,230,3.529,231,2.967,232,2.967,233,2.967,234,3.529,235,3.955,236,3.529,237,3.529,238,5.291,239,2.967,240,3.529,241,3.529,242,3.955,243,2.967,244,2.967,245,4.152,246,2.967,247,3.529,248,2.596,249,2.967,250,2.967,251,3.529,252,2.967,253,5.291,254,3.955,255,2.596,256,3.529,257,3.529,258,3.529,259,4.704,260,3.529,261,4.744,262,3.955,263,3.529,264,3.529,265,3.529,266,3.529,267,3.955,268,4.704,269,4.704,270,3.955,271,4.704,272,2.967,273,3.955,274,3.529,275,3.529,276,3.529,277,2.967,278,2.967,279,2.967,280,2.967,281,2.967,282,3.529,283,3.529,284,3.529,285,3.529,286,3.529,287,3.529,288,3.529,289,3.529,290,3.529,291,3.529,292,3.529,293,3.529,294,3.529,295,2.967,296,3.529,297,4.448,298,3.529,299,2.967,300,3.529,301,2.967,302,2.967,303,3.529,304,3.529,305,3.529,306,3.529,307,3.529,308,3.529]],["title/dependencies.html",[127,2.354,309,2.752]],["body/dependencies.html",[14,0.028,101,0.025,102,0.025,121,1.899,127,3.564,151,4.38,310,5.21,311,5.21,312,5.21,313,5.993]],["title/index.html",[8,0.166,207,1.809,208,1.809]],["body/index.html",[0,0.058,3,0.109,9,0.235,10,0.983,12,0.917,13,0.305,14,0.029,15,1.287,16,0.216,19,0.117,20,0.635,21,0.904,22,1.008,24,0.307,25,0.488,26,0.972,27,0.827,28,0.977,29,0.738,30,0.348,31,0.426,33,0.333,35,0.307,44,0.281,46,0.307,47,0.333,48,0.333,49,0.693,50,0.333,53,0.333,54,0.333,55,0.333,56,0.333,57,0.333,58,0.333,62,0.531,64,0.333,65,0.333,66,0.333,67,0.333,68,0.333,69,0.333,70,0.333,71,0.333,72,0.333,73,0.333,74,0.693,76,0.333,79,0.333,80,0.333,81,0.926,82,0.333,83,0.333,84,0.333,87,0.756,90,0.608,92,0.333,94,0.333,95,0.333,96,0.333,101,0.012,102,0.015,106,0.608,108,1.331,112,1.331,114,1.132,123,1.215,126,1.713,127,1.076,130,1.893,131,1.713,153,4.096,155,1.521,159,2.706,160,2.358,162,1.331,166,1.331,170,1.331,174,1.331,178,4.299,184,3.016,186,4.193,197,1.331,200,3.285,202,1.521,205,2.119,206,1.521,207,1.19,208,1.19,210,3.016,211,2.421,216,3.754,217,3.016,222,2.421,223,4.597,225,3.754,226,4.912,227,2.421,228,1.521,229,1.521,231,2.421,232,1.521,233,1.521,235,1.521,239,1.521,242,4.848,243,1.521,244,2.421,245,3.285,246,1.521,248,4.348,249,4.193,250,2.421,252,4.969,254,2.421,255,1.331,261,1.521,262,1.521,267,3.754,270,3.438,272,1.521,273,5.238,277,3.016,279,2.421,281,1.521,295,2.421,297,3.438,299,2.421,301,3.016,302,4.912,314,1.81,315,5.177,316,1.81,317,1.81,318,2.421,319,1.81,320,1.81,321,2.88,322,2.88,323,2.88,324,1.81,325,1.81,326,1.81,327,1.81,328,1.81,329,3.016,330,1.81,331,1.81,332,1.81,333,2.88,334,1.81,335,1.81,336,1.81,337,1.81,338,4.465,339,1.81,340,4.09,341,3.588,342,3.588,343,3.588,344,1.81,345,2.88,346,1.81,347,1.81,348,1.81,349,3.588,350,3.588,351,4.756,352,1.81,353,1.81,354,1.81,355,1.521,356,2.88,357,2.88,358,3.588,359,1.81,360,1.81,361,1.81,362,4.756,363,2.88,364,2.88,365,1.81,366,1.81,367,1.81,368,5.335,369,1.81,370,1.81,371,1.81,372,1.81,373,1.521,374,2.88,375,2.88,376,2.88,377,1.81,378,4.09,379,3.588,380,3.588,381,1.81,382,1.81,383,2.88,384,1.81,385,1.81,386,1.81,387,1.81,388,1.81,389,1.81,390,1.81,391,1.81,392,2.88,393,2.88,394,5.468,395,1.81,396,3.016,397,1.81,398,2.88,399,4.465,400,1.81,401,1.81,402,1.81,403,1.81,404,1.81,405,2.88,406,1.81,407,2.88,408,5.468,409,5.468,410,1.81,411,4.756,412,1.81,413,1.81,414,5.335,415,5.335,416,5.335,417,5.582,418,5.468,419,1.81,420,1.81,421,1.521,422,1.81,423,1.81,424,1.81,425,1.81,426,1.81,427,1.81,428,1.81,429,1.81,430,1.81,431,1.81,432,1.81]],["title/license.html",[207,1.809,208,1.809,433,2.314]],["body/license.html",[4,0.267,14,0.023,20,0.686,101,0.023,102,0.023,131,2.631,146,3.254,188,4.948,248,4,255,3.254,280,4.57,329,3.719,355,3.719,421,3.719,433,3.719,434,4.424,435,5.886,436,4.424,437,4.424,438,4.424,439,4.424,440,5.437,441,4.424,442,4.424,443,4.424,444,4.424,445,5.437,446,4.424,447,6.14,448,6.615,449,4.424,450,5.437,451,4.424,452,5.886,453,4.424,454,4.424,455,4.424,456,4.424,457,4.424,458,4.424,459,4.424,460,4.424,461,4.424,462,4.424,463,5.437,464,5.437,465,4.424,466,4.424,467,5.437,468,4.424,469,4.424,470,4.424,471,4.424,472,4.424,473,4.424,474,4.424,475,4.424,476,4.424,477,4.424,478,4.424,479,4.424,480,4.424,481,4.424,482,4.424,483,4.424,484,4.424,485,4.424,486,4.424,487,4.424,488,4.424,489,4.424]],["title/modules.html",[125,2.67]],["body/modules.html",[14,0.026,101,0.026,102,0.026,125,3.14,126,3.14,318,4.438,490,5.28,491,5.28,492,5.28]],["title/overview.html",[493,3.774]],["body/overview.html",[0,0.13,14,0.029,19,0.163,101,0.022,102,0.022,106,0.683,107,4.187,125,3.051,126,4.098,127,2.398,128,3.39,129,3.39,130,2.651,131,2.398,132,3.39,133,3.39,134,3.39,135,4.687,136,4.187,137,4.187,138,4.187,139,4.187,140,4.187,141,4.187,142,4.187,143,4.187,144,4.314,145,3.39,146,2.967,153,2.651,373,4.314,493,3.39,494,4.033,495,4.033]],["title/miscellaneous/variables.html",[496,2.314,497,3.328]],["body/miscellaneous/variables.html",[5,0.343,6,0.343,8,0.292,13,0.288,14,0.029,27,0.814,37,1.037,101,0.024,102,0.024,131,3.417,135,4.227,245,4.227,278,4.83,396,4.83,496,4.076,497,4.076,498,6.124,499,5.746,500,6.124,501,4.848,502,5.746,503,5.746,504,4.848]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":380,"title":{},"body":{"index.html":{}}}],["0.2.3",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["0.3.3",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":373,"title":{},"body":{"index.html":{},"overview.html":{}}}],["12",{"_index":360,"title":{},"body":{"index.html":{}}}],["19",{"_index":495,"title":{},"body":{"overview.html":{}}}],["2",{"_index":338,"title":{},"body":{"index.html":{}}}],["2018",{"_index":437,"title":{},"body":{"license.html":{}}}],["22",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":301,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4.0.0",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["49",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["5.4.2",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["6.0",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["69",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":494,"title":{},"body":{"overview.html":{}}}],["_type",{"_index":195,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["abov",{"_index":421,"title":{},"body":{"index.html":{},"license.html":{}}}],["accessor",{"_index":181,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["accordion/collaps",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":484,"title":{},"body":{"license.html":{}}}],["ad",{"_index":231,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["add",{"_index":222,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["addicon",{"_index":48,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["addrul",{"_index":82,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["addruleset",{"_index":80,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["ag",{"_index":342,"title":{},"body":{"index.html":{}}}],["alert",{"_index":375,"title":{},"body":{"index.html":{}}}],["align",{"_index":365,"title":{},"body":{"index.html":{}}}],["allow",{"_index":404,"title":{},"body":{"index.html":{}}}],["allowcollaps",{"_index":232,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["allowemptyruleset",{"_index":75,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["allowruleset",{"_index":395,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":255,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["angular",{"_index":249,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":151,"title":{},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":121,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"dependencies.html":{}}}],["angular/form",{"_index":18,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["angular2",{"_index":210,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["anoth",{"_index":382,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":334,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":340,"title":{},"body":{"index.html":{}}}],["app.component.t",{"_index":341,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":332,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":333,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":339,"title":{},"body":{"index.html":{}}}],["aris",{"_index":488,"title":{},"body":{"license.html":{}}}],["array",{"_index":23,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["arrow",{"_index":108,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"changelog.html":{},"index.html":{}}}],["arrowicon",{"_index":46,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["arrowiconbutton",{"_index":45,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{}}}],["arrowiconcontext",{"_index":1,"title":{"interfaces/ArrowIconContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["associ",{"_index":449,"title":{},"body":{"license.html":{}}}],["author",{"_index":477,"title":{},"body":{"license.html":{}}}],["auto",{"_index":362,"title":{},"body":{"index.html":{}}}],["base",{"_index":316,"title":{},"body":{"index.html":{}}}],["basic",{"_index":331,"title":{},"body":{"index.html":{}}}],["be",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":277,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["birthday",{"_index":349,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":130,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":374,"title":{},"body":{"index.html":{}}}],["break",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":492,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":490,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":357,"title":{},"body":{"index.html":{}}}],["bug",{"_index":287,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":430,"title":{},"body":{"index.html":{}}}],["builder",{"_index":315,"title":{},"body":{"index.html":{}}}],["builder.component.t",{"_index":500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder.interfaces.t",{"_index":7,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["builder.interfaces.ts:21",{"_index":105,"title":{},"body":{"interfaces/FieldMap.html":{}}}],["builder.interfaces.ts:43",{"_index":104,"title":{},"body":{"interfaces/EntityMap.html":{}}}],["builder.module.t",{"_index":148,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["builder/queri",{"_index":6,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":49,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["button.directive.t",{"_index":201,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:4",{"_index":203,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:5",{"_index":204,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["buttongroup",{"_index":50,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["buttongroupcontext",{"_index":99,"title":{"interfaces/ButtonGroupContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["c",{"_index":436,"title":{},"body":{"license.html":{}}}],["callback",{"_index":267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["categori",{"_index":281,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["caus",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":367,"title":{},"body":{"index.html":{}}}],["chang",{"_index":216,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changefield",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":209,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["charact",{"_index":289,"title":{},"body":{"changelog.html":{}}}],["charg",{"_index":444,"title":{},"body":{"license.html":{}}}],["chevron",{"_index":354,"title":{},"body":{"index.html":{}}}],["child",{"_index":399,"title":{},"body":{"index.html":{}}}],["claim",{"_index":480,"title":{},"body":{"license.html":{}}}],["class",{"_index":123,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["classnam",{"_index":227,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cluster_querybuildermodul",{"_index":132,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_declar",{"_index":133,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_export",{"_index":134,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["code",{"_index":387,"title":{},"body":{"index.html":{}}}],["coercevalueforoper",{"_index":85,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{}}}],["col",{"_index":378,"title":{},"body":{"index.html":{}}}],["collaps",{"_index":24,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["collapse/accordion",{"_index":424,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":150,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["complet",{"_index":381,"title":{},"body":{"index.html":{}}}],["compon",{"_index":153,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["condit",{"_index":20,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["conditionvalu",{"_index":88,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["config",{"_index":225,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configur",{"_index":401,"title":{},"body":{"index.html":{}}}],["connect",{"_index":489,"title":{},"body":{"license.html":{}}}],["connector",{"_index":63,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(publ",{"_index":124,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(templ",{"_index":116,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["contain",{"_index":418,"title":{},"body":{"index.html":{}}}],["context",{"_index":416,"title":{},"body":{"index.html":{}}}],["contract",{"_index":485,"title":{},"body":{"license.html":{}}}],["control",{"_index":368,"title":{},"body":{"index.html":{}}}],["control_value_accessor",{"_index":498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copi",{"_index":447,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":435,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":422,"title":{},"body":{"index.html":{}}}],["css",{"_index":261,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["current",{"_index":417,"title":{},"body":{"index.html":{}}}],["custom",{"_index":242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["d",{"_index":363,"title":{},"body":{"index.html":{}}}],["damag",{"_index":481,"title":{},"body":{"license.html":{}}}],["danger",{"_index":376,"title":{},"body":{"index.html":{}}}],["data",{"_index":322,"title":{},"body":{"index.html":{}}}],["date",{"_index":350,"title":{},"body":{"index.html":{}}}],["deal",{"_index":450,"title":{},"body":{"license.html":{}}}],["declar",{"_index":129,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["default",{"_index":245,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultfield",{"_index":43,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["defaultoper",{"_index":36,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["defaultvalu",{"_index":35,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["defin",{"_index":103,"title":{},"body":{"interfaces/EntityMap.html":{},"interfaces/FieldMap.html":{},"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["demo",{"_index":252,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["depend",{"_index":127,"title":{"dependencies.html":{}},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":394,"title":{},"body":{"index.html":{}}}],["detail",{"_index":392,"title":{},"body":{"index.html":{}}}],["differ",{"_index":398,"title":{},"body":{"index.html":{}}}],["direct",{"_index":106,"title":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["directive({selector",{"_index":122,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["disabl",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["display",{"_index":279,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["distribut",{"_index":456,"title":{},"body":{"license.html":{}}}],["document",{"_index":329,"title":{},"body":{"index.html":{},"license.html":{}}}],["done",{"_index":415,"title":{},"body":{"index.html":{}}}],["edit",{"_index":327,"title":{},"body":{"index.html":{}}}],["element",{"_index":400,"title":{},"body":{"index.html":{}}}],["elementref",{"_index":158,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{}}}],["empti",{"_index":160,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{},"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["emptymessag",{"_index":244,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["emptywarn",{"_index":65,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["emptywarningcontext",{"_index":89,"title":{"interfaces/EmptyWarningContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["enabl",{"_index":233,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["entiti",{"_index":29,"title":{"interfaces/Entity.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["entity.directive.t",{"_index":165,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:4",{"_index":167,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:5",{"_index":168,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entitycontext",{"_index":91,"title":{"interfaces/EntityContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitycontrol",{"_index":68,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["entitycontrols",{"_index":69,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["entitymap",{"_index":42,"title":{"interfaces/EntityMap.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitynam",{"_index":96,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["entityvalu",{"_index":92,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["error",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["es5",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":476,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":302,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["expand",{"_index":423,"title":{},"body":{"index.html":{}}}],["export",{"_index":19,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":469,"title":{},"body":{"license.html":{}}}],["extens",{"_index":300,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":348,"title":{},"body":{"index.html":{}}}],["fa",{"_index":351,"title":{},"body":{"index.html":{}}}],["fals",{"_index":397,"title":{},"body":{"index.html":{}}}],["featur",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["femal",{"_index":347,"title":{},"body":{"index.html":{}}}],["field",{"_index":26,"title":{"interfaces/Field.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["field'",{"_index":419,"title":{},"body":{"index.html":{}}}],["field.directive.t",{"_index":169,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:4",{"_index":171,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:5",{"_index":172,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.nam",{"_index":388,"title":{},"body":{"index.html":{}}}],["fieldcontext",{"_index":93,"title":{"interfaces/FieldContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldcontrol",{"_index":66,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["fieldcontrols",{"_index":67,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["fieldmap",{"_index":32,"title":{"interfaces/FieldMap.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldnam",{"_index":77,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldvalu",{"_index":94,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"license.html":{}}}],["first",{"_index":288,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":472,"title":{},"body":{"license.html":{}}}],["fix",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":364,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":320,"title":{},"body":{"index.html":{}}}],["follow",{"_index":462,"title":{},"body":{"license.html":{}}}],["form",{"_index":270,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["formsmodul",{"_index":152,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["forwardref",{"_index":503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":443,"title":{},"body":{"license.html":{}}}],["full",{"_index":384,"title":{},"body":{"index.html":{}}}],["function",{"_index":15,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/OperatorContext.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["furnish",{"_index":460,"title":{},"body":{"license.html":{}}}],["gender",{"_index":345,"title":{},"body":{"index.html":{}}}],["get",{"_index":207,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdisabledst",{"_index":11,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["getfield",{"_index":95,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["getinputtyp",{"_index":78,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["getoper",{"_index":76,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["getopt",{"_index":79,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["grant",{"_index":442,"title":{},"body":{"license.html":{}}}],["group",{"_index":358,"title":{},"body":{"index.html":{}}}],["group.directive.t",{"_index":154,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:4",{"_index":156,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:5",{"_index":157,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["handl",{"_index":223,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["heavi",{"_index":319,"title":{},"body":{"index.html":{}}}],["here",{"_index":326,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":441,"title":{},"body":{"license.html":{}}}],["holder",{"_index":478,"title":{},"body":{"license.html":{}}}],["icon",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["icon.directive.t",{"_index":109,"title":{},"body":{"directives/QueryArrowIconDirective.html":{}}}],["icon.directive.ts:4",{"_index":118,"title":{},"body":{"directives/QueryArrowIconDirective.html":{}}}],["icon.directive.ts:5",{"_index":120,"title":{},"body":{"directives/QueryArrowIconDirective.html":{}}}],["ie11",{"_index":304,"title":{},"body":{"changelog.html":{}}}],["impli",{"_index":470,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":10,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["inabl",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":452,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["inlin",{"_index":371,"title":{},"body":{"index.html":{}}}],["input",{"_index":159,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"index.html":{}}}],["input.directive.t",{"_index":173,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:14",{"_index":176,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:16",{"_index":180,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:7",{"_index":179,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:8",{"_index":183,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["inputcontext",{"_index":98,"title":{"interfaces/InputContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["inputcontrol",{"_index":72,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["inputcontrols",{"_index":73,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["instal",{"_index":323,"title":{},"body":{"index.html":{}}}],["instead",{"_index":403,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":41,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{}}}],["invalid/valid",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["invalidruleset",{"_index":64,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["ionicframework",{"_index":337,"title":{},"body":{"index.html":{}}}],["ionicmodule.forroot(appcompon",{"_index":336,"title":{},"body":{"index.html":{}}}],["issu",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["it'",{"_index":414,"title":{},"body":{"index.html":{}}}],["item",{"_index":366,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":317,"title":{},"body":{"index.html":{}}}],["key",{"_index":33,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["kind",{"_index":468,"title":{},"body":{"license.html":{}}}],["label",{"_index":369,"title":{},"body":{"index.html":{}}}],["legend",{"_index":128,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["liabil",{"_index":482,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":479,"title":{},"body":{"license.html":{}}}],["librari",{"_index":383,"title":{},"body":{"index.html":{}}}],["licens",{"_index":433,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":280,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":330,"title":{},"body":{"index.html":{}}}],["list",{"_index":408,"title":{},"body":{"index.html":{}}}],["localrulemeta",{"_index":40,"title":{"interfaces/LocalRuleMeta.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["look",{"_index":386,"title":{},"body":{"index.html":{}}}],["m",{"_index":343,"title":{},"body":{"index.html":{}}}],["main",{"_index":402,"title":{},"body":{"index.html":{}}}],["male",{"_index":346,"title":{},"body":{"index.html":{}}}],["map",{"_index":407,"title":{},"body":{"index.html":{}}}],["match",{"_index":102,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":250,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["merchant",{"_index":471,"title":{},"body":{"license.html":{}}}],["merg",{"_index":454,"title":{},"body":{"license.html":{}}}],["messag",{"_index":90,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["metadata",{"_index":110,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["minor",{"_index":283,"title":{},"body":{"changelog.html":{}}}],["minu",{"_index":352,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":496,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":434,"title":{},"body":{"license.html":{}}}],["ml",{"_index":361,"title":{},"body":{"index.html":{}}}],["mode",{"_index":235,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["modern",{"_index":314,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":453,"title":{},"body":{"license.html":{}}}],["modul",{"_index":125,"title":{"modules/QueryBuilderModule.html":{},"modules.html":{}},"body":{"modules/QueryBuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":299,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["multi",{"_index":278,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["multipl",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["multiselect",{"_index":292,"title":{},"body":{"changelog.html":{}}}],["mx",{"_index":377,"title":{},"body":{"index.html":{}}}],["name",{"_index":31,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["nest",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":297,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_valid",{"_index":504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel",{"_index":295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngmodul",{"_index":149,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["ngmodule(import",{"_index":335,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":475,"title":{},"body":{"license.html":{}}}],["notic",{"_index":463,"title":{},"body":{"license.html":{}}}],["now",{"_index":282,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":324,"title":{},"body":{"index.html":{}}}],["null",{"_index":39,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["nullabl",{"_index":34,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["number",{"_index":344,"title":{},"body":{"index.html":{}}}],["object",{"_index":226,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["obtain",{"_index":446,"title":{},"body":{"license.html":{}}}],["onchang",{"_index":87,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["oper",{"_index":28,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["operator.directive.t",{"_index":196,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:4",{"_index":198,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:5",{"_index":199,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operatorcontext",{"_index":97,"title":{"interfaces/OperatorContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["operatorcontrol",{"_index":70,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["operatorcontrols",{"_index":71,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["operatormap",{"_index":406,"title":{},"body":{"index.html":{}}}],["opt.nam",{"_index":389,"title":{},"body":{"index.html":{}}}],["option",{"_index":30,"title":{"interfaces/Option.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["order",{"_index":359,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":487,"title":{},"body":{"license.html":{}}}],["out",{"_index":146,"title":{},"body":{"modules/QueryBuilderModule.html":{},"license.html":{},"overview.html":{}}}],["overrid",{"_index":229,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["overview",{"_index":493,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":193,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["p",{"_index":372,"title":{},"body":{"index.html":{}}}],["packag",{"_index":309,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":119,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["parent",{"_index":38,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["part",{"_index":410,"title":{},"body":{"index.html":{}}}],["particular",{"_index":473,"title":{},"body":{"license.html":{}}}],["pass",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["peer",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["permiss",{"_index":440,"title":{},"body":{"license.html":{}}}],["permit",{"_index":459,"title":{},"body":{"license.html":{}}}],["person",{"_index":445,"title":{},"body":{"license.html":{}}}],["play",{"_index":325,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":385,"title":{},"body":{"index.html":{}}}],["plu",{"_index":353,"title":{},"body":{"index.html":{}}}],["plunker",{"_index":328,"title":{},"body":{"index.html":{}}}],["portion",{"_index":466,"title":{},"body":{"license.html":{}}}],["pr",{"_index":379,"title":{},"body":{"index.html":{}}}],["privat",{"_index":194,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["programat",{"_index":190,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["project",{"_index":429,"title":{},"body":{"index.html":{}}}],["proper",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["provid",{"_index":131,"title":{},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":113,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["publish",{"_index":455,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":474,"title":{},"body":{"license.html":{}}}],["px",{"_index":356,"title":{},"body":{"index.html":{}}}],["queri",{"_index":178,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryarrowicon",{"_index":112,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryarrowicondirect",{"_index":107,"title":{"directives/QueryArrowIconDirective.html":{}},"body":{"directives/QueryArrowIconDirective.html":{},"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["querybuild",{"_index":211,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["querybuilderclassnam",{"_index":44,"title":{"interfaces/QueryBuilderClassNames.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["querybuildercompon",{"_index":135,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["querybuilderconfig",{"_index":74,"title":{"interfaces/QueryBuilderConfig.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["querybuildermodul",{"_index":126,"title":{"modules/QueryBuilderModule.html":{}},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["querybuttongroup",{"_index":155,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"index.html":{}}}],["querybuttongroupdirect",{"_index":136,"title":{"directives/QueryButtonGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"overview.html":{}}}],["queryemptywarn",{"_index":162,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryemptywarningdirect",{"_index":137,"title":{"directives/QueryEmptyWarningDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryEmptyWarningDirective.html":{},"overview.html":{}}}],["queryent",{"_index":166,"title":{},"body":{"directives/QueryEntityDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryentitydirect",{"_index":138,"title":{"directives/QueryEntityDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryEntityDirective.html":{},"overview.html":{}}}],["queryfield",{"_index":170,"title":{},"body":{"directives/QueryFieldDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryfielddirect",{"_index":139,"title":{"directives/QueryFieldDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryFieldDirective.html":{},"overview.html":{}}}],["queryinput",{"_index":174,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryinputdirect",{"_index":140,"title":{"directives/QueryInputDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryInputDirective.html":{},"overview.html":{}}}],["queryinputtyp",{"_index":175,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryinputtype(valu",{"_index":187,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryoper",{"_index":197,"title":{},"body":{"directives/QueryOperatorDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryoperatordirect",{"_index":141,"title":{"directives/QueryOperatorDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryOperatorDirective.html":{},"overview.html":{}}}],["queryremovebutton",{"_index":202,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"index.html":{}}}],["queryremovebuttondirect",{"_index":142,"title":{"directives/QueryRemoveButtonDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryRemoveButtonDirective.html":{},"overview.html":{}}}],["queryswitchgroup",{"_index":206,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["queryswitchgroupdirect",{"_index":143,"title":{"directives/QuerySwitchGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QuerySwitchGroupDirective.html":{},"overview.html":{}}}],["quick",{"_index":390,"title":{},"body":{"index.html":{}}}],["radio",{"_index":370,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":391,"title":{},"body":{"index.html":{}}}],["remov",{"_index":200,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"changelog.html":{},"index.html":{}}}],["removebutton",{"_index":51,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removebuttoncontext",{"_index":100,"title":{"interfaces/RemoveButtonContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removebuttons",{"_index":52,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removeicon",{"_index":47,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["removerul",{"_index":84,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["removeruleset",{"_index":83,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["renam",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["replac",{"_index":409,"title":{},"body":{"index.html":{}}}],["requir",{"_index":393,"title":{},"body":{"index.html":{}}}],["reset",{"_index":145,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["restrict",{"_index":451,"title":{},"body":{"license.html":{}}}],["result",{"_index":101,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":184,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["rewrit",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":355,"title":{},"body":{"index.html":{},"license.html":{}}}],["rightalign",{"_index":58,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["root",{"_index":285,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":62,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["rule",{"_index":22,"title":{"interfaces/Rule.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["ruleset",{"_index":12,"title":{"interfaces/RuleSet.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["run",{"_index":431,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":273,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seed",{"_index":428,"title":{},"body":{"index.html":{}}}],["select",{"_index":217,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["selector",{"_index":111,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["sell",{"_index":458,"title":{},"body":{"license.html":{}}}],["seriou",{"_index":294,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":186,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["setqueryinputtype(valu",{"_index":182,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["setter",{"_index":191,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["shall",{"_index":464,"title":{},"body":{"license.html":{}}}],["show",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":290,"title":{},"body":{"changelog.html":{}}}],["singl",{"_index":425,"title":{},"body":{"index.html":{}}}],["softwar",{"_index":448,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["specif",{"_index":413,"title":{},"body":{"index.html":{}}}],["specifi",{"_index":411,"title":{},"body":{"index.html":{}}}],["src/.../queri",{"_index":499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/components/queri",{"_index":5,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["src/queri",{"_index":147,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["start",{"_index":208,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":254,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["store",{"_index":405,"title":{},"body":{"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["structur",{"_index":228,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["style",{"_index":262,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["subject",{"_index":461,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":457,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":465,"title":{},"body":{"license.html":{}}}],["support",{"_index":318,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":491,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":205,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["switchcontrol",{"_index":57,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchgroup",{"_index":54,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchgroupcontext",{"_index":86,"title":{"interfaces/SwitchGroupContext.html":{}},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["switchlabel",{"_index":55,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchradio",{"_index":56,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchrow",{"_index":53,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["syntax",{"_index":420,"title":{},"body":{"index.html":{}}}],["target",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["templat",{"_index":114,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["templateref",{"_index":117,"title":{},"body":{"directives/QueryArrowIconDirective.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["test",{"_index":432,"title":{},"body":{"index.html":{}}}],["text",{"_index":246,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that'",{"_index":426,"title":{},"body":{"index.html":{}}}],["this._typ",{"_index":185,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["tort",{"_index":486,"title":{},"body":{"license.html":{}}}],["touch",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["transit",{"_index":59,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["tree",{"_index":61,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["treecontain",{"_index":60,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{}}}],["trigger",{"_index":192,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["true",{"_index":396,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tweak",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"directives/QueryArrowIconDirective.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type/queryinputtyp",{"_index":412,"title":{},"body":{"index.html":{}}}],["uniqu",{"_index":177,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["unrecogn",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["updat",{"_index":189,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{}}}],["us",{"_index":248,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":272,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["useexist",{"_index":502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":37,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":17,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["valu",{"_index":27,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vanilla",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["variabl",{"_index":497,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":81,"title":{},"body":{"interfaces/ArrowIconContext.html":{},"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["warn",{"_index":243,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["warning.directive.t",{"_index":161,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{}}}],["warning.directive.ts:4",{"_index":163,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{}}}],["warning.directive.ts:5",{"_index":164,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{}}}],["warranti",{"_index":467,"title":{},"body":{"license.html":{}}}],["way",{"_index":321,"title":{},"body":{"index.html":{}}}],["whether",{"_index":483,"title":{},"body":{"license.html":{}}}],["without",{"_index":188,"title":{},"body":{"directives/QueryInputDirective.html":{},"license.html":{}}}],["work",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":427,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["zeb",{"_index":438,"title":{},"body":{"license.html":{}}}],["zhao",{"_index":439,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":144,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ArrowIconContext.html":{"url":"interfaces/ArrowIconContext.html","title":"interface - ArrowIconContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ArrowIconContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ButtonGroupContext.html":{"url":"interfaces/ButtonGroupContext.html","title":"interface - ButtonGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ButtonGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        addRule\n                                \n                                \n                                        addRuleSet\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyWarningContext.html":{"url":"interfaces/EmptyWarningContext.html","title":"interface - EmptyWarningContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyWarningContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultField\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultField\n                                    \n                                \n                                \n                                    \n                                        defaultField:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityContext.html":{"url":"interfaces/EntityContext.html","title":"interface - EntityContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        entities\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityMap.html":{"url":"interfaces/EntityMap.html","title":"interface - EntityMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Entity\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:43\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultOperator\n                                \n                                \n                                            Optional\n                                        defaultValue\n                                \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        operators\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        validator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOperator\n                                    \n                                \n                                \n                                    \n                                        defaultOperator:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultValue\n                                    \n                                \n                                \n                                    \n                                        defaultValue:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                    \n                                \n                                \n                                    \n                                        validator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldContext.html":{"url":"interfaces/FieldContext.html","title":"interface - FieldContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        fields\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        getFields\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFields\n                                    \n                                \n                                \n                                    \n                                        getFields:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldMap.html":{"url":"interfaces/FieldMap.html","title":"interface - FieldMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Field\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:21\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputContext.html":{"url":"interfaces/InputContext.html","title":"interface - InputContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InputContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        field\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     Field\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalRuleMeta.html":{"url":"interfaces/LocalRuleMeta.html","title":"interface - LocalRuleMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalRuleMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        invalid\n                                \n                                \n                                        ruleset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                    \n                                \n                                \n                                    \n                                        invalid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleset\n                                    \n                                \n                                \n                                    \n                                        ruleset:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperatorContext.html":{"url":"interfaces/OperatorContext.html","title":"interface - OperatorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OperatorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                                \n                                        operators\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Option.html":{"url":"interfaces/Option.html","title":"interface - Option","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryArrowIconDirective.html":{"url":"directives/QueryArrowIconDirective.html","title":"directive - QueryArrowIconDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryArrowIconDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-arrow-icon.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryArrowIcon]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-arrow-icon.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-arrow-icon.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryArrowIcon]'})\nexport class QueryArrowIconDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderClassNames.html":{"url":"interfaces/QueryBuilderClassNames.html","title":"interface - QueryBuilderClassNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderClassNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addIcon\n                                \n                                \n                                            Optional\n                                        arrowIcon\n                                \n                                \n                                            Optional\n                                        arrowIconButton\n                                \n                                \n                                            Optional\n                                        button\n                                \n                                \n                                            Optional\n                                        buttonGroup\n                                \n                                \n                                            Optional\n                                        collapsed\n                                \n                                \n                                            Optional\n                                        connector\n                                \n                                \n                                            Optional\n                                        emptyWarning\n                                \n                                \n                                            Optional\n                                        entityControl\n                                \n                                \n                                            Optional\n                                        entityControlSize\n                                \n                                \n                                            Optional\n                                        fieldControl\n                                \n                                \n                                            Optional\n                                        fieldControlSize\n                                \n                                \n                                            Optional\n                                        inputControl\n                                \n                                \n                                            Optional\n                                        inputControlSize\n                                \n                                \n                                            Optional\n                                        invalidRuleSet\n                                \n                                \n                                            Optional\n                                        operatorControl\n                                \n                                \n                                            Optional\n                                        operatorControlSize\n                                \n                                \n                                            Optional\n                                        removeButton\n                                \n                                \n                                            Optional\n                                        removeButtonSize\n                                \n                                \n                                            Optional\n                                        removeIcon\n                                \n                                \n                                            Optional\n                                        rightAlign\n                                \n                                \n                                            Optional\n                                        row\n                                \n                                \n                                            Optional\n                                        rule\n                                \n                                \n                                            Optional\n                                        ruleSet\n                                \n                                \n                                            Optional\n                                        switchControl\n                                \n                                \n                                            Optional\n                                        switchGroup\n                                \n                                \n                                            Optional\n                                        switchLabel\n                                \n                                \n                                            Optional\n                                        switchRadio\n                                \n                                \n                                            Optional\n                                        switchRow\n                                \n                                \n                                            Optional\n                                        transition\n                                \n                                \n                                            Optional\n                                        tree\n                                \n                                \n                                            Optional\n                                        treeContainer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addIcon\n                                    \n                                \n                                \n                                    \n                                        addIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrowIcon\n                                    \n                                \n                                \n                                    \n                                        arrowIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arrowIconButton\n                                    \n                                \n                                \n                                    \n                                        arrowIconButton:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        button\n                                    \n                                \n                                \n                                    \n                                        button:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttonGroup\n                                    \n                                \n                                \n                                    \n                                        buttonGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        collapsed\n                                    \n                                \n                                \n                                    \n                                        collapsed:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connector\n                                    \n                                \n                                \n                                    \n                                        connector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyWarning\n                                    \n                                \n                                \n                                    \n                                        emptyWarning:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControl\n                                    \n                                \n                                \n                                    \n                                        entityControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControlSize\n                                    \n                                \n                                \n                                    \n                                        entityControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControl\n                                    \n                                \n                                \n                                    \n                                        fieldControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControlSize\n                                    \n                                \n                                \n                                    \n                                        fieldControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControl\n                                    \n                                \n                                \n                                    \n                                        inputControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControlSize\n                                    \n                                \n                                \n                                    \n                                        inputControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidRuleSet\n                                    \n                                \n                                \n                                    \n                                        invalidRuleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControl\n                                    \n                                \n                                \n                                    \n                                        operatorControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControlSize\n                                    \n                                \n                                \n                                    \n                                        operatorControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButton\n                                    \n                                \n                                \n                                    \n                                        removeButton:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButtonSize\n                                    \n                                \n                                \n                                    \n                                        removeButtonSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeIcon\n                                    \n                                \n                                \n                                    \n                                        removeIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightAlign\n                                    \n                                \n                                \n                                    \n                                        rightAlign:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                    \n                                \n                                \n                                    \n                                        row:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rule\n                                    \n                                \n                                \n                                    \n                                        rule:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleSet\n                                    \n                                \n                                \n                                    \n                                        ruleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchControl\n                                    \n                                \n                                \n                                    \n                                        switchControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchGroup\n                                    \n                                \n                                \n                                    \n                                        switchGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchLabel\n                                    \n                                \n                                \n                                    \n                                        switchLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRadio\n                                    \n                                \n                                \n                                    \n                                        switchRadio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRow\n                                    \n                                \n                                \n                                    \n                                        switchRow:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transition\n                                    \n                                \n                                \n                                    \n                                        transition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tree\n                                    \n                                \n                                \n                                    \n                                        tree:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        treeContainer\n                                    \n                                \n                                \n                                    \n                                        treeContainer:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderConfig.html":{"url":"interfaces/QueryBuilderConfig.html","title":"interface - QueryBuilderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addRule\n                                \n                                \n                                            Optional\n                                        addRuleSet\n                                \n                                \n                                            Optional\n                                        allowEmptyRulesets\n                                \n                                \n                                            Optional\n                                        coerceValueForOperator\n                                \n                                \n                                            Optional\n                                        entities\n                                \n                                \n                                        fields\n                                \n                                \n                                            Optional\n                                        getInputType\n                                \n                                \n                                            Optional\n                                        getOperators\n                                \n                                \n                                            Optional\n                                        getOptions\n                                \n                                \n                                            Optional\n                                        removeRule\n                                \n                                \n                                            Optional\n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowEmptyRulesets\n                                    \n                                \n                                \n                                    \n                                        allowEmptyRulesets:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coerceValueForOperator\n                                    \n                                \n                                \n                                    \n                                        coerceValueForOperator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     EntityMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntityMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getInputType\n                                    \n                                \n                                \n                                    \n                                        getInputType:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOperators\n                                    \n                                \n                                \n                                    \n                                        getOperators:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOptions\n                                    \n                                \n                                \n                                    \n                                        getOptions:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryBuilderModule.html":{"url":"modules/QueryBuilderModule.html","title":"module - QueryBuilderModule","body":"\n                   \n\n\n\n\n  Modules\n  QueryBuilderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryArrowIconDirective\n\nQueryArrowIconDirective\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryArrowIconDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEmptyWarningDirective\n\nQueryEmptyWarningDirective\n\nQueryBuilderModule -->\n\nQueryEmptyWarningDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryArrowIconDirective \n\nQueryArrowIconDirective \n\nQueryArrowIconDirective  -->\n\nQueryBuilderModule->QueryArrowIconDirective \n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective  -->\n\nQueryBuilderModule->QueryEmptyWarningDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/query-builder.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                QueryArrowIconDirective\n                            \n                            \n                                QueryBuilderComponent\n                            \n                            \n                                QueryButtonGroupDirective\n                            \n                            \n                                QueryEmptyWarningDirective\n                            \n                            \n                                QueryEntityDirective\n                            \n                            \n                                QueryFieldDirective\n                            \n                            \n                                QueryInputDirective\n                            \n                            \n                                QueryOperatorDirective\n                            \n                            \n                                QueryRemoveButtonDirective\n                            \n                            \n                                QuerySwitchGroupDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    QueryArrowIconDirective\n                            \n                            \n                                    QueryBuilderComponent\n                            \n                            \n                                    QueryButtonGroupDirective\n                            \n                            \n                                    QueryEmptyWarningDirective\n                            \n                            \n                                    QueryEntityDirective\n                            \n                            \n                                    QueryFieldDirective\n                            \n                            \n                                    QueryInputDirective\n                            \n                            \n                                    QueryOperatorDirective\n                            \n                            \n                                    QueryRemoveButtonDirective\n                            \n                            \n                                    QuerySwitchGroupDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, } from '@angular/forms';\nimport {\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryOperatorDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective,\n    QueryEmptyWarningDirective,\n    QueryArrowIconDirective\n} from './components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective,\n    QueryEmptyWarningDirective,\n    QueryArrowIconDirective\n  ],\n  exports: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective,\n    QueryEmptyWarningDirective,\n    QueryArrowIconDirective\n  ]\n})\nexport class QueryBuilderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonGroupDirective.html":{"url":"directives/QueryButtonGroupDirective.html","title":"directive - QueryButtonGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryButtonGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-button-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryButtonGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-button-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-button-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryButtonGroup]'})\nexport class QueryButtonGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryEmptyWarningDirective.html":{"url":"directives/QueryEmptyWarningDirective.html","title":"directive - QueryEmptyWarningDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryEmptyWarningDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-empty-warning.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryEmptyWarning]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-empty-warning.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-empty-warning.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryEmptyWarning]'})\nexport class QueryEmptyWarningDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryEntityDirective.html":{"url":"directives/QueryEntityDirective.html","title":"directive - QueryEntityDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryEntityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-entity.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryEntity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-entity.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-entity.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryEntity]'})\nexport class QueryEntityDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryFieldDirective.html":{"url":"directives/QueryFieldDirective.html","title":"directive - QueryFieldDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryFieldDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-field.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryField]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-field.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-field.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryField]'})\nexport class QueryFieldDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryInputDirective.html":{"url":"directives/QueryInputDirective.html","title":"directive - QueryInputDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryInput]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryInputType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-input.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                    \n                        Unique name for query input type. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                \n\n\n                \n                    \n                        setqueryInputType(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/components/query-builder/query-input.directive.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryInput]'})\nexport class QueryInputDirective {\n  /** Unique name for query input type. */\n  @Input()\n  get queryInputType(): string { return this._type; }\n  set queryInputType(value: string) {\n    // If the directive is set without a type (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (!value) { return; }\n    this._type = value;\n  }\n  private _type: string;\n\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryOperatorDirective.html":{"url":"directives/QueryOperatorDirective.html","title":"directive - QueryOperatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryOperatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-operator.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryOperator]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-operator.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-operator.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryOperator]'})\nexport class QueryOperatorDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryRemoveButtonDirective.html":{"url":"directives/QueryRemoveButtonDirective.html","title":"directive - QueryRemoveButtonDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryRemoveButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-remove-button.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryRemoveButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-remove-button.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-remove-button.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryRemoveButton]'})\nexport class QueryRemoveButtonDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QuerySwitchGroupDirective.html":{"url":"directives/QuerySwitchGroupDirective.html","title":"directive - QuerySwitchGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QuerySwitchGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-switch-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [querySwitchGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-switch-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-switch-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[querySwitchGroup]'})\nexport class QuerySwitchGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveButtonContext.html":{"url":"interfaces/RemoveButtonContext.html","title":"interface - RemoveButtonContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RemoveButtonContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        removeRule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rule.html":{"url":"interfaces/Rule.html","title":"interface - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        operator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleSet.html":{"url":"interfaces/RuleSet.html","title":"interface - RuleSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        collapsed\n                                \n                                \n                                        condition\n                                \n                                \n                                        rules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collapsed\n                                    \n                                \n                                \n                                    \n                                        collapsed:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwitchGroupContext.html":{"url":"interfaces/SwitchGroupContext.html","title":"interface - SwitchGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SwitchGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n  collapsed?: boolean;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  arrowIconButton?: string;\n  arrowIcon?: string;\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  collapsed?: string;\n  treeContainer?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n  coerceValueForOperator?: (operator: string, value: any, rule: Rule) => any;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface ArrowIconContext {\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAngular2-QueryBuilder Changelog\nVersion 0.4.0\n\nFix issue switching operators changing select to multiple and causing invalid value error. (#69)\nAdd a coerceValueForOperator to handle value changes between operator switches to config object.\nAdd treeContainer, collapsed, arrowIcon, arrowIconButton fields to classNames object.\nAdd queryArrowIcon structural directive to override collapse arrow icon.\nAdded allowCollapse to enable accordion/collapse mode. (#66)\n\nVersion 0.3.3\n\nFix queryEmptyWarning directive not being passed to nested rules\n\nVersion 0.3.2\n\nAdd queryEmptyWarning directive for customizing empty warning messages\nAdd [emptyMessage] to change the default empty message text\n\nVersion 0.3.1\n\nChange: add Rule will use defaultValue of Field as the default\nUpdated Angular Materials to 6.0 in demos\nFix touched state not being updated when changing the query condition (AND/OR)\nAdd [disabled] feature #61\nTweaks to Vanilla CSS styling\n\nVersion 0.3.0\n\nBreaking: Renamed changeField callback to onChange for queryField directive.\nAdd onChange callback to queryEntity, queryInput, queryOperator, queryInput for proper reactive form validation and touched behavior on custom components\nAdd proper touched behavior to reactive form usage (See #49)\nAdd entity mode (See #22)\nFix [value] unrecognized property binding\nFix QueryBuilderClassNames not being exported as interface\nFix in operator causing multi-select to be displayed for all types (only limited to category, boolean now)\nMinor tweaks to CSS styling of default component\n\nVersion 0.2.5\n\nFix root remove ruleset button showing\nFix default value bug where only the first character of the operator is shown\nFix inability to override multiselect operators (is in, is not in)\n\nVersion 0.2.4\n\nFix serious issue with validation causing ngModel value to be wrong\nNew QueryBuilderClassNames interface\nRewrite CSS for more extensible CSS classes\nNew bootstrap 4 example\n\nVersion 0.2.3\n\nFix IE11 not working (target ES5)\nFix invalid/valid state\nNew validator function on Field config\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^5.4.2\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : >=4.0.0\n        \n            @angular/core : >=4.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular-QueryBuilder\nA modernized Angular 4+ query builder based on jQuery QueryBuilder. Support for heavy customization with Angular components and provides a flexible way to handle custom data types.\nGetting Started\nInstall\nnpm install angular2-query-builder\nDemo\nPlay with the demo here.\nEditable demo\nSee the Plunker\nDocumentation\nDocumentation link\nExamples\nBasic Usage\napp.module.ts\nimport { QueryBuilderModule } from \"angular2-query-builder\";\nimport { AppComponent } from \"./app.component\"\n\n@NgModule(imports: [\n  ...,\n  QueryBuilderModule,\n  IonicModule.forRoot(AppComponent) // (Optional) for IonicFramework 2+\n])\nexport class AppModule { }app.component.html\n...\n\n...app.component.ts\nimport { QueryBuilderConfig } from 'angular2-query-builder';\n\nexport class AppComponent {\n  query = {\n    condition: 'and',\n    rules: [\n      {field: 'age', operator: '=', value: 'm'}\n    ]\n  };\n\n  config: QueryBuilderConfig = {\n    fields: {\n      age: {name: 'Age', type: 'number'},\n      gender: {\n        name: 'Gender',\n        type: 'category',\n        options: [\n          {name: 'Male', value: 'm'},\n          {name: 'Female', value: 'f'}\n        ]\n      }\n    }\n  }\n}Custom Input Components\napp.component.html\n\n  \n    \n  \napp.component.ts\nquery = {\n  condition: 'and',\n  rules: [\n    {field: 'birthday', operator: '=', value: new Date()}\n  ]\n};\n\nconfig: QueryBuilderConfig = {\n  fields: {\n    birthday: {name: 'Birthday', type: 'date', operators: ['=', '']\n      defaultValue: (() => return new Date())\n    },\n  }\n}Custom Styling (with Bootstrap 4)\nBootstrap demo.\napp.component.html\napp.component.ts\nclassNames: QueryBuilderClassNames = {\n  removeIcon: 'fa fa-minus',\n  addIcon: 'fa fa-plus',\n  arrowIcon: 'fa fa-chevron-right px-2',\n  button: 'btn',\n  buttonGroup: 'btn-group',\n  rightAlign: 'order-12 ml-auto',\n  switchRow: 'd-flex px-2',\n  switchGroup: 'd-flex align-items-center',\n  switchRadio: 'custom-control-input',\n  switchLabel: 'custom-control-label',\n  switchControl: 'custom-control custom-radio custom-control-inline',\n  row: 'row p-2 m-1',\n  rule: 'border',\n  ruleSet: 'border',\n  invalidRuleSet: 'alert alert-danger',\n  emptyWarning: 'text-danger mx-auto',\n  operatorControl: 'form-control',\n  operatorControlSize: 'col-auto pr-0',\n  fieldControl: 'form-control',\n  fieldControlSize: 'col-auto pr-0',\n  entityControl: 'form-control',\n  entityControlSize: 'col-auto pr-0',\n  inputControl: 'form-control',\n  inputControlSize: 'col-auto'\n}Customizing with Angular Material\nExample of how you can completely customize the query component with another library like Angular Material. For the full example, please look at the source code provided in the demo.\napp.component.html\n\n  \n    + Rule\n    + Ruleset\n    - Ruleset\n  \n  \n    \n      remove\n    \n  \n  \n    \n      And\n      Or\n    \n  \n  \n    \n      \n        {{field.name}}\n      \n    \n  \n  \n    \n      \n        {{value}}\n      \n    \n  \n  \n  \n    \n  \n  \n  \n    \n      \n        \n          {{ opt.name }}\n        \n      \n    \n  \n  ...\nProperty Bindings Quick Reference\nSee documentation for more details on interfaces and properties.\nquery-builder\n\n\n\nName\nType\nRequired\nDefault\nDescription\n\n\n\n\nallowRuleset\nboolean\nOptional\ntrue\nDisplays the + Ruleset button if true.\n\n\nallowCollapse\nboolean\nOptional\nfalse\nEnables collapsible rule sets if true. (See Demo)\n\n\nclassNames\nobject\nOptional\n\nCSS class names for different child elements in query-builder component.\n\n\nconfig\nQueryBuilderConfig\nRequired\n\nConfiguration object for the main component.\n\n\ndata\nRuleset\nOptional\n\n(Use ngModel or value instead.)\n\n\nemptyMessage\nstring\nOptional\nMessage to display for an empty Ruleset if empty rulesets are not allowed.\n\n\nngModel\nRuleset\nOptional\n\nObject that stores the state of the component. Supports 2-way binding.\n\n\noperatorMap\n{ [key: string]: string[] }\nOptional\n\nUsed to map field types to list of operators.\n\n\nvalue\nRuleset\nOptional\n\nObject that stores the state of the component.\n\n\n\nStructural Directives\nUse these directives to replace different parts of query builder with custom components.\nqueryInput\nUsed to replace the input component. Specify the type/queryInputType to match specific field types to input template. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nfield\nField\nCurrent field object which contains the field's value and name\n\n\noptions\nOption[]\nList of options for the field, returned by getOptions\n\n\nonChange\n() => void\nCallback to handle changes to the input component\n\n\n\nqueryOperator\nUsed to replace the query operator selection component. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\noperators\nstring[]\nList of operators for the field, returned by getOperators\n\n\nonChange\n() => void\nCallback to handle changes to the operator component\n\n\ntype\nstring\nInput binding specifying the field type mapped to this input template, specified using syntax in above example\n\n\n\nqueryField\nUsed to replace the query field selection component. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\ngetFields\n(entityName: string) => void\nGet the list of fields corresponding to an entity\n\n\nfields\nField[]\nList of fields for the component, specified by config\n\n\nonChange\n(fieldValue: string, rule: Rule) => void\nCallback to handle changes to the field component\n\n\n\nqueryEntity\nUsed to replace the query entity selection component. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nentities\nEntity[]\nList of entities for the component, specified by config\n\n\nonChange\n(entityValue: string, rule: Rule) => void\nCallback to handle changes to the entity component\n\n\n\nquerySwitchGroup\nUsed to replace the switch controls, for example the AND/OR conditions. More custom conditions can be specified by using this directive to override the default component. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\nonChange\n() => void\nCallback to handle changes to the switch group component\n\n\n\nqueryArrowIcon\nUsed to replace the expand arrow used in collapse/accordion mode of the query builder. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\n\nqueryEmptyWarning\nUsed to replace the default empty warning message component. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\nmessage\nstring\nValue passed to emptyMessage\n\n\n\nqueryButtonGroup\nUsed to replace the default button group for Add, Add Ruleset, Remove Ruleset buttons. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\naddRule\n() => void\nFunction to handle adding a new rule\n\n\naddRuleSet\n() => void\nFunction to handle adding a new rule set\n\n\nremoveRuleSet\n() => void\nFunction to handle removing the current rule set\n\n\n\nqueryRemoveButton\nUsed to replace the default remove single rule button component. See example, or demo to see how it's done.\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nremoveRule\n(rule: Rule) => void\nFunction to handle removing a rule\n\n\n\nDependencies\n\nAngular 4+\n\nThat's it.\nWorkflow\nSee the angular-library-seed project for details on how to build and run tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Zeb Zhao\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryBuilderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryArrowIconDirective\n\nQueryArrowIconDirective\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryArrowIconDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEmptyWarningDirective\n\nQueryEmptyWarningDirective\n\nQueryBuilderModule -->\n\nQueryEmptyWarningDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryArrowIconDirective \n\nQueryArrowIconDirective \n\nQueryArrowIconDirective  -->\n\nQueryBuilderModule->QueryArrowIconDirective \n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective  -->\n\nQueryBuilderModule->QueryEmptyWarningDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTROL_VALUE_ACCESSOR   (src/.../query-builder.component.ts)\n                        \n                        \n                            VALIDATOR   (src/.../query-builder.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/query-builder/query-builder.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VALIDATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        VALIDATOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
