var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ButtonGroupContext.html",[0,0.111,1,0.602]],["body/interfaces/ButtonGroupContext.html",[0,0.219,1,0.71,2,0.202,3,0.172,4,0.172,5,0.202,6,0.202,7,0.535,8,0.172,9,0.338,10,1.121,11,0.971,12,0.971,13,1.222,14,0.971,15,0.967,16,0.296,17,0.031,18,1.883,19,0.172,20,0.535,21,0.491,22,0.278,23,0.409,24,1.142,25,0.983,26,0.535,27,0.944,28,0.691,29,0.837,30,0.87,31,0.356,32,0.344,33,0.71,34,0.71,35,0.535,36,1.037,37,0.449,38,0.535,39,0.449,40,1.059,41,0.535,42,0.491,43,0.535,44,0.71,45,0.535,46,0.409,47,0.491,48,0.491,49,0.409,50,0.491,51,0.535,52,0.535,53,0.491,54,0.491,55,0.491,56,0.491,57,0.491,58,0.491,59,0.535,60,0.535,61,0.491,62,0.535,63,0.491,64,0.535,65,0.491,66,0.491,67,0.535,68,0.535,69,0.491,70,0.491,71,0.491,72,0.491,73,0.449,74,0.535,75,0.491,76,0.535,77,0.535,78,0.491,79,1.055,80,0.71,81,0.491,82,0.888,83,0.535,84,0.491,85,0.449,86,0.491,87,0.491,88,0.491,89,0.491,90,0.491,91,0.491,92,0.491,93,0.491,94,0.491,95,0.017,96,0.017]],["title/interfaces/EmptyWarningContext.html",[0,0.111,84,0.602]],["body/interfaces/EmptyWarningContext.html",[0,0.219,1,0.499,2,0.206,3,0.175,4,0.175,5,0.206,6,0.206,7,0.544,8,0.175,9,0.342,10,1.125,11,0.719,12,0.719,13,1.227,14,0.719,15,0.97,16,0.27,17,0.031,18,1.266,19,0.175,20,0.544,21,0.499,22,0.278,23,0.416,24,1.145,25,0.986,26,0.544,27,0.947,28,0.697,29,0.844,30,0.875,31,0.358,32,0.348,33,0.719,34,0.719,35,0.544,36,1.04,37,0.456,38,0.544,39,0.456,40,1.066,41,0.544,42,0.499,43,0.544,44,0.719,45,0.544,46,0.416,47,0.499,48,0.499,49,0.416,50,0.499,51,0.544,52,0.544,53,0.499,54,0.499,55,0.499,56,0.499,57,0.499,58,0.499,59,0.544,60,0.544,61,0.499,62,0.544,63,0.499,64,0.544,65,0.499,66,0.499,67,0.544,68,0.544,69,0.499,70,0.499,71,0.499,72,0.499,73,0.456,74,0.544,75,0.499,76,0.544,77,0.544,78,0.499,79,1.058,80,0.719,81,0.499,82,0.894,83,0.544,84,0.719,85,0.844,86,0.499,87,0.499,88,0.499,89,0.499,90,0.499,91,0.499,92,0.499,93,0.499,94,0.499,95,0.018,96,0.018]],["title/interfaces/Entity.html",[0,0.111,30,0.501]],["body/interfaces/Entity.html",[0,0.219,1,0.498,2,0.205,3,0.175,4,0.175,5,0.205,6,0.205,7,0.543,8,0.175,9,0.341,10,1.074,11,0.718,12,0.718,13,1.171,14,0.718,15,0.956,16,0.269,17,0.031,19,0.175,20,0.543,21,0.498,22,0.278,23,0.415,24,1.146,25,0.985,26,0.543,27,0.947,28,0.793,29,0.843,30,0.895,31,0.39,32,0.42,33,0.718,34,0.718,35,0.543,36,1.04,37,0.455,38,0.543,39,0.455,40,1.065,41,0.543,42,0.498,43,0.543,44,0.718,45,1.005,46,0.415,47,0.498,48,0.498,49,0.415,50,0.498,51,0.543,52,0.543,53,0.498,54,0.498,55,0.498,56,0.498,57,0.498,58,0.498,59,0.543,60,0.543,61,0.498,62,0.543,63,0.498,64,0.543,65,0.498,66,0.498,67,0.543,68,0.543,69,0.498,70,0.498,71,0.498,72,0.498,73,0.455,74,0.543,75,0.498,76,0.543,77,0.543,78,0.498,79,1.057,80,0.718,81,0.498,82,0.894,83,0.543,84,0.498,85,0.455,86,0.498,87,0.498,88,0.498,89,0.498,90,0.498,91,0.498,92,0.498,93,0.498,94,0.498,95,0.018,96,0.018]],["title/interfaces/EntityContext.html",[0,0.111,86,0.602]],["body/interfaces/EntityContext.html",[0,0.219,1,0.495,2,0.204,3,0.174,4,0.174,5,0.204,6,0.204,7,0.539,8,0.174,9,0.34,10,1.123,11,0.715,12,0.715,13,1.224,14,0.715,15,0.955,16,0.285,17,0.031,18,1.618,19,0.174,20,0.539,21,0.495,22,0.278,23,0.412,24,1.143,25,0.993,26,0.539,27,0.946,28,0.694,29,0.84,30,0.946,31,0.357,32,0.346,33,0.715,34,0.715,35,0.539,36,1.038,37,0.452,38,0.539,39,0.452,40,1.062,41,0.539,42,0.495,43,0.539,44,0.715,45,0.539,46,0.412,47,0.495,48,0.495,49,0.412,50,0.495,51,0.539,52,0.539,53,0.495,54,0.495,55,0.495,56,0.495,57,0.495,58,0.495,59,0.539,60,0.539,61,0.495,62,0.539,63,0.495,64,0.539,65,0.495,66,0.495,67,0.539,68,0.539,69,0.495,70,0.495,71,0.495,72,0.495,73,0.452,74,0.539,75,0.495,76,0.539,77,0.539,78,0.495,79,1.056,80,0.715,81,0.495,82,0.981,83,0.539,84,0.495,85,0.452,86,0.715,87,0.495,88,0.495,89,0.495,90,0.495,91,0.495,92,0.495,93,0.495,94,0.495,95,0.018,96,0.018]],["title/interfaces/EntityMap.html",[0,0.111,44,0.602]],["body/interfaces/EntityMap.html",[0,0.22,1,0.509,2,0.21,3,0.179,4,0.179,5,0.301,6,0.301,7,0.555,8,0.179,10,1.081,11,0.73,12,0.73,13,1.178,14,0.73,15,0.959,16,0.149,17,0.031,19,0.179,20,0.555,21,0.509,22,0.279,23,0.424,24,1.145,25,0.988,26,0.555,27,0.951,28,0.703,29,0.852,30,0.9,31,0.36,32,0.352,33,0.73,34,0.853,35,0.555,36,1.044,37,0.466,38,0.555,39,0.466,40,1.074,41,0.555,42,0.509,43,0.555,44,0.853,45,0.555,46,0.424,47,0.509,48,0.509,49,0.424,50,0.509,51,0.555,52,0.555,53,0.509,54,0.509,55,0.509,56,0.509,57,0.509,58,0.509,59,0.555,60,0.555,61,0.509,62,0.555,63,0.509,64,0.555,65,0.509,66,0.509,67,0.555,68,0.555,69,0.509,70,0.509,71,0.509,72,0.509,73,0.466,74,0.555,75,0.509,76,0.555,77,0.555,78,0.509,79,1.061,80,0.73,81,0.509,82,0.901,83,0.555,84,0.509,85,0.466,86,0.509,87,0.509,88,0.509,89,0.509,90,0.509,91,0.509,92,0.509,93,0.509,94,0.509,95,0.018,96,0.018,97,1.048,98,2.742]],["title/interfaces/Field.html",[0,0.111,27,0.501]],["body/interfaces/Field.html",[0,0.217,1,0.464,2,0.191,3,0.163,4,0.163,5,0.191,6,0.191,7,0.506,8,0.163,9,0.324,10,1.053,11,0.682,12,0.682,13,1.148,14,0.682,15,0.943,16,0.334,17,0.031,18,1.201,19,0.163,20,0.506,21,0.464,22,0.276,23,0.387,24,1.145,25,0.976,26,0.506,27,0.943,28,0.776,29,0.939,30,0.911,31,0.424,32,0.41,33,0.682,34,0.682,35,0.972,36,1.045,37,0.815,38,0.972,39,0.815,40,1.035,41,0.506,42,0.464,43,0.506,44,0.682,45,0.506,46,0.387,47,0.464,48,0.464,49,0.387,50,0.464,51,0.506,52,0.506,53,0.464,54,0.464,55,0.464,56,0.464,57,0.464,58,0.464,59,0.506,60,0.506,61,0.464,62,0.506,63,0.464,64,0.506,65,0.464,66,0.464,67,0.506,68,0.506,69,0.464,70,0.464,71,0.464,72,0.464,73,0.424,74,0.506,75,0.464,76,0.506,77,0.506,78,0.464,79,1.045,80,0.682,81,0.464,82,0.869,83,0.506,84,0.464,85,0.424,86,0.464,87,0.464,88,0.464,89,0.464,90,0.464,91,0.464,92,0.464,93,0.464,94,0.464,95,0.017,96,0.017]],["title/interfaces/FieldContext.html",[0,0.111,88,0.602]],["body/interfaces/FieldContext.html",[0,0.219,1,0.491,2,0.202,3,0.172,4,0.172,5,0.202,6,0.202,7,0.535,8,0.172,9,0.338,10,1.121,11,0.71,12,0.71,13,1.222,14,0.71,15,0.953,16,0.296,17,0.031,18,1.783,19,0.172,20,0.535,21,0.491,22,0.278,23,0.409,24,1.142,25,0.992,26,0.535,27,0.979,28,0.691,29,0.837,30,0.87,31,0.356,32,0.344,33,0.71,34,0.71,35,0.535,36,1.037,37,0.449,38,0.535,39,0.449,40,1.059,41,0.535,42,0.491,43,0.535,44,0.71,45,0.535,46,0.409,47,0.491,48,0.491,49,0.409,50,0.491,51,0.535,52,0.535,53,0.491,54,0.491,55,0.491,56,0.491,57,0.491,58,0.491,59,0.535,60,0.535,61,0.491,62,0.535,63,0.491,64,0.535,65,0.491,66,0.491,67,0.535,68,0.535,69,0.491,70,0.491,71,0.491,72,0.491,73,0.449,74,0.535,75,0.491,76,0.535,77,0.535,78,0.491,79,1.055,80,0.71,81,0.491,82,0.978,83,0.535,84,0.491,85,0.449,86,0.491,87,0.491,88,0.71,89,0.491,90,0.915,91,0.491,92,0.491,93,0.491,94,0.491,95,0.017,96,0.017]],["title/interfaces/FieldMap.html",[0,0.111,33,0.602]],["body/interfaces/FieldMap.html",[0,0.22,1,0.509,2,0.21,3,0.179,4,0.179,5,0.301,6,0.301,7,0.555,8,0.179,10,1.081,11,0.73,12,0.73,13,1.178,14,0.73,15,0.959,16,0.149,17,0.031,19,0.179,20,0.555,21,0.509,22,0.279,23,0.424,24,1.145,25,0.988,26,0.555,27,0.959,28,0.703,29,0.852,30,0.88,31,0.36,32,0.352,33,0.853,34,0.853,35,0.555,36,1.044,37,0.466,38,0.555,39,0.466,40,1.074,41,0.555,42,0.509,43,0.555,44,0.73,45,0.555,46,0.424,47,0.509,48,0.509,49,0.424,50,0.509,51,0.555,52,0.555,53,0.509,54,0.509,55,0.509,56,0.509,57,0.509,58,0.509,59,0.555,60,0.555,61,0.509,62,0.555,63,0.509,64,0.555,65,0.509,66,0.509,67,0.555,68,0.555,69,0.509,70,0.509,71,0.509,72,0.509,73,0.466,74,0.555,75,0.509,76,0.555,77,0.555,78,0.509,79,1.061,80,0.73,81,0.509,82,0.901,83,0.555,84,0.509,85,0.466,86,0.509,87,0.509,88,0.509,89,0.509,90,0.509,91,0.509,92,0.509,93,0.509,94,0.509,95,0.018,96,0.018,97,1.048,99,2.742]],["title/interfaces/InputContext.html",[0,0.111,93,0.602]],["body/interfaces/InputContext.html",[0,0.219,1,0.491,2,0.202,3,0.172,4,0.172,5,0.202,6,0.202,7,0.535,8,0.172,9,0.338,10,1.121,11,0.71,12,0.71,13,1.222,14,0.71,15,0.953,16,0.296,17,0.031,18,1.611,19,0.172,20,0.535,21,0.491,22,0.278,23,0.409,24,1.142,25,0.992,26,0.535,27,0.979,28,0.691,29,0.837,30,0.87,31,0.394,32,0.344,33,0.71,34,0.71,35,0.535,36,1.037,37,0.449,38,0.535,39,0.449,40,1.059,41,0.535,42,0.491,43,0.535,44,0.71,45,0.535,46,0.409,47,0.491,48,0.491,49,0.409,50,0.491,51,0.535,52,0.535,53,0.491,54,0.491,55,0.491,56,0.491,57,0.491,58,0.491,59,0.535,60,0.535,61,0.491,62,0.535,63,0.491,64,0.535,65,0.491,66,0.491,67,0.535,68,0.535,69,0.491,70,0.491,71,0.491,72,0.491,73,0.449,74,0.535,75,0.491,76,0.535,77,0.535,78,0.491,79,1.055,80,0.71,81,0.491,82,0.978,83,0.535,84,0.491,85,0.449,86,0.491,87,0.491,88,0.491,89,0.491,90,0.491,91,0.491,92,0.491,93,0.71,94,0.491,95,0.017,96,0.017]],["title/interfaces/LocalRuleMeta.html",[0,0.111,42,0.602]],["body/interfaces/LocalRuleMeta.html",[0,0.219,1,0.503,2,0.208,3,0.177,4,0.177,5,0.208,6,0.208,7,0.549,8,0.177,9,0.344,10,1.077,11,0.724,12,0.724,13,1.174,14,0.724,15,0.977,16,0.248,17,0.031,19,0.177,20,0.549,21,0.503,22,0.279,23,0.419,24,1.144,25,0.987,26,0.549,27,0.949,28,0.7,29,0.847,30,0.877,31,0.359,32,0.349,33,0.724,34,0.724,35,0.549,36,1.073,37,0.46,38,0.549,39,0.46,40,1.07,41,0.549,42,0.724,43,1.01,44,0.724,45,0.549,46,0.419,47,0.503,48,0.503,49,0.419,50,0.503,51,0.549,52,0.549,53,0.503,54,0.503,55,0.503,56,0.503,57,0.503,58,0.503,59,0.549,60,0.549,61,0.503,62,0.549,63,0.503,64,0.549,65,0.503,66,0.503,67,0.549,68,0.549,69,0.503,70,0.503,71,0.503,72,0.503,73,0.46,74,0.549,75,0.503,76,0.549,77,0.549,78,0.503,79,1.059,80,0.724,81,0.503,82,0.897,83,0.549,84,0.503,85,0.46,86,0.503,87,0.503,88,0.503,89,0.503,90,0.503,91,0.503,92,0.503,93,0.503,94,0.503,95,0.018,96,0.018]],["title/interfaces/OperatorContext.html",[0,0.111,92,0.602]],["body/interfaces/OperatorContext.html",[0,0.219,1,0.495,2,0.204,3,0.174,4,0.174,5,0.204,6,0.204,7,0.539,8,0.174,9,0.34,10,1.123,11,0.715,12,0.715,13,1.224,14,0.715,15,0.955,16,0.285,17,0.031,18,1.618,19,0.174,20,0.539,21,0.495,22,0.278,23,0.412,24,1.144,25,0.993,26,0.539,27,0.946,28,0.694,29,0.958,30,0.872,31,0.357,32,0.346,33,0.715,34,0.715,35,0.539,36,1.038,37,0.452,38,0.539,39,0.452,40,1.062,41,0.539,42,0.495,43,0.539,44,0.715,45,0.539,46,0.412,47,0.495,48,0.495,49,0.412,50,0.495,51,0.539,52,0.539,53,0.495,54,0.495,55,0.495,56,0.495,57,0.495,58,0.495,59,0.539,60,0.539,61,0.495,62,0.539,63,0.495,64,0.539,65,0.495,66,0.495,67,0.539,68,0.539,69,0.495,70,0.495,71,0.495,72,0.495,73,0.452,74,0.539,75,0.495,76,0.539,77,0.539,78,0.495,79,1.056,80,0.715,81,0.495,82,0.981,83,0.539,84,0.495,85,0.452,86,0.495,87,0.495,88,0.495,89,0.495,90,0.495,91,0.495,92,0.715,93,0.495,94,0.495,95,0.018,96,0.018]],["title/interfaces/Option.html",[0,0.111,31,0.211]],["body/interfaces/Option.html",[0,0.219,1,0.505,2,0.208,3,0.177,4,0.177,5,0.208,6,0.208,7,0.55,8,0.177,9,0.345,10,1.078,11,0.725,12,0.725,13,1.175,14,0.725,15,0.958,16,0.248,17,0.031,19,0.177,20,0.55,21,0.505,22,0.279,23,0.42,24,1.145,25,0.987,26,0.55,27,0.949,28,0.796,29,0.848,30,0.878,31,0.37,32,0.422,33,0.725,34,0.725,35,0.55,36,1.042,37,0.462,38,0.55,39,0.462,40,1.071,41,0.55,42,0.505,43,0.55,44,0.725,45,0.55,46,0.42,47,0.505,48,0.505,49,0.42,50,0.505,51,0.55,52,0.55,53,0.505,54,0.505,55,0.505,56,0.505,57,0.505,58,0.505,59,0.55,60,0.55,61,0.505,62,0.55,63,0.505,64,0.55,65,0.505,66,0.505,67,0.55,68,0.55,69,0.505,70,0.505,71,0.505,72,0.505,73,0.462,74,0.55,75,0.505,76,0.55,77,0.55,78,0.505,79,1.06,80,0.725,81,0.505,82,0.898,83,0.55,84,0.505,85,0.462,86,0.505,87,0.505,88,0.505,89,0.505,90,0.505,91,0.505,92,0.505,93,0.505,94,0.505,95,0.018,96,0.018]],["title/interfaces/QueryBuilderClassNames.html",[0,0.111,46,0.501]],["body/interfaces/QueryBuilderClassNames.html",[0,0.212,1,0.388,2,0.16,3,0.136,4,0.136,5,0.16,6,0.16,7,0.423,8,0.136,9,0.284,10,0.998,11,0.596,12,0.596,13,1.088,14,0.596,15,0.936,16,0.348,17,0.031,19,0.136,20,0.423,21,0.388,22,0.268,23,0.323,24,1.153,25,0.966,26,0.423,27,0.899,28,0.616,29,0.745,30,0.805,31,0.436,32,0.299,33,0.596,34,0.596,35,0.423,36,0.986,37,0.355,38,0.423,39,0.355,40,0.959,41,0.423,42,0.388,43,0.423,44,0.596,45,0.423,46,0.497,47,0.815,48,0.815,49,0.679,50,0.815,51,0.888,52,0.888,53,0.815,54,0.815,55,0.815,56,0.815,57,0.815,58,0.815,59,0.888,60,0.888,61,0.815,62,0.888,63,0.815,64,0.888,65,0.815,66,0.815,67,0.888,68,0.888,69,0.815,70,0.815,71,0.815,72,0.815,73,0.355,74,0.423,75,0.388,76,0.423,77,0.423,78,0.388,79,1.01,80,0.596,81,0.388,82,0.804,83,0.423,84,0.388,85,0.355,86,0.388,87,0.388,88,0.388,89,0.388,90,0.388,91,0.388,92,0.388,93,0.388,94,0.388,95,0.015,96,0.015]],["title/interfaces/QueryBuilderConfig.html",[0,0.111,73,0.55]],["body/interfaces/QueryBuilderConfig.html",[0,0.217,1,0.461,2,0.19,3,0.162,4,0.162,5,0.19,6,0.19,7,0.502,8,0.162,9,0.323,10,1.051,11,0.947,12,0.947,13,1.146,14,0.947,15,0.942,16,0.323,17,0.031,18,2.008,19,0.162,20,0.502,21,0.461,22,0.275,23,0.384,24,1.139,25,0.975,26,0.502,27,0.958,28,0.671,29,0.813,30,0.909,31,0.421,32,0.332,33,0.889,34,0.679,35,0.502,36,1.043,37,0.421,38,0.502,39,0.421,40,1.032,41,0.502,42,0.461,43,0.502,44,0.889,45,0.502,46,0.384,47,0.461,48,0.461,49,0.384,50,0.461,51,0.502,52,0.502,53,0.461,54,0.461,55,0.461,56,0.461,57,0.461,58,0.461,59,0.502,60,0.502,61,0.461,62,0.502,63,0.461,64,0.502,65,0.461,66,0.461,67,0.502,68,0.502,69,0.461,70,0.461,71,0.461,72,0.461,73,0.621,74,0.969,75,0.889,76,0.502,77,0.969,78,0.889,79,1.043,80,0.947,81,0.461,82,0.866,83,0.502,84,0.461,85,0.421,86,0.461,87,0.461,88,0.461,89,0.461,90,0.461,91,0.461,92,0.461,93,0.461,94,0.461,95,0.017,96,0.017]],["title/modules/QueryBuilderModule.html",[100,1.904,101,1.904]],["body/modules/QueryBuilderModule.html",[2,0.264,3,0.225,4,0.225,17,0.031,19,0.376,21,0.641,22,0.242,95,0.021,96,0.021,100,2.708,101,3.943,102,2.029,103,2.894,104,4.347,105,2.249,106,2.029,107,2.894,108,2.894,109,2.894,110,4.674,111,4.164,112,4.164,113,4.164,114,4.164,115,4.164,116,4.164,117,4.164,118,4.164,119,3.862,120,2.894,121,2.525,122,3.454,123,3.454,124,4.61,125,1.32,126,4.61,127,2.894,128,4.61,129,2.249,130,1.22]],["title/directives/QueryButtonGroupDirective.html",[111,2.11,131,0.602]],["body/directives/QueryButtonGroupDirective.html",[2,0.349,3,0.297,4,0.297,5,0.452,6,0.452,8,0.297,9,0.486,16,0.298,17,0.03,19,0.297,22,0.199,31,0.297,32,0.349,49,0.914,95,0.025,96,0.025,97,2.102,111,3.581,125,1.742,130,1.61,131,1.021,132,3.818,133,2.048,134,2.048,135,4.607,136,2.471,137,2.82,138,2.048,139,2.048,140,2.865,141,3.818,142,2.048,143,3.818,144,4.557,145,2.436,146,2.048,147,2.048]],["title/directives/QueryEmptyWarningDirective.html",[112,2.11,131,0.602]],["body/directives/QueryEmptyWarningDirective.html",[2,0.35,3,0.298,4,0.298,5,0.453,6,0.453,8,0.298,9,0.487,16,0.299,17,0.03,19,0.298,22,0.2,31,0.298,32,0.35,95,0.025,96,0.025,97,2.107,112,3.59,125,1.749,130,1.617,131,1.024,133,2.056,134,2.056,136,2.477,137,2.823,138,2.056,139,2.056,140,2.868,142,2.056,146,2.056,147,2.056,148,3.853,149,4.577,150,4.619,151,4.577,152,4.577]],["title/directives/QueryEntityDirective.html",[113,2.11,131,0.602]],["body/directives/QueryEntityDirective.html",[2,0.352,3,0.3,4,0.3,5,0.454,6,0.454,8,0.3,9,0.488,16,0.3,17,0.03,19,0.3,22,0.201,31,0.3,32,0.352,95,0.025,96,0.025,97,2.112,113,3.599,125,1.757,130,1.624,131,1.026,133,2.065,134,2.065,136,2.483,137,2.827,138,2.065,139,2.065,140,2.871,142,2.065,145,2.456,146,2.065,147,2.065,153,4.596,154,4.04,155,4.596,156,4.596]],["title/directives/QueryFieldDirective.html",[114,2.11,131,0.602]],["body/directives/QueryFieldDirective.html",[2,0.352,3,0.3,4,0.3,5,0.454,6,0.454,8,0.3,9,0.488,16,0.3,17,0.03,19,0.3,22,0.201,31,0.3,32,0.352,95,0.025,96,0.025,97,2.112,114,3.599,125,1.757,130,1.624,131,1.026,133,2.065,134,2.065,136,2.483,137,2.827,138,2.065,139,2.065,140,2.871,142,2.065,145,2.456,146,2.065,147,2.065,157,4.596,158,4.04,159,4.596,160,4.596]],["title/directives/QueryInputDirective.html",[115,2.11,131,0.602]],["body/directives/QueryInputDirective.html",[2,0.302,3,0.257,4,0.257,5,0.461,6,0.461,8,0.257,9,0.444,16,0.339,17,0.031,19,0.257,22,0.172,24,1.062,28,0.817,31,0.328,32,0.446,79,0.67,95,0.023,96,0.023,97,2.227,115,3.274,125,1.507,130,1.394,131,1.028,133,1.772,134,1.772,136,2.259,137,2.704,138,1.772,139,1.772,140,2.765,142,2.259,145,3.289,146,1.772,147,1.772,148,2.568,161,3.944,162,3.675,163,5.827,164,3.944,165,5.027,166,3.675,167,3.944,168,3.944,169,3.944,170,3.944,171,3.944,172,4.636,173,5.027,174,4.636,175,3.944,176,3.304,177,3.304,178,5.027,179,3.944,180,3.944,181,3.944,182,3.944,183,3.944]],["title/directives/QueryOperatorDirective.html",[116,2.11,131,0.602]],["body/directives/QueryOperatorDirective.html",[2,0.352,3,0.3,4,0.3,5,0.454,6,0.454,8,0.3,9,0.488,16,0.3,17,0.03,19,0.3,22,0.201,31,0.3,32,0.352,95,0.025,96,0.025,97,2.112,116,3.599,125,1.757,130,1.624,131,1.026,133,2.065,134,2.065,136,2.483,137,2.827,138,2.065,139,2.065,140,2.871,142,2.065,145,2.456,146,2.065,147,2.065,184,4.596,185,4.04,186,4.596,187,4.596]],["title/directives/QueryRemoveButtonDirective.html",[117,2.11,131,0.602]],["body/directives/QueryRemoveButtonDirective.html",[2,0.35,3,0.298,4,0.298,5,0.453,6,0.453,8,0.298,9,0.487,16,0.299,17,0.03,19,0.298,22,0.2,31,0.298,32,0.35,95,0.025,96,0.025,97,2.107,117,3.59,125,1.749,130,1.617,131,1.024,133,2.056,134,2.056,136,2.477,137,2.823,138,2.056,139,2.056,140,2.868,142,2.056,146,2.056,147,2.056,188,4.325,189,4.577,190,4.619,191,4.577,192,4.577]],["title/directives/QuerySwitchGroupDirective.html",[118,2.11,131,0.602]],["body/directives/QuerySwitchGroupDirective.html",[2,0.35,3,0.298,4,0.298,5,0.453,6,0.453,8,0.298,9,0.487,16,0.299,17,0.03,19,0.298,22,0.2,31,0.298,32,0.35,95,0.025,96,0.025,97,2.107,118,3.59,125,1.749,130,1.617,131,1.024,132,3.834,133,2.056,134,2.056,136,2.477,137,2.823,138,2.056,139,2.056,140,2.868,141,3.834,142,2.056,143,3.834,146,2.056,147,2.056,193,4.956,194,4.619]],["title/interfaces/RemoveButtonContext.html",[0,0.111,94,0.602]],["body/interfaces/RemoveButtonContext.html",[0,0.219,1,0.499,2,0.206,3,0.175,4,0.175,5,0.206,6,0.206,7,0.544,8,0.175,9,0.342,10,1.125,11,0.719,12,0.719,13,1.227,14,0.719,15,0.956,16,0.27,17,0.031,18,1.624,19,0.175,20,0.544,21,0.499,22,0.278,23,0.416,24,1.143,25,0.994,26,0.544,27,0.947,28,0.697,29,0.844,30,0.875,31,0.358,32,0.348,33,0.719,34,0.719,35,0.544,36,1.04,37,0.456,38,0.544,39,0.456,40,1.066,41,0.544,42,0.499,43,0.544,44,0.719,45,0.544,46,0.416,47,0.499,48,0.499,49,0.416,50,0.499,51,0.544,52,0.544,53,0.499,54,0.499,55,0.499,56,0.499,57,0.499,58,0.499,59,0.544,60,0.544,61,0.499,62,0.544,63,0.499,64,0.544,65,0.499,66,0.499,67,0.544,68,0.544,69,0.499,70,0.499,71,0.499,72,0.499,73,0.456,74,0.544,75,0.499,76,0.544,77,0.544,78,0.499,79,1.058,80,0.978,81,0.499,82,0.894,83,0.544,84,0.499,85,0.456,86,0.499,87,0.499,88,0.499,89,0.499,90,0.499,91,0.499,92,0.499,93,0.499,94,0.719,95,0.018,96,0.018]],["title/interfaces/Rule.html",[0,0.111,25,0.501]],["body/interfaces/Rule.html",[0,0.219,1,0.492,2,0.203,3,0.173,4,0.173,5,0.203,6,0.203,7,0.537,8,0.173,9,0.339,10,1.071,11,0.712,12,0.712,13,1.167,14,0.712,15,0.954,16,0.284,17,0.031,19,0.173,20,0.537,21,0.492,22,0.278,23,0.41,24,1.146,25,0.988,26,0.537,27,0.968,28,0.79,29,0.956,30,0.923,31,0.398,32,0.345,33,0.712,34,0.712,35,0.537,36,1.037,37,0.45,38,0.537,39,0.45,40,1.06,41,0.537,42,0.492,43,0.537,44,0.712,45,0.537,46,0.41,47,0.492,48,0.492,49,0.41,50,0.492,51,0.537,52,0.537,53,0.492,54,0.492,55,0.492,56,0.492,57,0.492,58,0.492,59,0.537,60,0.537,61,0.492,62,0.537,63,0.492,64,0.537,65,0.492,66,0.492,67,0.537,68,0.537,69,0.492,70,0.492,71,0.492,72,0.492,73,0.45,74,0.537,75,0.492,76,0.537,77,0.537,78,0.492,79,1.055,80,0.712,81,0.492,82,0.89,83,0.537,84,0.492,85,0.45,86,0.492,87,0.492,88,0.492,89,0.492,90,0.492,91,0.492,92,0.492,93,0.492,94,0.492,95,0.018,96,0.018]],["title/interfaces/RuleSet.html",[0,0.111,15,0.501]],["body/interfaces/RuleSet.html",[0,0.219,1,0.503,2,0.208,3,0.177,4,0.177,5,0.208,6,0.208,7,0.549,8,0.177,9,0.344,10,1.077,11,0.724,12,0.724,13,1.174,14,0.724,15,0.965,16,0.248,17,0.031,19,0.177,20,0.549,21,0.503,22,0.279,23,0.772,24,1.145,25,0.998,26,0.924,27,0.949,28,0.7,29,0.847,30,0.877,31,0.359,32,0.349,33,0.724,34,0.724,35,0.549,36,1.042,37,0.46,38,0.549,39,0.46,40,1.07,41,0.549,42,0.503,43,0.549,44,0.724,45,0.549,46,0.419,47,0.503,48,0.503,49,0.419,50,0.503,51,0.549,52,0.549,53,0.503,54,0.503,55,0.503,56,0.503,57,0.503,58,0.503,59,0.549,60,0.549,61,0.503,62,0.549,63,0.503,64,0.549,65,0.503,66,0.503,67,0.549,68,0.549,69,0.503,70,0.503,71,0.503,72,0.503,73,0.46,74,0.549,75,0.503,76,0.549,77,0.549,78,0.503,79,1.059,80,0.724,81,0.503,82,0.897,83,0.549,84,0.503,85,0.46,86,0.503,87,0.503,88,0.503,89,0.503,90,0.503,91,0.503,92,0.503,93,0.503,94,0.503,95,0.018,96,0.018]],["title/interfaces/SwitchGroupContext.html",[0,0.111,81,0.602]],["body/interfaces/SwitchGroupContext.html",[0,0.219,1,0.499,2,0.206,3,0.175,4,0.175,5,0.206,6,0.206,7,0.544,8,0.175,9,0.342,10,1.125,11,0.719,12,0.719,13,1.227,14,0.719,15,0.97,16,0.27,17,0.031,18,1.624,19,0.175,20,0.544,21,0.499,22,0.278,23,0.416,24,1.143,25,0.986,26,0.544,27,0.947,28,0.697,29,0.844,30,0.875,31,0.358,32,0.348,33,0.719,34,0.719,35,0.544,36,1.04,37,0.456,38,0.544,39,0.456,40,1.066,41,0.544,42,0.499,43,0.544,44,0.719,45,0.544,46,0.416,47,0.499,48,0.499,49,0.416,50,0.499,51,0.544,52,0.544,53,0.499,54,0.499,55,0.499,56,0.499,57,0.499,58,0.499,59,0.544,60,0.544,61,0.499,62,0.544,63,0.499,64,0.544,65,0.499,66,0.499,67,0.544,68,0.544,69,0.499,70,0.499,71,0.499,72,0.499,73,0.456,74,0.544,75,0.499,76,0.544,77,0.544,78,0.499,79,1.058,80,0.719,81,0.719,82,0.983,83,0.544,84,0.499,85,0.456,86,0.499,87,0.499,88,0.499,89,0.499,90,0.499,91,0.499,92,0.499,93,0.499,94,0.499,95,0.018,96,0.018]],["title/changelog.html",[195,1.765,196,1.765,197,2.27]],["body/changelog.html",[0,0.165,9,0.326,15,0.572,16,0.201,17,0.022,18,1.208,22,0.161,23,0.572,25,0.572,27,0.746,28,0.752,29,0.911,30,0.572,36,0.628,37,0.628,39,0.911,46,0.746,49,0.572,82,0.819,85,0.819,95,0.022,96,0.022,105,2.406,129,3.139,130,1.306,131,0.895,148,3.139,154,2.701,158,2.701,162,3.524,166,2.701,177,4.038,185,2.701,188,2.701,197,3.096,198,3.096,199,3.096,200,6.047,201,3.695,202,6.159,203,3.695,204,4.038,205,3.695,206,3.096,207,4.494,208,4.156,209,3.695,210,3.695,211,2.701,212,3.096,213,3.096,214,3.695,215,3.096,216,6.372,217,5.364,218,4.038,219,4.82,220,3.096,221,3.695,222,3.695,223,3.695,224,4.82,225,3.695,226,4.763,227,4.038,228,3.695,229,3.695,230,3.695,231,3.695,232,4.038,233,4.82,234,4.82,235,4.038,236,4.82,237,3.096,238,4.038,239,3.695,240,3.695,241,3.695,242,3.695,243,3.096,244,4.82,245,3.096,246,3.695,247,3.096,248,3.096,249,3.096,250,3.695,251,3.695,252,3.695,253,3.695,254,3.695,255,3.695,256,3.695,257,3.695,258,3.695,259,3.695,260,3.695,261,3.695,262,3.695,263,3.695,264,3.695,265,3.096,266,3.695,267,4.494,268,3.695,269,3.096,270,3.695,271,3.096,272,3.096,273,3.695,274,3.695,275,3.695,276,3.695,277,3.695,278,3.695,279,3.096]],["title/dependencies.html",[102,2.289,280,2.71]],["body/dependencies.html",[17,0.03,95,0.027,96,0.027,102,3.454,125,1.951,127,4.277,281,5.105,282,5.105,283,5.105,284,5.879]],["title/index.html",[8,0.177,195,1.765,196,1.765]],["body/index.html",[0,0.069,3,0.131,9,0.275,10,0.986,11,0.374,12,0.374,14,0.374,15,0.891,16,0.32,17,0.031,18,1.406,19,0.249,22,0.136,23,0.482,24,0.872,25,0.991,27,0.955,28,0.818,29,0.978,30,0.72,31,0.375,32,0.46,34,0.374,36,0.342,37,0.342,46,0.311,47,0.374,48,0.374,49,0.482,50,0.374,53,0.374,54,0.374,55,0.374,56,0.374,57,0.374,58,0.374,61,0.579,63,0.374,65,0.374,66,0.374,69,0.374,70,0.374,71,0.374,72,0.374,73,0.73,75,0.374,78,0.374,79,0.946,80,0.374,82,0.79,85,0.342,87,0.374,89,0.374,90,0.374,91,0.374,95,0.014,96,0.014,101,1.832,102,1.182,105,2.031,106,1.832,129,3.88,130,1.349,131,0.579,135,1.685,145,2.041,148,2.031,150,1.685,154,1.471,158,1.471,162,1.471,166,4.071,172,3.199,174,3.899,185,1.471,188,2.791,190,1.685,193,1.685,194,1.685,195,1.31,196,1.31,198,3.199,199,2.612,204,4.823,206,1.685,207,3.899,208,1.471,211,2.791,212,4.303,213,2.612,215,3.899,218,2.612,226,1.685,227,1.685,232,3.899,235,3.199,237,1.685,238,3.199,243,2.612,247,2.612,249,1.685,265,2.612,267,3.603,269,1.685,271,3.199,272,3.199,279,3.899,285,2.012,286,5.136,287,2.012,288,2.012,289,2.612,290,2.012,291,2.012,292,3.118,293,5.568,294,3.118,295,3.118,296,2.012,297,2.012,298,2.012,299,2.012,300,2.012,301,3.199,302,2.012,303,2.012,304,2.012,305,3.118,306,2.012,307,2.012,308,2.012,309,2.012,310,4.301,311,2.012,312,4.301,313,3.818,314,3.818,315,3.818,316,2.012,317,3.118,318,2.012,319,2.012,320,2.012,321,3.818,322,3.818,323,3.118,324,4.301,325,2.012,326,2.012,327,3.118,328,3.118,329,2.012,330,2.012,331,2.012,332,4.301,333,3.118,334,3.118,335,3.118,336,2.012,337,2.012,338,2.012,339,5.136,340,2.012,341,2.012,342,2.012,343,2.012,344,1.685,345,3.118,346,3.118,347,2.012,348,3.818,349,2.012,350,2.012,351,2.012,352,3.118,353,2.012,354,2.012,355,2.012,356,2.012,357,2.012,358,2.012,359,2.012,360,2.012,361,3.118,362,3.118,363,5.449,364,2.012,365,2.612,366,5.833,367,3.118,368,4.301,369,2.012,370,2.012,371,2.012,372,2.012,373,2.012,374,3.118,375,2.012,376,2.012,377,5.449,378,2.012,379,2.012,380,2.012,381,5.308,382,5.568,383,5.449,384,2.012,385,2.012,386,3.118,387,3.118,388,2.012,389,2.012,390,2.012,391,2.012,392,2.012,393,2.012,394,2.012]],["title/license.html",[195,1.765,196,1.765,395,2.27]],["body/license.html",[4,0.28,17,0.024,23,0.663,95,0.024,96,0.024,106,2.519,121,3.134,176,4.816,211,3.872,220,3.592,248,4.438,301,3.592,395,3.592,396,4.287,397,5.749,398,4.287,399,4.287,400,4.287,401,4.287,402,5.297,403,4.287,404,4.287,405,4.287,406,4.287,407,5.297,408,4.287,409,6.004,410,6.486,411,4.287,412,5.297,413,4.287,414,5.749,415,4.287,416,4.287,417,4.287,418,4.287,419,4.287,420,4.287,421,4.287,422,4.287,423,4.287,424,4.287,425,4.287,426,4.287,427,5.297,428,5.297,429,4.287,430,4.287,431,5.297,432,4.287,433,4.287,434,4.287,435,4.287,436,4.287,437,4.287,438,4.287,439,4.287,440,4.287,441,4.287,442,4.287,443,4.287,444,4.287,445,4.287,446,4.287,447,4.287,448,4.287,449,4.287,450,4.287,451,4.287,452,4.287,453,4.287]],["title/modules.html",[100,2.595]],["body/modules.html",[17,0.027,95,0.027,96,0.027,100,3.042,101,3.042,289,4.338,454,5.178,455,5.178,456,5.178]],["title/overview.html",[457,3.7]],["body/overview.html",[0,0.136,17,0.031,22,0.174,95,0.023,96,0.023,100,2.967,101,3.969,102,2.334,103,3.328,104,3.328,105,2.587,106,2.334,107,3.328,108,3.328,109,3.328,110,4.579,111,4.079,112,4.079,113,4.079,114,4.079,115,4.079,116,4.079,117,4.079,118,4.079,119,4.231,120,3.328,121,2.904,129,2.587,131,0.738,344,4.231,457,3.328,458,3.973,459,3.973]],["title/miscellaneous/variables.html",[460,2.27,461,3.264]],["body/miscellaneous/variables.html",[5,0.362,6,0.362,8,0.308,16,0.305,17,0.03,28,0.788,39,1.019,95,0.026,96,0.026,106,3.302,110,4.108,208,4.108,245,4.708,365,4.708,460,3.96,461,3.96,462,5.998,463,5.62,464,5.998,465,4.726,466,5.62,467,5.62,468,4.726]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":349,"title":{},"body":{"index.html":{}}}],["0.2.3",{"_index":273,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["0.3.2",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":344,"title":{},"body":{"index.html":{},"overview.html":{}}}],["12",{"_index":330,"title":{},"body":{"index.html":{}}}],["18",{"_index":459,"title":{},"body":{"overview.html":{}}}],["2",{"_index":310,"title":{},"body":{"index.html":{}}}],["2018",{"_index":399,"title":{},"body":{"license.html":{}}}],["22",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":271,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4.0.0",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["49",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["5.4.2",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["6.0",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":458,"title":{},"body":{"overview.html":{}}}],["_type",{"_index":183,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["abov",{"_index":426,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":169,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["action",{"_index":448,"title":{},"body":{"license.html":{}}}],["ad",{"_index":387,"title":{},"body":{"index.html":{}}}],["add",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["addicon",{"_index":48,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["addrul",{"_index":11,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["addruleset",{"_index":12,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["ag",{"_index":314,"title":{},"body":{"index.html":{}}}],["alert",{"_index":346,"title":{},"body":{"index.html":{}}}],["align",{"_index":336,"title":{},"body":{"index.html":{}}}],["allow",{"_index":373,"title":{},"body":{"index.html":{}}}],["allowemptyruleset",{"_index":74,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["allowruleset",{"_index":364,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":220,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["angular",{"_index":212,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":127,"title":{},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":125,"title":{},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"dependencies.html":{}}}],["angular/form",{"_index":21,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["angular2",{"_index":198,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["anoth",{"_index":351,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":306,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":312,"title":{},"body":{"index.html":{}}}],["app.component.t",{"_index":313,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":304,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":305,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":311,"title":{},"body":{"index.html":{}}}],["aris",{"_index":452,"title":{},"body":{"license.html":{}}}],["array",{"_index":26,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["associ",{"_index":411,"title":{},"body":{"license.html":{}}}],["author",{"_index":441,"title":{},"body":{"license.html":{}}}],["auto",{"_index":332,"title":{},"body":{"index.html":{}}}],["base",{"_index":287,"title":{},"body":{"index.html":{}}}],["basic",{"_index":303,"title":{},"body":{"index.html":{}}}],["be",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":243,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["birthday",{"_index":321,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":105,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":345,"title":{},"body":{"index.html":{}}}],["break",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":456,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":454,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":327,"title":{},"body":{"index.html":{}}}],["bug",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":392,"title":{},"body":{"index.html":{}}}],["builder",{"_index":286,"title":{},"body":{"index.html":{}}}],["builder.component.t",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder.interfaces.t",{"_index":7,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["builder.interfaces.ts:20",{"_index":99,"title":{},"body":{"interfaces/FieldMap.html":{}}}],["builder.interfaces.ts:42",{"_index":98,"title":{},"body":{"interfaces/EntityMap.html":{}}}],["builder.module.t",{"_index":123,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["builder/queri",{"_index":6,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":49,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["button.directive.t",{"_index":189,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:4",{"_index":191,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:5",{"_index":192,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["buttongroup",{"_index":50,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["buttongroupcontext",{"_index":1,"title":{"interfaces/ButtonGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["c",{"_index":398,"title":{},"body":{"license.html":{}}}],["callback",{"_index":232,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["categori",{"_index":249,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["caus",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":338,"title":{},"body":{"index.html":{}}}],["chang",{"_index":207,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changefield",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":197,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["charact",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["charg",{"_index":406,"title":{},"body":{"license.html":{}}}],["child",{"_index":368,"title":{},"body":{"index.html":{}}}],["claim",{"_index":444,"title":{},"body":{"license.html":{}}}],["class",{"_index":130,"title":{},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["classnam",{"_index":323,"title":{},"body":{"index.html":{}}}],["cluster_querybuildermodul",{"_index":107,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_declar",{"_index":108,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_export",{"_index":109,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["code",{"_index":356,"title":{},"body":{"index.html":{}}}],["col",{"_index":348,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":126,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["complet",{"_index":350,"title":{},"body":{"index.html":{}}}],["compon",{"_index":129,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["condit",{"_index":23,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["conditionvalu",{"_index":83,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["config",{"_index":279,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configur",{"_index":370,"title":{},"body":{"index.html":{}}}],["connect",{"_index":453,"title":{},"body":{"license.html":{}}}],["connector",{"_index":62,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["constructor",{"_index":138,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(publ",{"_index":147,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(templ",{"_index":139,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["contain",{"_index":383,"title":{},"body":{"index.html":{}}}],["context",{"_index":381,"title":{},"body":{"index.html":{}}}],["contract",{"_index":449,"title":{},"body":{"license.html":{}}}],["control",{"_index":339,"title":{},"body":{"index.html":{}}}],["control_value_accessor",{"_index":462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copi",{"_index":409,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":397,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":385,"title":{},"body":{"index.html":{}}}],["css",{"_index":226,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["current",{"_index":382,"title":{},"body":{"index.html":{}}}],["custom",{"_index":204,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["d",{"_index":333,"title":{},"body":{"index.html":{}}}],["damag",{"_index":445,"title":{},"body":{"license.html":{}}}],["danger",{"_index":347,"title":{},"body":{"index.html":{}}}],["data",{"_index":294,"title":{},"body":{"index.html":{}}}],["date",{"_index":322,"title":{},"body":{"index.html":{}}}],["deal",{"_index":412,"title":{},"body":{"license.html":{}}}],["declar",{"_index":104,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["default",{"_index":208,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultfield",{"_index":45,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["defaultoper",{"_index":38,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["defaultvalu",{"_index":37,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["defin",{"_index":97,"title":{},"body":{"interfaces/EntityMap.html":{},"interfaces/FieldMap.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["demo",{"_index":215,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["depend",{"_index":102,"title":{"dependencies.html":{}},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":363,"title":{},"body":{"index.html":{}}}],["detail",{"_index":361,"title":{},"body":{"index.html":{}}}],["differ",{"_index":367,"title":{},"body":{"index.html":{}}}],["direct",{"_index":131,"title":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["directive({selector",{"_index":146,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["disabl",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["display",{"_index":247,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["distribut",{"_index":419,"title":{},"body":{"license.html":{}}}],["document",{"_index":301,"title":{},"body":{"index.html":{},"license.html":{}}}],["edit",{"_index":299,"title":{},"body":{"index.html":{}}}],["element",{"_index":369,"title":{},"body":{"index.html":{}}}],["elementref",{"_index":144,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{}}}],["empti",{"_index":148,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{},"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["emptymessag",{"_index":206,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["emptywarn",{"_index":64,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["emptywarningcontext",{"_index":84,"title":{"interfaces/EmptyWarningContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entiti",{"_index":30,"title":{"interfaces/Entity.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["entity.directive.t",{"_index":153,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:4",{"_index":155,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:5",{"_index":156,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entitycontext",{"_index":86,"title":{"interfaces/EntityContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitycontrol",{"_index":67,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitycontrols",{"_index":68,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitymap",{"_index":44,"title":{"interfaces/EntityMap.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitynam",{"_index":91,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["entityvalu",{"_index":87,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["es5",{"_index":277,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":440,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":272,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":433,"title":{},"body":{"license.html":{}}}],["extens",{"_index":270,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":320,"title":{},"body":{"index.html":{}}}],["fa",{"_index":324,"title":{},"body":{"index.html":{}}}],["featur",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["femal",{"_index":319,"title":{},"body":{"index.html":{}}}],["field",{"_index":27,"title":{"interfaces/Field.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["field'",{"_index":384,"title":{},"body":{"index.html":{}}}],["field.directive.t",{"_index":157,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:4",{"_index":159,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:5",{"_index":160,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.nam",{"_index":357,"title":{},"body":{"index.html":{}}}],["fieldcontext",{"_index":88,"title":{"interfaces/FieldContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldcontrol",{"_index":65,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["fieldcontrols",{"_index":66,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["fieldmap",{"_index":33,"title":{"interfaces/FieldMap.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldnam",{"_index":76,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldvalu",{"_index":89,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"license.html":{}}}],["first",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":436,"title":{},"body":{"license.html":{}}}],["fix",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":334,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":291,"title":{},"body":{"index.html":{}}}],["follow",{"_index":425,"title":{},"body":{"license.html":{}}}],["form",{"_index":235,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["formsmodul",{"_index":128,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["forwardref",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":405,"title":{},"body":{"license.html":{}}}],["full",{"_index":353,"title":{},"body":{"index.html":{}}}],["function",{"_index":18,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/OperatorContext.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["furnish",{"_index":423,"title":{},"body":{"license.html":{}}}],["gender",{"_index":317,"title":{},"body":{"index.html":{}}}],["get",{"_index":195,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdisabledst",{"_index":13,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["getfield",{"_index":90,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["getinputtyp",{"_index":77,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["getoper",{"_index":75,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["getopt",{"_index":78,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["grant",{"_index":404,"title":{},"body":{"license.html":{}}}],["group",{"_index":328,"title":{},"body":{"index.html":{}}}],["group.directive.t",{"_index":132,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:4",{"_index":141,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:5",{"_index":143,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["handl",{"_index":293,"title":{},"body":{"index.html":{}}}],["heavi",{"_index":290,"title":{},"body":{"index.html":{}}}],["here",{"_index":298,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":403,"title":{},"body":{"license.html":{}}}],["holder",{"_index":442,"title":{},"body":{"license.html":{}}}],["ie11",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["impli",{"_index":434,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":10,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["inabl",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":414,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["inlin",{"_index":342,"title":{},"body":{"index.html":{}}}],["input",{"_index":145,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"index.html":{}}}],["input.directive.t",{"_index":161,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:14",{"_index":164,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:16",{"_index":168,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:7",{"_index":167,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:8",{"_index":171,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["inputcontext",{"_index":93,"title":{"interfaces/InputContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["inputcontrol",{"_index":71,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["inputcontrols",{"_index":72,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["instal",{"_index":295,"title":{},"body":{"index.html":{}}}],["instead",{"_index":372,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":43,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["invalid/valid",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["invalidruleset",{"_index":63,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["ionicframework",{"_index":309,"title":{},"body":{"index.html":{}}}],["ionicmodule.forroot(appcompon",{"_index":308,"title":{},"body":{"index.html":{}}}],["issu",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":337,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":288,"title":{},"body":{"index.html":{}}}],["key",{"_index":34,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["kind",{"_index":432,"title":{},"body":{"license.html":{}}}],["label",{"_index":340,"title":{},"body":{"index.html":{}}}],["legend",{"_index":103,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["liabil",{"_index":446,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":443,"title":{},"body":{"license.html":{}}}],["librari",{"_index":352,"title":{},"body":{"index.html":{}}}],["licens",{"_index":395,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":248,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":302,"title":{},"body":{"index.html":{}}}],["list",{"_index":377,"title":{},"body":{"index.html":{}}}],["localrulemeta",{"_index":42,"title":{"interfaces/LocalRuleMeta.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["look",{"_index":355,"title":{},"body":{"index.html":{}}}],["m",{"_index":315,"title":{},"body":{"index.html":{}}}],["main",{"_index":371,"title":{},"body":{"index.html":{}}}],["male",{"_index":318,"title":{},"body":{"index.html":{}}}],["map",{"_index":376,"title":{},"body":{"index.html":{}}}],["match",{"_index":96,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["merchant",{"_index":435,"title":{},"body":{"license.html":{}}}],["merg",{"_index":417,"title":{},"body":{"license.html":{}}}],["messag",{"_index":85,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["metadata",{"_index":133,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["minor",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["minu",{"_index":325,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":460,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":396,"title":{},"body":{"license.html":{}}}],["ml",{"_index":331,"title":{},"body":{"index.html":{}}}],["mode",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["modern",{"_index":285,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":416,"title":{},"body":{"license.html":{}}}],["modul",{"_index":100,"title":{"modules/QueryBuilderModule.html":{},"modules.html":{}},"body":{"modules/QueryBuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":269,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["multi",{"_index":245,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiselect",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":32,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["new",{"_index":267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_valid",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel",{"_index":265,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngmodul",{"_index":124,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["ngmodule(import",{"_index":307,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":439,"title":{},"body":{"license.html":{}}}],["notic",{"_index":427,"title":{},"body":{"license.html":{}}}],["now",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":296,"title":{},"body":{"index.html":{}}}],["null",{"_index":41,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["nullabl",{"_index":35,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["number",{"_index":316,"title":{},"body":{"index.html":{}}}],["object",{"_index":366,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":408,"title":{},"body":{"license.html":{}}}],["onchang",{"_index":82,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["oper",{"_index":29,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["operator.directive.t",{"_index":184,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:4",{"_index":186,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:5",{"_index":187,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operatorcontext",{"_index":92,"title":{"interfaces/OperatorContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["operatorcontrol",{"_index":69,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["operatorcontrols",{"_index":70,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["operatormap",{"_index":375,"title":{},"body":{"index.html":{}}}],["opt.nam",{"_index":358,"title":{},"body":{"index.html":{}}}],["option",{"_index":31,"title":{"interfaces/Option.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["order",{"_index":329,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":451,"title":{},"body":{"license.html":{}}}],["out",{"_index":121,"title":{},"body":{"modules/QueryBuilderModule.html":{},"license.html":{},"overview.html":{}}}],["overrid",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":457,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":181,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["p",{"_index":343,"title":{},"body":{"index.html":{}}}],["packag",{"_index":280,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":142,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["parent",{"_index":40,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["part",{"_index":380,"title":{},"body":{"index.html":{}}}],["particular",{"_index":437,"title":{},"body":{"license.html":{}}}],["peer",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["permiss",{"_index":402,"title":{},"body":{"license.html":{}}}],["permit",{"_index":422,"title":{},"body":{"license.html":{}}}],["person",{"_index":407,"title":{},"body":{"license.html":{}}}],["play",{"_index":297,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":354,"title":{},"body":{"index.html":{}}}],["plu",{"_index":326,"title":{},"body":{"index.html":{}}}],["plunker",{"_index":300,"title":{},"body":{"index.html":{}}}],["portion",{"_index":430,"title":{},"body":{"license.html":{}}}],["privat",{"_index":182,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["programat",{"_index":178,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["project",{"_index":391,"title":{},"body":{"index.html":{}}}],["proper",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["provid",{"_index":106,"title":{},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":136,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["publish",{"_index":418,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":438,"title":{},"body":{"license.html":{}}}],["px",{"_index":335,"title":{},"body":{"index.html":{}}}],["queri",{"_index":166,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["querybuild",{"_index":199,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["querybuilderclassnam",{"_index":46,"title":{"interfaces/QueryBuilderClassNames.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["querybuildercompon",{"_index":110,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["querybuilderconfig",{"_index":73,"title":{"interfaces/QueryBuilderConfig.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["querybuildermodul",{"_index":101,"title":{"modules/QueryBuilderModule.html":{}},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["querybuttongroup",{"_index":135,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"index.html":{}}}],["querybuttongroupdirect",{"_index":111,"title":{"directives/QueryButtonGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"overview.html":{}}}],["queryemptymessag",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["queryemptywarn",{"_index":150,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{},"index.html":{}}}],["queryemptywarningdirect",{"_index":112,"title":{"directives/QueryEmptyWarningDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryEmptyWarningDirective.html":{},"overview.html":{}}}],["queryent",{"_index":154,"title":{},"body":{"directives/QueryEntityDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryentitydirect",{"_index":113,"title":{"directives/QueryEntityDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryEntityDirective.html":{},"overview.html":{}}}],["queryfield",{"_index":158,"title":{},"body":{"directives/QueryFieldDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryfielddirect",{"_index":114,"title":{"directives/QueryFieldDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryFieldDirective.html":{},"overview.html":{}}}],["queryinput",{"_index":162,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryinputdirect",{"_index":115,"title":{"directives/QueryInputDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryInputDirective.html":{},"overview.html":{}}}],["queryinputtyp",{"_index":163,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryinputtype(valu",{"_index":175,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryoper",{"_index":185,"title":{},"body":{"directives/QueryOperatorDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryoperatordirect",{"_index":116,"title":{"directives/QueryOperatorDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryOperatorDirective.html":{},"overview.html":{}}}],["queryremovebutton",{"_index":190,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"index.html":{}}}],["queryremovebuttondirect",{"_index":117,"title":{"directives/QueryRemoveButtonDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryRemoveButtonDirective.html":{},"overview.html":{}}}],["queryswitchgroup",{"_index":194,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["queryswitchgroupdirect",{"_index":118,"title":{"directives/QuerySwitchGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QuerySwitchGroupDirective.html":{},"overview.html":{}}}],["quick",{"_index":359,"title":{},"body":{"index.html":{}}}],["radio",{"_index":341,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":360,"title":{},"body":{"index.html":{}}}],["remov",{"_index":188,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"changelog.html":{},"index.html":{}}}],["removebutton",{"_index":51,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removebuttoncontext",{"_index":94,"title":{"interfaces/RemoveButtonContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removebuttons",{"_index":52,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removeicon",{"_index":47,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["removerul",{"_index":80,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["removeruleset",{"_index":14,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["renam",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["replac",{"_index":379,"title":{},"body":{"index.html":{}}}],["requir",{"_index":362,"title":{},"body":{"index.html":{}}}],["reset",{"_index":120,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["restrict",{"_index":413,"title":{},"body":{"license.html":{}}}],["result",{"_index":95,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":172,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["rewrit",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":415,"title":{},"body":{"license.html":{}}}],["rightalign",{"_index":58,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["root",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":61,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["rule",{"_index":25,"title":{"interfaces/Rule.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["ruleset",{"_index":15,"title":{"interfaces/RuleSet.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["run",{"_index":393,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":238,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seed",{"_index":390,"title":{},"body":{"index.html":{}}}],["select",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":134,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["sell",{"_index":421,"title":{},"body":{"license.html":{}}}],["seriou",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":174,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["setqueryinputtype(valu",{"_index":170,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["setter",{"_index":179,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["shall",{"_index":428,"title":{},"body":{"license.html":{}}}],["show",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":410,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["specifi",{"_index":386,"title":{},"body":{"index.html":{}}}],["src/.../queri",{"_index":463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/components/queri",{"_index":5,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["src/queri",{"_index":122,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["start",{"_index":196,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":218,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["store",{"_index":374,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["structur",{"_index":378,"title":{},"body":{"index.html":{}}}],["style",{"_index":227,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["subject",{"_index":424,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":420,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":429,"title":{},"body":{"license.html":{}}}],["support",{"_index":289,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":455,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":193,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["switchcontrol",{"_index":57,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchgroup",{"_index":54,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchgroupcontext",{"_index":81,"title":{"interfaces/SwitchGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["switchlabel",{"_index":55,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchradio",{"_index":56,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchrow",{"_index":53,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["target",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["templat",{"_index":137,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["templateref",{"_index":140,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["test",{"_index":394,"title":{},"body":{"index.html":{}}}],["text",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["that'",{"_index":388,"title":{},"body":{"index.html":{}}}],["this._typ",{"_index":173,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["tort",{"_index":450,"title":{},"body":{"license.html":{}}}],["touch",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["transit",{"_index":59,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["tree",{"_index":60,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["trigger",{"_index":180,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["true",{"_index":365,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tweak",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEmptyWarningDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":165,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["unrecogn",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["updat",{"_index":177,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{}}}],["us",{"_index":211,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":237,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["useexist",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":39,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":20,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["valu",{"_index":28,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vanilla",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["variabl",{"_index":461,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":79,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EmptyWarningContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["warn",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["warning.directive.t",{"_index":149,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{}}}],["warning.directive.ts:4",{"_index":151,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{}}}],["warning.directive.ts:5",{"_index":152,"title":{},"body":{"directives/QueryEmptyWarningDirective.html":{}}}],["warranti",{"_index":431,"title":{},"body":{"license.html":{}}}],["way",{"_index":292,"title":{},"body":{"index.html":{}}}],["whether",{"_index":447,"title":{},"body":{"license.html":{}}}],["without",{"_index":176,"title":{},"body":{"directives/QueryInputDirective.html":{},"license.html":{}}}],["work",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":389,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["zeb",{"_index":400,"title":{},"body":{"license.html":{}}}],["zhao",{"_index":401,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":119,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ButtonGroupContext.html":{"url":"interfaces/ButtonGroupContext.html","title":"interface - ButtonGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ButtonGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        addRule\n                                \n                                \n                                        addRuleSet\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmptyWarningContext.html":{"url":"interfaces/EmptyWarningContext.html","title":"interface - EmptyWarningContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EmptyWarningContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultField\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultField\n                                    \n                                \n                                \n                                    \n                                        defaultField:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityContext.html":{"url":"interfaces/EntityContext.html","title":"interface - EntityContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        entities\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityMap.html":{"url":"interfaces/EntityMap.html","title":"interface - EntityMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Entity\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:42\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultOperator\n                                \n                                \n                                            Optional\n                                        defaultValue\n                                \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        operators\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        validator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOperator\n                                    \n                                \n                                \n                                    \n                                        defaultOperator:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultValue\n                                    \n                                \n                                \n                                    \n                                        defaultValue:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                    \n                                \n                                \n                                    \n                                        validator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldContext.html":{"url":"interfaces/FieldContext.html","title":"interface - FieldContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        fields\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        getFields\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFields\n                                    \n                                \n                                \n                                    \n                                        getFields:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldMap.html":{"url":"interfaces/FieldMap.html","title":"interface - FieldMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Field\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:20\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputContext.html":{"url":"interfaces/InputContext.html","title":"interface - InputContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InputContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        field\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     Field\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalRuleMeta.html":{"url":"interfaces/LocalRuleMeta.html","title":"interface - LocalRuleMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalRuleMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        invalid\n                                \n                                \n                                        ruleset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                    \n                                \n                                \n                                    \n                                        invalid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleset\n                                    \n                                \n                                \n                                    \n                                        ruleset:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperatorContext.html":{"url":"interfaces/OperatorContext.html","title":"interface - OperatorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OperatorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                                \n                                        operators\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Option.html":{"url":"interfaces/Option.html","title":"interface - Option","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderClassNames.html":{"url":"interfaces/QueryBuilderClassNames.html","title":"interface - QueryBuilderClassNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderClassNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addIcon\n                                \n                                \n                                            Optional\n                                        button\n                                \n                                \n                                            Optional\n                                        buttonGroup\n                                \n                                \n                                            Optional\n                                        connector\n                                \n                                \n                                            Optional\n                                        emptyWarning\n                                \n                                \n                                            Optional\n                                        entityControl\n                                \n                                \n                                            Optional\n                                        entityControlSize\n                                \n                                \n                                            Optional\n                                        fieldControl\n                                \n                                \n                                            Optional\n                                        fieldControlSize\n                                \n                                \n                                            Optional\n                                        inputControl\n                                \n                                \n                                            Optional\n                                        inputControlSize\n                                \n                                \n                                            Optional\n                                        invalidRuleSet\n                                \n                                \n                                            Optional\n                                        operatorControl\n                                \n                                \n                                            Optional\n                                        operatorControlSize\n                                \n                                \n                                            Optional\n                                        removeButton\n                                \n                                \n                                            Optional\n                                        removeButtonSize\n                                \n                                \n                                            Optional\n                                        removeIcon\n                                \n                                \n                                            Optional\n                                        rightAlign\n                                \n                                \n                                            Optional\n                                        row\n                                \n                                \n                                            Optional\n                                        rule\n                                \n                                \n                                            Optional\n                                        ruleSet\n                                \n                                \n                                            Optional\n                                        switchControl\n                                \n                                \n                                            Optional\n                                        switchGroup\n                                \n                                \n                                            Optional\n                                        switchLabel\n                                \n                                \n                                            Optional\n                                        switchRadio\n                                \n                                \n                                            Optional\n                                        switchRow\n                                \n                                \n                                            Optional\n                                        transition\n                                \n                                \n                                            Optional\n                                        tree\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addIcon\n                                    \n                                \n                                \n                                    \n                                        addIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        button\n                                    \n                                \n                                \n                                    \n                                        button:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttonGroup\n                                    \n                                \n                                \n                                    \n                                        buttonGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connector\n                                    \n                                \n                                \n                                    \n                                        connector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyWarning\n                                    \n                                \n                                \n                                    \n                                        emptyWarning:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControl\n                                    \n                                \n                                \n                                    \n                                        entityControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControlSize\n                                    \n                                \n                                \n                                    \n                                        entityControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControl\n                                    \n                                \n                                \n                                    \n                                        fieldControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControlSize\n                                    \n                                \n                                \n                                    \n                                        fieldControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControl\n                                    \n                                \n                                \n                                    \n                                        inputControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControlSize\n                                    \n                                \n                                \n                                    \n                                        inputControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidRuleSet\n                                    \n                                \n                                \n                                    \n                                        invalidRuleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControl\n                                    \n                                \n                                \n                                    \n                                        operatorControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControlSize\n                                    \n                                \n                                \n                                    \n                                        operatorControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButton\n                                    \n                                \n                                \n                                    \n                                        removeButton:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButtonSize\n                                    \n                                \n                                \n                                    \n                                        removeButtonSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeIcon\n                                    \n                                \n                                \n                                    \n                                        removeIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightAlign\n                                    \n                                \n                                \n                                    \n                                        rightAlign:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                    \n                                \n                                \n                                    \n                                        row:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rule\n                                    \n                                \n                                \n                                    \n                                        rule:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleSet\n                                    \n                                \n                                \n                                    \n                                        ruleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchControl\n                                    \n                                \n                                \n                                    \n                                        switchControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchGroup\n                                    \n                                \n                                \n                                    \n                                        switchGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchLabel\n                                    \n                                \n                                \n                                    \n                                        switchLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRadio\n                                    \n                                \n                                \n                                    \n                                        switchRadio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRow\n                                    \n                                \n                                \n                                    \n                                        switchRow:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transition\n                                    \n                                \n                                \n                                    \n                                        transition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tree\n                                    \n                                \n                                \n                                    \n                                        tree:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderConfig.html":{"url":"interfaces/QueryBuilderConfig.html","title":"interface - QueryBuilderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addRule\n                                \n                                \n                                            Optional\n                                        addRuleSet\n                                \n                                \n                                            Optional\n                                        allowEmptyRulesets\n                                \n                                \n                                            Optional\n                                        entities\n                                \n                                \n                                        fields\n                                \n                                \n                                            Optional\n                                        getInputType\n                                \n                                \n                                            Optional\n                                        getOperators\n                                \n                                \n                                            Optional\n                                        getOptions\n                                \n                                \n                                            Optional\n                                        removeRule\n                                \n                                \n                                            Optional\n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowEmptyRulesets\n                                    \n                                \n                                \n                                    \n                                        allowEmptyRulesets:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     EntityMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntityMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getInputType\n                                    \n                                \n                                \n                                    \n                                        getInputType:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOperators\n                                    \n                                \n                                \n                                    \n                                        getOperators:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOptions\n                                    \n                                \n                                \n                                    \n                                        getOptions:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryBuilderModule.html":{"url":"modules/QueryBuilderModule.html","title":"module - QueryBuilderModule","body":"\n                   \n\n\n\n\n  Modules\n  QueryBuilderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEmptyWarningDirective\n\nQueryEmptyWarningDirective\n\nQueryBuilderModule -->\n\nQueryEmptyWarningDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective  -->\n\nQueryBuilderModule->QueryEmptyWarningDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/query-builder.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                QueryBuilderComponent\n                            \n                            \n                                QueryButtonGroupDirective\n                            \n                            \n                                QueryEmptyWarningDirective\n                            \n                            \n                                QueryEntityDirective\n                            \n                            \n                                QueryFieldDirective\n                            \n                            \n                                QueryInputDirective\n                            \n                            \n                                QueryOperatorDirective\n                            \n                            \n                                QueryRemoveButtonDirective\n                            \n                            \n                                QuerySwitchGroupDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    QueryBuilderComponent\n                            \n                            \n                                    QueryButtonGroupDirective\n                            \n                            \n                                    QueryEmptyWarningDirective\n                            \n                            \n                                    QueryEntityDirective\n                            \n                            \n                                    QueryFieldDirective\n                            \n                            \n                                    QueryInputDirective\n                            \n                            \n                                    QueryOperatorDirective\n                            \n                            \n                                    QueryRemoveButtonDirective\n                            \n                            \n                                    QuerySwitchGroupDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, } from '@angular/forms';\nimport {\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryOperatorDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective,\n    QueryEmptyWarningDirective\n} from './components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective,\n    QueryEmptyWarningDirective\n  ],\n  exports: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective,\n    QueryEmptyWarningDirective\n  ]\n})\nexport class QueryBuilderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonGroupDirective.html":{"url":"directives/QueryButtonGroupDirective.html","title":"directive - QueryButtonGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryButtonGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-button-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryButtonGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-button-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-button-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryButtonGroup]'})\nexport class QueryButtonGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryEmptyWarningDirective.html":{"url":"directives/QueryEmptyWarningDirective.html","title":"directive - QueryEmptyWarningDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryEmptyWarningDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-empty-warning.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryEmptyWarning]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-empty-warning.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-empty-warning.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryEmptyWarning]'})\nexport class QueryEmptyWarningDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryEntityDirective.html":{"url":"directives/QueryEntityDirective.html","title":"directive - QueryEntityDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryEntityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-entity.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryEntity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-entity.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-entity.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryEntity]'})\nexport class QueryEntityDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryFieldDirective.html":{"url":"directives/QueryFieldDirective.html","title":"directive - QueryFieldDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryFieldDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-field.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryField]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-field.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-field.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryField]'})\nexport class QueryFieldDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryInputDirective.html":{"url":"directives/QueryInputDirective.html","title":"directive - QueryInputDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryInput]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryInputType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-input.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                    \n                        Unique name for query input type. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                \n\n\n                \n                    \n                        setqueryInputType(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/components/query-builder/query-input.directive.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryInput]'})\nexport class QueryInputDirective {\n  /** Unique name for query input type. */\n  @Input()\n  get queryInputType(): string { return this._type; }\n  set queryInputType(value: string) {\n    // If the directive is set without a type (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (!value) { return; }\n    this._type = value;\n  }\n  private _type: string;\n\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryOperatorDirective.html":{"url":"directives/QueryOperatorDirective.html","title":"directive - QueryOperatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryOperatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-operator.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryOperator]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-operator.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-operator.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryOperator]'})\nexport class QueryOperatorDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryRemoveButtonDirective.html":{"url":"directives/QueryRemoveButtonDirective.html","title":"directive - QueryRemoveButtonDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryRemoveButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-remove-button.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryRemoveButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-remove-button.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-remove-button.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryRemoveButton]'})\nexport class QueryRemoveButtonDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QuerySwitchGroupDirective.html":{"url":"directives/QuerySwitchGroupDirective.html","title":"directive - QuerySwitchGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QuerySwitchGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-switch-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [querySwitchGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-switch-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-switch-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[querySwitchGroup]'})\nexport class QuerySwitchGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveButtonContext.html":{"url":"interfaces/RemoveButtonContext.html","title":"interface - RemoveButtonContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RemoveButtonContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        removeRule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rule.html":{"url":"interfaces/Rule.html","title":"interface - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        operator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleSet.html":{"url":"interfaces/RuleSet.html","title":"interface - RuleSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        condition\n                                \n                                \n                                        rules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwitchGroupContext.html":{"url":"interfaces/SwitchGroupContext.html","title":"interface - SwitchGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SwitchGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EmptyWarningContext {\n  getDisabledState: () => boolean;\n  message: string;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAngular2-QueryBuilder Changelog\nVersion 0.3.2\n\nAdd queryEmptyMessage directive for customizing empty warning messages\nAdd [emptyMessage] to change the default empty message text\n\nVersion 0.3.1\n\nChange: add Rule will use defaultValue of Field as the default\nUpdated Angular Materials to 6.0 in demos\nFix touched state not being updated when changing the query condition (AND/OR)\nAdd [disabled] feature #61\nTweaks to Vanilla CSS styling\n\nVersion 0.3.0\n\nBreaking: Renamed changeField callback to onChange for queryField directive.\nAdd onChange callback to queryEntity, queryInput, queryOperator, queryInput for proper reactive form validation and touched behavior on custom components\nAdd proper touched behavior to reactive form usage (See #49)\nAdd entity mode (See #22)\nFix [value] unrecognized property binding\nFix QueryBuilderClassNames not being exported as interface\nFix in operator causing multi-select to be displayed for all types (only limited to category, boolean now)\nMinor tweaks to CSS styling of default component\n\nVersion 0.2.5\n\nFix root remove ruleset button showing\nFix default value bug where only the first character of the operator is shown\nFix inability to override multiselect operators (is in, is not in)\n\nVersion 0.2.4\n\nFix serious issue with validation causing ngModel value to be wrong\nNew QueryBuilderClassNames interface\nRewrite CSS for more extensible CSS classes\nNew bootstrap 4 example\n\nVersion 0.2.3\n\nFix IE11 not working (target ES5)\nFix invalid/valid state\nNew validator function on Field config\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^5.4.2\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : >=4.0.0\n        \n            @angular/core : >=4.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular-QueryBuilder\nA modernized Angular 4+ query builder based on jQuery QueryBuilder. Support for heavy customization with Angular components and provides a flexible way to handle custom data types.\nGetting Started\nInstall\nnpm install angular2-query-builder\nDemo\nPlay with the demo here.\nEditable demo\nSee the Plunker\nDocumentation\nDocumentation link\nExamples\nBasic Usage\napp.module.ts\nimport { QueryBuilderModule } from \"angular2-query-builder\";\nimport { AppComponent } from \"./app.component\"\n\n@NgModule(imports: [\n  ...,\n  QueryBuilderModule,\n  IonicModule.forRoot(AppComponent) // (Optional) for IonicFramework 2+\n])\nexport class AppModule { }app.component.html\n...\n\n...app.component.ts\nimport { QueryBuilderConfig } from 'angular2-query-builder';\n\nexport class AppComponent {\n  query = {\n    condition: 'and',\n    rules: [\n      {field: 'age', operator: '=', value: 'm'}\n    ]\n  };\n\n  config: QueryBuilderConfig = {\n    fields: {\n      age: {name: 'Age', type: 'number'},\n      gender: {\n        name: 'Gender',\n        type: 'category',\n        options: [\n          {name: 'Male', value: 'm'},\n          {name: 'Female', value: 'f'}\n        ]\n      }\n    }\n  }\n}Custom Input Components\napp.component.html\n\n  \n    \n  \napp.component.ts\nquery = {\n  condition: 'and',\n  rules: [\n    {field: 'birthday', operator: '=', value: new Date()}\n  ]\n};\n\nconfig: QueryBuilderConfig = {\n  fields: {\n    birthday: {name: 'Birthday', type: 'date', operators: ['=', '']\n      defaultValue: (() => return new Date())\n    },\n  }\n}Custom Styling (with Bootstrap 4)\nBootstrap demo.\napp.component.html\napp.component.ts\nclassNames: QueryBuilderClassNames = {\n  removeIcon: 'fa fa-minus',\n  addIcon: 'fa fa-plus',\n  button: 'btn',\n  buttonGroup: 'btn-group',\n  rightAlign: 'order-12 ml-auto',\n  switchRow: 'd-flex px-2',\n  switchGroup: 'd-flex align-items-center',\n  switchRadio: 'custom-control-input',\n  switchLabel: 'custom-control-label',\n  switchControl: 'custom-control custom-radio custom-control-inline',\n  row: 'row p-2 m-1',\n  rule: 'border',\n  ruleSet: 'border',\n  invalidRuleSet: 'alert alert-danger',\n  operatorControl: 'form-control',\n  operatorControlSize: 'col-auto px-0',\n  fieldControl: 'form-control',\n  fieldControlSize: 'col-auto',\n  inputControl: 'form-control',\n  inputControlSize: 'col-auto'\n}Customizing with Angular Material\nExample of how you can completely customize the query component with another library like Angular Material. For the full example, please look at the source code provided in the demo.\napp.component.html\n\n  \n    + Rule\n    + Ruleset\n    - Ruleset\n  \n  \n    \n      remove\n    \n  \n  \n    \n      And\n      Or\n    \n  \n  \n    \n      \n        {{field.name}}\n      \n    \n  \n  \n    \n      \n        {{value}}\n      \n    \n  \n  \n  \n    \n  \n  \n  \n    \n      \n        \n          {{ opt.name }}\n        \n      \n    \n  \n  ...\nProperty Bindings Quick Reference\nSee documentation for more details on interfaces and properties.\nquery-builder\n\n\n\nName\nType\nRequired\nDefault\nDescription\n\n\n\n\nallowRuleset\nboolean\nOptional\ntrue\nDisplays the + Ruleset button if true.\n\n\nclassNames\nobject\nOptional\n\nCSS class names for different child elements in query-builder component.\n\n\nconfig\nQueryBuilderConfig\nRequired\n\nConfiguration object for the main component.\n\n\ndata\nRuleset\nOptional\n\n(Use ngModel or value instead.)\n\n\nemptyMessage\nstring\nOptional\nMessage to display for an empty Ruleset if empty rulesets are not allowed.\n\n\nngModel\nRuleset\nOptional\n\nObject that stores the state of the component. Supports 2-way binding.\n\n\noperatorMap\n{ [key: string]: string[] }\nOptional\n\nUsed to map field types to list of operators.\n\n\nvalue\nRuleset\nOptional\n\nObject that stores the state of the component.\n\n\n\nStructural Directives\nUse these directives to replace different parts of query builder with custom components.\nqueryInput\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nfield\nField\nCurrent field object which contains the field's value and name\n\n\noptions\nOption[]\nList of options for the field, returned by getOptions\n\n\nonChange\n() => void\nCallback to handle changes to the input component\n\n\n\nqueryOperator\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\noperators\nstring[]\nList of operators for the field, returned by getOperators\n\n\nonChange\n() => void\nCallback to handle changes to the operator component\n\n\n\nqueryField\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\ngetFields\n(entityName: string) => void\nGet the list of fields corresponding to an entity\n\n\nfields\nField[]\nList of fields for the component, specified by config\n\n\nonChange\n(fieldValue: string, rule: Rule) => void\nCallback to handle changes to the field component\n\n\n\nqueryEntity\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nentities\nEntity[]\nList of entities for the component, specified by config\n\n\nonChange\n(entityValue: string, rule: Rule) => void\nCallback to handle changes to the entity component\n\n\n\nquerySwitchGroup\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\nonChange\n() => void\nCallback to handle changes to the switch group component\n\n\n\nqueryEmptyWarning\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\n\nqueryButtonGroup\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\naddRule\n() => void\nFunction to handle adding a new rule\n\n\naddRuleSet\n() => void\nFunction to handle adding a new rule set\n\n\nremoveRuleSet\n() => void\nFunction to handle removing the current rule set\n\n\n\nqueryRemoveButton\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nremoveRule\n(rule: Rule) => void\nFunction to handle removing a rule\n\n\n\nDependencies\n\nAngular 4+\n\nThat's it.\nWorkflow\nSee the angular-library-seed project for details on how to build and run tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Zeb Zhao\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryBuilderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEmptyWarningDirective\n\nQueryEmptyWarningDirective\n\nQueryBuilderModule -->\n\nQueryEmptyWarningDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective \n\nQueryEmptyWarningDirective  -->\n\nQueryBuilderModule->QueryEmptyWarningDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        8 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        18 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTROL_VALUE_ACCESSOR   (src/.../query-builder.component.ts)\n                        \n                        \n                            VALIDATOR   (src/.../query-builder.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/query-builder/query-builder.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VALIDATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        VALIDATOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
