var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ButtonGroupContext.html",[0,0.097,1,0.623]],["body/interfaces/ButtonGroupContext.html",[0,0.189,1,0.738,2,0.226,3,0.192,4,0.192,5,0.226,6,0.226,7,0.561,8,0.192,9,0.378,10,1.128,11,1.006,12,1.006,13,1.006,14,0.971,15,0.314,16,0.034,17,1.936,18,0.192,19,0.561,20,0.511,21,0.303,22,0.464,23,1.17,24,1.124,25,0.561,26,0.962,27,0.7,28,0.862,29,0.982,30,0.395,31,0.383,32,0.738,33,0.738,34,0.561,35,0.862,36,0.511,37,0.561,38,0.464,39,1.105,40,0.561,41,0.511,42,0.561,43,0.738,44,0.561,45,0.42,46,0.511,47,0.511,48,0.42,49,0.511,50,0.561,51,0.561,52,0.511,53,0.511,54,0.511,55,0.511,56,0.511,57,0.511,58,0.561,59,0.561,60,0.511,61,0.561,62,0.511,63,0.561,64,0.511,65,0.511,66,0.561,67,0.561,68,0.511,69,0.511,70,0.511,71,0.511,72,0.464,73,0.561,74,0.511,75,0.511,76,0.561,77,0.511,78,1.074,79,0.738,80,0.511,81,0.949,82,0.561,83,0.511,84,0.561,85,0.511,86,0.561,87,0.561,88,0.561,89,0.511,90,0.561,91,0.511,92,0.019,93,0.019]],["title/interfaces/Entity.html",[0,0.097,29,0.565]],["body/interfaces/Entity.html",[0,0.189,1,0.515,2,0.228,3,0.194,4,0.194,5,0.228,6,0.228,7,0.565,8,0.194,9,0.38,10,1.051,11,0.742,12,0.742,13,0.742,14,0.953,15,0.297,16,0.034,18,0.194,19,0.565,20,0.515,21,0.303,22,0.468,23,1.173,24,1.125,25,0.565,26,0.963,27,0.799,28,0.864,29,1.007,30,0.431,31,0.465,32,0.742,33,0.742,34,0.565,35,0.864,36,0.515,37,0.565,38,0.468,39,1.108,40,0.565,41,0.515,42,0.565,43,0.742,44,1.045,45,0.423,46,0.515,47,0.515,48,0.423,49,0.515,50,0.565,51,0.565,52,0.515,53,0.515,54,0.515,55,0.515,56,0.515,57,0.515,58,0.565,59,0.565,60,0.515,61,0.565,62,0.515,63,0.565,64,0.515,65,0.515,66,0.565,67,0.565,68,0.515,69,0.515,70,0.515,71,0.515,72,0.468,73,0.565,74,0.515,75,0.515,76,0.565,77,0.515,78,1.075,79,0.742,80,0.515,81,0.952,82,0.565,83,0.515,84,0.565,85,0.515,86,0.565,87,0.565,88,0.565,89,0.515,90,0.565,91,0.515,92,0.019,93,0.019]],["title/interfaces/EntityContext.html",[0,0.097,83,0.623]],["body/interfaces/EntityContext.html",[0,0.189,1,0.516,2,0.228,3,0.194,4,0.194,5,0.228,6,0.228,7,0.567,8,0.194,9,0.38,10,1.13,11,0.744,12,0.744,13,0.744,14,0.954,15,0.298,16,0.034,17,1.373,18,0.194,19,0.567,20,0.516,21,0.304,22,0.469,23,1.171,24,1.131,25,0.567,26,0.964,27,0.703,28,0.866,29,1.066,30,0.396,31,0.386,32,0.744,33,0.744,34,0.567,35,0.866,36,0.516,37,0.567,38,0.469,39,1.109,40,0.567,41,0.516,42,0.567,43,0.744,44,0.567,45,0.424,46,0.516,47,0.516,48,0.424,49,0.516,50,0.567,51,0.567,52,0.516,53,0.516,54,0.516,55,0.516,56,0.516,57,0.516,58,0.567,59,0.567,60,0.516,61,0.567,62,0.516,63,0.567,64,0.516,65,0.516,66,0.567,67,0.567,68,0.516,69,0.516,70,0.516,71,0.516,72,0.469,73,0.567,74,0.516,75,0.516,76,0.567,77,0.516,78,1.076,79,0.744,80,0.516,81,1.084,82,0.567,83,0.744,84,0.567,85,0.516,86,0.567,87,0.567,88,0.567,89,0.516,90,0.567,91,0.516,92,0.019,93,0.019]],["title/interfaces/EntityMap.html",[0,0.097,43,0.623]],["body/interfaces/EntityMap.html",[0,0.19,1,0.528,2,0.234,3,0.199,4,0.199,5,0.334,6,0.334,7,0.58,8,0.199,10,1.06,11,0.756,12,0.756,13,0.756,14,0.958,15,0.165,16,0.034,18,0.199,19,0.58,20,0.528,21,0.305,22,0.48,23,1.173,24,1.128,25,0.58,26,0.968,27,0.711,28,0.875,29,1.014,30,0.399,31,0.391,32,0.756,33,0.883,34,0.58,35,0.875,36,0.528,37,0.58,38,0.48,39,1.119,40,0.58,41,0.528,42,0.58,43,0.883,44,0.58,45,0.434,46,0.528,47,0.528,48,0.434,49,0.528,50,0.58,51,0.58,52,0.528,53,0.528,54,0.528,55,0.528,56,0.528,57,0.528,58,0.58,59,0.58,60,0.528,61,0.58,62,0.528,63,0.58,64,0.528,65,0.528,66,0.58,67,0.58,68,0.528,69,0.528,70,0.528,71,0.528,72,0.48,73,0.58,74,0.528,75,0.528,76,0.58,77,0.528,78,1.08,79,0.756,80,0.528,81,0.963,82,0.58,83,0.528,84,0.58,85,0.528,86,0.58,87,0.58,88,0.58,89,0.528,90,0.58,91,0.528,92,0.02,93,0.02,94,1.063,95,2.679]],["title/interfaces/Field.html",[0,0.097,26,0.511]],["body/interfaces/Field.html",[0,0.187,1,0.476,2,0.21,3,0.179,4,0.179,5,0.21,6,0.21,7,0.522,8,0.179,9,0.358,10,1.022,11,0.7,12,0.7,13,0.7,14,0.937,15,0.368,16,0.034,17,1.293,18,0.179,19,0.522,20,0.476,21,0.3,22,0.432,23,1.172,24,1.115,25,0.522,26,0.958,27,0.78,28,0.96,29,1.022,30,0.468,31,0.452,32,0.7,33,0.7,34,1.006,35,0.928,36,0.917,37,1.006,38,0.833,39,1.073,40,0.522,41,0.476,42,0.522,43,0.7,44,0.522,45,0.39,46,0.476,47,0.476,48,0.39,49,0.476,50,0.522,51,0.522,52,0.476,53,0.476,54,0.476,55,0.476,56,0.476,57,0.476,58,0.522,59,0.522,60,0.476,61,0.522,62,0.476,63,0.522,64,0.476,65,0.476,66,0.522,67,0.522,68,0.476,69,0.476,70,0.476,71,0.476,72,0.432,73,0.522,74,0.476,75,0.476,76,0.522,77,0.476,78,1.06,79,0.7,80,0.476,81,0.917,82,0.522,83,0.476,84,0.522,85,0.476,86,0.522,87,0.522,88,0.522,89,0.476,90,0.522,91,0.476,92,0.018,93,0.018]],["title/interfaces/FieldContext.html",[0,0.097,85,0.623]],["body/interfaces/FieldContext.html",[0,0.189,1,0.511,2,0.226,3,0.192,4,0.192,5,0.226,6,0.226,7,0.561,8,0.192,9,0.378,10,1.128,11,0.738,12,0.738,13,0.738,14,0.952,15,0.314,16,0.034,17,1.752,18,0.192,19,0.561,20,0.511,21,0.303,22,0.464,23,1.17,24,1.13,25,0.561,26,0.996,27,0.7,28,0.862,29,0.982,30,0.395,31,0.383,32,0.738,33,0.738,34,0.561,35,0.862,36,0.511,37,0.561,38,0.464,39,1.105,40,0.561,41,0.511,42,0.561,43,0.738,44,0.561,45,0.42,46,0.511,47,0.511,48,0.42,49,0.511,50,0.561,51,0.561,52,0.511,53,0.511,54,0.511,55,0.511,56,0.511,57,0.511,58,0.561,59,0.561,60,0.511,61,0.561,62,0.511,63,0.561,64,0.511,65,0.511,66,0.561,67,0.561,68,0.511,69,0.511,70,0.511,71,0.511,72,0.464,73,0.561,74,0.511,75,0.511,76,0.561,77,0.511,78,1.074,79,0.738,80,0.511,81,1.081,82,0.561,83,0.511,84,0.561,85,0.738,86,0.561,87,1.042,88,0.561,89,0.511,90,0.561,91,0.511,92,0.019,93,0.019]],["title/interfaces/FieldMap.html",[0,0.097,32,0.623]],["body/interfaces/FieldMap.html",[0,0.19,1,0.528,2,0.234,3,0.199,4,0.199,5,0.334,6,0.334,7,0.58,8,0.199,10,1.06,11,0.756,12,0.756,13,0.756,14,0.958,15,0.165,16,0.034,18,0.199,19,0.58,20,0.528,21,0.305,22,0.48,23,1.173,24,1.128,25,0.58,26,0.976,27,0.711,28,0.875,29,0.991,30,0.399,31,0.391,32,0.883,33,0.883,34,0.58,35,0.875,36,0.528,37,0.58,38,0.48,39,1.119,40,0.58,41,0.528,42,0.58,43,0.756,44,0.58,45,0.434,46,0.528,47,0.528,48,0.434,49,0.528,50,0.58,51,0.58,52,0.528,53,0.528,54,0.528,55,0.528,56,0.528,57,0.528,58,0.58,59,0.58,60,0.528,61,0.58,62,0.528,63,0.58,64,0.528,65,0.528,66,0.58,67,0.58,68,0.528,69,0.528,70,0.528,71,0.528,72,0.48,73,0.58,74,0.528,75,0.528,76,0.58,77,0.528,78,1.08,79,0.756,80,0.528,81,0.963,82,0.58,83,0.528,84,0.58,85,0.528,86,0.58,87,0.58,88,0.58,89,0.528,90,0.58,91,0.528,92,0.02,93,0.02,94,1.063,96,2.679]],["title/interfaces/InputContext.html",[0,0.097,89,0.623]],["body/interfaces/InputContext.html",[0,0.189,1,0.511,2,0.226,3,0.192,4,0.192,5,0.226,6,0.226,7,0.561,8,0.192,9,0.378,10,1.128,11,0.738,12,0.738,13,0.738,14,0.952,15,0.314,16,0.034,17,1.363,18,0.192,19,0.561,20,0.511,21,0.303,22,0.464,23,1.17,24,1.13,25,0.561,26,0.996,27,0.7,28,0.862,29,0.982,30,0.436,31,0.383,32,0.738,33,0.738,34,0.561,35,0.862,36,0.511,37,0.561,38,0.464,39,1.105,40,0.561,41,0.511,42,0.561,43,0.738,44,0.561,45,0.42,46,0.511,47,0.511,48,0.42,49,0.511,50,0.561,51,0.561,52,0.511,53,0.511,54,0.511,55,0.511,56,0.511,57,0.511,58,0.561,59,0.561,60,0.511,61,0.561,62,0.511,63,0.561,64,0.511,65,0.511,66,0.561,67,0.561,68,0.511,69,0.511,70,0.511,71,0.511,72,0.464,73,0.561,74,0.511,75,0.511,76,0.561,77,0.511,78,1.074,79,0.738,80,0.511,81,1.081,82,0.561,83,0.511,84,0.561,85,0.511,86,0.561,87,0.561,88,0.561,89,0.738,90,0.561,91,0.511,92,0.019,93,0.019]],["title/interfaces/LocalRuleMeta.html",[0,0.097,41,0.623]],["body/interfaces/LocalRuleMeta.html",[0,0.19,1,0.522,2,0.231,3,0.196,4,0.196,5,0.231,6,0.231,7,0.572,8,0.196,9,0.383,10,1.056,11,0.749,12,0.749,13,0.749,14,0.981,15,0.274,16,0.034,18,0.196,19,0.572,20,0.522,21,0.304,22,0.473,23,1.171,24,1.126,25,0.572,26,0.965,27,0.707,28,0.869,29,0.987,30,0.397,31,0.388,32,0.749,33,0.749,34,0.572,35,1.01,36,0.522,37,0.572,38,0.473,39,1.113,40,0.572,41,0.749,42,1.051,43,0.749,44,0.572,45,0.428,46,0.522,47,0.522,48,0.428,49,0.522,50,0.572,51,0.572,52,0.522,53,0.522,54,0.522,55,0.522,56,0.522,57,0.522,58,0.572,59,0.572,60,0.522,61,0.572,62,0.522,63,0.572,64,0.522,65,0.522,66,0.572,67,0.572,68,0.522,69,0.522,70,0.522,71,0.522,72,0.473,73,0.572,74,0.522,75,0.522,76,0.572,77,0.522,78,1.077,79,0.749,80,0.522,81,0.958,82,0.572,83,0.522,84,0.572,85,0.522,86,0.572,87,0.572,88,0.572,89,0.522,90,0.572,91,0.522,92,0.02,93,0.02]],["title/interfaces/OperatorContext.html",[0,0.097,80,0.623]],["body/interfaces/OperatorContext.html",[0,0.189,1,0.516,2,0.228,3,0.194,4,0.194,5,0.228,6,0.228,7,0.567,8,0.194,9,0.38,10,1.13,11,0.744,12,0.744,13,0.744,14,0.954,15,0.298,16,0.034,17,1.373,18,0.194,19,0.567,20,0.516,21,0.304,22,0.469,23,1.172,24,1.131,25,0.567,26,0.964,27,0.703,28,0.985,29,0.985,30,0.396,31,0.386,32,0.744,33,0.744,34,0.567,35,0.866,36,0.516,37,0.567,38,0.469,39,1.109,40,0.567,41,0.516,42,0.567,43,0.744,44,0.567,45,0.424,46,0.516,47,0.516,48,0.424,49,0.516,50,0.567,51,0.567,52,0.516,53,0.516,54,0.516,55,0.516,56,0.516,57,0.516,58,0.567,59,0.567,60,0.516,61,0.567,62,0.516,63,0.567,64,0.516,65,0.516,66,0.567,67,0.567,68,0.516,69,0.516,70,0.516,71,0.516,72,0.469,73,0.567,74,0.516,75,0.516,76,0.567,77,0.516,78,1.076,79,0.744,80,0.744,81,1.084,82,0.567,83,0.516,84,0.567,85,0.516,86,0.567,87,0.567,88,0.567,89,0.516,90,0.567,91,0.516,92,0.019,93,0.019]],["title/interfaces/Option.html",[0,0.097,30,0.234]],["body/interfaces/Option.html",[0,0.19,1,0.523,2,0.231,3,0.197,4,0.197,5,0.231,6,0.231,7,0.574,8,0.197,9,0.384,10,1.057,11,0.75,12,0.75,13,0.75,14,0.956,15,0.274,16,0.034,18,0.197,19,0.574,20,0.523,21,0.304,22,0.475,23,1.173,24,1.127,25,0.574,26,0.966,27,0.803,28,0.871,29,0.988,30,0.41,31,0.468,32,0.75,33,0.75,34,0.574,35,0.871,36,0.523,37,0.574,38,0.475,39,1.114,40,0.574,41,0.523,42,0.574,43,0.75,44,0.574,45,0.429,46,0.523,47,0.523,48,0.429,49,0.523,50,0.574,51,0.574,52,0.523,53,0.523,54,0.523,55,0.523,56,0.523,57,0.523,58,0.574,59,0.574,60,0.523,61,0.574,62,0.523,63,0.574,64,0.523,65,0.523,66,0.574,67,0.574,68,0.523,69,0.523,70,0.523,71,0.523,72,0.475,73,0.574,74,0.523,75,0.523,76,0.574,77,0.523,78,1.078,79,0.75,80,0.523,81,0.959,82,0.574,83,0.523,84,0.574,85,0.523,86,0.574,87,0.574,88,0.574,89,0.523,90,0.574,91,0.523,92,0.02,93,0.02]],["title/interfaces/QueryBuilderClassNames.html",[0,0.097,45,0.511]],["body/interfaces/QueryBuilderClassNames.html",[0,0.181,1,0.39,2,0.173,3,0.147,4,0.147,5,0.173,6,0.173,7,0.428,8,0.147,9,0.308,10,0.948,11,0.603,12,0.603,13,0.603,14,0.93,15,0.383,16,0.034,18,0.147,19,0.428,20,0.39,21,0.29,22,0.354,23,1.179,24,1.1,25,0.428,26,0.908,27,0.612,28,0.753,29,0.897,30,0.481,31,0.326,32,0.603,33,0.603,34,0.428,35,0.753,36,0.39,37,0.428,38,0.354,39,0.984,40,0.428,41,0.39,42,0.428,43,0.603,44,0.428,45,0.495,46,0.829,47,0.829,48,0.68,49,0.829,50,0.91,51,0.91,52,0.829,53,0.829,54,0.829,55,0.829,56,0.829,57,0.829,58,0.91,59,0.91,60,0.829,61,0.91,62,0.829,63,0.91,64,0.829,65,0.829,66,0.91,67,0.91,68,0.829,69,0.829,70,0.829,71,0.829,72,0.354,73,0.428,74,0.39,75,0.39,76,0.428,77,0.39,78,1.017,79,0.603,80,0.39,81,0.829,82,0.428,83,0.39,84,0.428,85,0.39,86,0.428,87,0.428,88,0.428,89,0.39,90,0.428,91,0.39,92,0.016,93,0.016]],["title/interfaces/QueryBuilderConfig.html",[0,0.097,72,0.565]],["body/interfaces/QueryBuilderConfig.html",[0,0.187,1,0.472,2,0.209,3,0.178,4,0.178,5,0.209,6,0.209,7,0.518,8,0.178,9,0.356,10,1.02,11,0.974,12,0.974,13,0.974,14,0.935,15,0.356,16,0.034,17,2.17,18,0.178,19,0.518,20,0.472,21,0.299,22,0.429,23,1.166,24,1.114,25,0.518,26,0.972,27,0.674,28,0.829,29,1.02,30,0.464,31,0.366,32,0.914,33,0.696,34,0.518,35,0.926,36,0.472,37,0.518,38,0.429,39,1.069,40,0.518,41,0.472,42,0.518,43,0.914,44,0.518,45,0.387,46,0.472,47,0.472,48,0.387,49,0.472,50,0.518,51,0.518,52,0.472,53,0.472,54,0.472,55,0.472,56,0.472,57,0.472,58,0.518,59,0.518,60,0.472,61,0.518,62,0.472,63,0.518,64,0.472,65,0.472,66,0.518,67,0.518,68,0.472,69,0.472,70,0.472,71,0.472,72,0.632,73,1.003,74,0.914,75,0.472,76,1.003,77,0.914,78,1.058,79,0.974,80,0.472,81,0.914,82,0.518,83,0.472,84,0.518,85,0.472,86,0.518,87,0.518,88,0.518,89,0.472,90,0.518,91,0.472,92,0.018,93,0.018]],["title/modules/QueryBuilderModule.html",[97,1.816,98,1.816]],["body/modules/QueryBuilderModule.html",[2,0.288,3,0.245,4,0.245,16,0.034,18,0.414,20,0.652,21,0.265,92,0.023,93,0.023,97,2.552,98,3.736,99,1.902,100,2.754,101,4.168,102,2.119,103,1.902,104,2.754,105,2.754,106,2.754,107,4.481,108,3.972,109,3.972,110,3.972,111,3.972,112,3.972,113,3.972,114,3.972,115,3.694,116,2.754,117,2.39,118,3.306,119,3.306,120,4.434,121,1.312,122,4.434,123,2.754,124,4.434,125,2.119,126,1.204]],["title/directives/QueryButtonGroupDirective.html",[108,2.023,127,0.623]],["body/directives/QueryButtonGroupDirective.html",[2,0.379,3,0.322,4,0.322,5,0.497,6,0.497,8,0.322,9,0.533,15,0.326,16,0.033,18,0.322,21,0.215,30,0.322,31,0.379,48,0.921,92,0.027,93,0.027,94,2.096,108,3.386,121,1.725,126,1.582,127,1.042,128,3.62,129,2.06,130,2.06,131,4.4,132,2.504,133,2.876,134,2.06,135,2.06,136,2.924,137,3.62,138,2.06,139,3.62,140,4.346,141,2.06,142,2.06,143,2.06]],["title/directives/QueryEntityDirective.html",[109,2.023,127,0.623]],["body/directives/QueryEntityDirective.html",[2,0.383,3,0.325,4,0.325,5,0.499,6,0.499,8,0.325,9,0.536,15,0.327,16,0.033,18,0.325,21,0.217,30,0.325,31,0.383,92,0.027,93,0.027,94,2.108,109,3.405,121,1.741,126,1.597,127,1.048,129,2.08,130,2.08,132,2.518,133,2.883,134,2.08,135,2.08,136,2.931,138,2.08,141,2.08,142,2.08,143,2.08,144,4.387,145,4.425,146,4.387,147,4.387]],["title/directives/QueryFieldDirective.html",[110,2.023,127,0.623]],["body/directives/QueryFieldDirective.html",[2,0.383,3,0.325,4,0.325,5,0.499,6,0.499,8,0.325,9,0.536,15,0.327,16,0.033,18,0.325,21,0.217,30,0.325,31,0.383,92,0.027,93,0.027,94,2.108,110,3.405,121,1.741,126,1.597,127,1.048,129,2.08,130,2.08,132,2.518,133,2.883,134,2.08,135,2.08,136,2.931,138,2.08,141,2.08,142,2.08,143,2.08,148,4.387,149,3.841,150,4.387,151,4.387]],["title/directives/QueryInputDirective.html",[111,2.023,127,0.623]],["body/directives/QueryInputDirective.html",[2,0.323,3,0.275,4,0.275,5,0.505,6,0.505,8,0.275,9,0.482,15,0.372,16,0.033,18,0.275,21,0.184,23,1.08,27,0.814,30,0.355,31,0.488,78,0.664,92,0.025,93,0.025,94,2.219,111,3.065,121,1.471,126,1.35,127,1.044,129,1.757,130,1.757,132,2.267,133,2.744,134,1.757,135,1.757,136,2.81,138,2.267,141,2.81,142,1.757,143,1.757,152,3.706,153,3.457,154,5.591,155,3.706,156,4.781,157,3.983,158,3.706,159,3.706,160,3.706,161,3.706,162,3.706,163,4.409,164,4.781,165,4.409,166,3.706,167,3.088,168,3.706,169,4.781,170,3.706,171,3.706,172,3.706,173,3.706,174,3.706,175,3.706]],["title/directives/QueryOperatorDirective.html",[112,2.023,127,0.623]],["body/directives/QueryOperatorDirective.html",[2,0.383,3,0.325,4,0.325,5,0.499,6,0.499,8,0.325,9,0.536,15,0.327,16,0.033,18,0.325,21,0.217,30,0.325,31,0.383,92,0.027,93,0.027,94,2.108,112,3.405,121,1.741,126,1.597,127,1.048,129,2.08,130,2.08,132,2.518,133,2.883,134,2.08,135,2.08,136,2.931,138,2.08,141,2.08,142,2.08,143,2.08,176,4.387,177,3.841,178,4.387,179,4.387]],["title/directives/QueryRemoveButtonDirective.html",[113,2.023,127,0.623]],["body/directives/QueryRemoveButtonDirective.html",[2,0.381,3,0.324,4,0.324,5,0.498,6,0.498,8,0.324,9,0.534,15,0.326,16,0.033,18,0.324,21,0.216,30,0.324,31,0.381,92,0.027,93,0.027,94,2.102,113,3.396,121,1.733,126,1.59,127,1.045,129,2.07,130,2.07,132,2.511,133,2.88,134,2.07,135,2.07,136,2.927,138,2.07,142,2.07,143,2.07,180,4.124,181,4.366,182,4.413,183,4.366,184,4.366]],["title/directives/QuerySwitchGroupDirective.html",[114,2.023,127,0.623]],["body/directives/QuerySwitchGroupDirective.html",[2,0.38,3,0.323,4,0.323,5,0.497,6,0.497,8,0.323,9,0.534,15,0.326,16,0.033,18,0.323,21,0.216,30,0.323,31,0.38,92,0.027,93,0.027,94,2.099,114,3.391,121,1.729,126,1.586,127,1.043,128,3.629,129,2.065,130,2.065,132,2.508,133,2.878,134,2.065,135,2.065,136,2.926,137,3.629,138,2.065,139,3.629,141,2.065,142,2.065,143,2.065,185,5.697,186,4.407]],["title/interfaces/RemoveButtonContext.html",[0,0.097,91,0.623]],["body/interfaces/RemoveButtonContext.html",[0,0.19,1,0.522,2,0.231,3,0.196,4,0.196,5,0.231,6,0.231,7,0.572,8,0.196,9,0.383,10,1.133,11,0.749,12,0.749,13,0.749,14,0.955,15,0.274,16,0.034,17,1.383,18,0.196,19,0.572,20,0.522,21,0.304,22,0.473,23,1.171,24,1.133,25,0.572,26,0.965,27,0.707,28,0.869,29,0.987,30,0.397,31,0.388,32,0.749,33,0.749,34,0.572,35,0.869,36,0.522,37,0.572,38,0.473,39,1.113,40,0.572,41,0.522,42,0.572,43,0.749,44,0.572,45,0.428,46,0.522,47,0.522,48,0.428,49,0.522,50,0.572,51,0.572,52,0.522,53,0.522,54,0.522,55,0.522,56,0.522,57,0.522,58,0.572,59,0.572,60,0.522,61,0.572,62,0.522,63,0.572,64,0.522,65,0.522,66,0.572,67,0.572,68,0.522,69,0.522,70,0.522,71,0.522,72,0.473,73,0.572,74,0.522,75,0.522,76,0.572,77,0.522,78,1.077,79,1.014,80,0.522,81,0.958,82,0.572,83,0.522,84,0.572,85,0.522,86,0.572,87,0.572,88,0.572,89,0.522,90,0.572,91,0.749,92,0.02,93,0.02]],["title/interfaces/Rule.html",[0,0.097,24,0.565]],["body/interfaces/Rule.html",[0,0.189,1,0.509,2,0.225,3,0.191,4,0.191,5,0.225,6,0.225,7,0.558,8,0.191,9,0.376,10,1.047,11,0.735,12,0.735,13,0.735,14,0.95,15,0.314,16,0.034,18,0.191,19,0.558,20,0.509,21,0.303,22,0.462,23,1.173,24,1.127,25,0.558,26,0.984,27,0.796,28,0.98,29,1.038,30,0.44,31,0.382,32,0.735,33,0.735,34,0.558,35,0.859,36,0.509,37,0.558,38,0.462,39,1.102,40,0.558,41,0.509,42,0.558,43,0.735,44,0.558,45,0.417,46,0.509,47,0.509,48,0.417,49,0.509,50,0.558,51,0.558,52,0.509,53,0.509,54,0.509,55,0.509,56,0.509,57,0.509,58,0.558,59,0.558,60,0.509,61,0.558,62,0.509,63,0.558,64,0.509,65,0.509,66,0.558,67,0.558,68,0.509,69,0.509,70,0.509,71,0.509,72,0.462,73,0.558,74,0.509,75,0.509,76,0.558,77,0.509,78,1.073,79,0.735,80,0.509,81,0.947,82,0.558,83,0.509,84,0.558,85,0.509,86,0.558,87,0.558,88,0.558,89,0.509,90,0.558,91,0.509,92,0.019,93,0.019]],["title/interfaces/RuleSet.html",[0,0.097,14,0.511]],["body/interfaces/RuleSet.html",[0,0.19,1,0.522,2,0.231,3,0.196,4,0.196,5,0.231,6,0.231,7,0.572,8,0.196,9,0.383,10,1.056,11,0.749,12,0.749,13,0.749,14,0.965,15,0.274,16,0.034,18,0.196,19,0.572,20,0.522,21,0.304,22,0.869,23,1.173,24,1.135,25,0.962,26,0.965,27,0.707,28,0.869,29,0.987,30,0.397,31,0.388,32,0.749,33,0.749,34,0.572,35,0.869,36,0.522,37,0.572,38,0.473,39,1.113,40,0.572,41,0.522,42,0.572,43,0.749,44,0.572,45,0.428,46,0.522,47,0.522,48,0.428,49,0.522,50,0.572,51,0.572,52,0.522,53,0.522,54,0.522,55,0.522,56,0.522,57,0.522,58,0.572,59,0.572,60,0.522,61,0.572,62,0.522,63,0.572,64,0.522,65,0.522,66,0.572,67,0.572,68,0.522,69,0.522,70,0.522,71,0.522,72,0.473,73,0.572,74,0.522,75,0.522,76,0.572,77,0.522,78,1.077,79,0.749,80,0.522,81,0.958,82,0.572,83,0.522,84,0.572,85,0.522,86,0.572,87,0.572,88,0.572,89,0.522,90,0.572,91,0.522,92,0.02,93,0.02]],["title/changelog.html",[187,1.693,188,1.693,189,2.2]],["body/changelog.html",[0,0.149,9,0.382,14,0.612,15,0.233,16,0.025,17,1.377,21,0.187,26,0.612,27,0.777,28,0.957,29,0.677,35,0.677,38,0.957,45,0.784,48,0.612,81,0.955,92,0.025,93,0.025,102,2.424,125,3.104,126,1.377,127,0.746,145,3.15,149,2.735,153,3.502,177,2.735,180,2.735,189,3.15,190,3.15,191,3.15,192,5.634,193,3.782,194,3.782,195,3.782,196,3.15,197,4.843,198,5.343,199,4.843,200,4.843,201,4.035,202,4.843,203,4.843,204,3.15,205,3.15,206,4.035,207,3.782,208,3.782,209,3.782,210,6.195,211,3.782,212,3.15,213,3.782,214,4.843,215,3.15,216,3.782,217,3.15,218,3.15,219,3.15,220,3.782,221,3.782,222,3.782,223,4.451,224,3.15,225,3.502,226,3.782,227,3.782,228,3.782,229,3.782,230,3.782,231,3.782,232,3.782,233,3.782,234,3.782,235,3.782,236,3.782,237,3.782,238,3.782,239,3.15,240,3.782,241,4.451,242,3.782,243,3.15,244,3.782,245,3.15,246,3.15,247,3.782,248,3.782,249,3.782,250,3.782,251,3.782,252,3.782,253,3.15,254,3.15]],["title/dependencies.html",[99,2.183,255,2.641]],["body/dependencies.html",[16,0.032,92,0.029,93,0.029,99,3.276,121,1.957,123,4.109,256,4.932,257,4.932,258,4.932,259,5.694]],["title/index.html",[8,0.196,187,1.693,188,1.693]],["body/index.html",[0,0.061,3,0.148,9,0.31,10,0.951,11,0.393,12,0.393,13,0.393,14,0.862,15,0.346,16,0.033,17,1.662,18,0.279,21,0.152,22,0.551,23,0.756,24,1.097,26,0.963,27,0.818,28,0.974,30,0.411,31,0.502,33,0.393,35,0.357,36,0.393,45,0.323,46,0.393,47,0.393,48,0.498,49,0.393,52,0.393,53,0.393,54,0.393,55,0.393,56,0.393,57,0.393,60,0.607,62,0.393,64,0.393,65,0.393,68,0.393,69,0.393,70,0.393,71,0.393,72,0.756,74,0.393,75,0.393,77,0.393,78,0.817,79,0.393,92,0.016,93,0.016,98,1.77,99,1.147,102,1.972,103,1.77,125,3.487,126,1.368,127,0.607,131,1.661,141,1.459,149,1.442,153,1.442,157,4.532,163,3.129,165,3.518,177,1.442,180,2.716,182,1.661,186,1.661,187,1.278,188,1.278,190,3.129,191,2.563,196,1.661,201,3.129,204,4.682,205,1.661,206,3.129,212,2.563,217,1.661,219,1.661,223,1.661,224,1.661,225,1.442,239,2.563,241,3.518,243,1.661,245,3.129,246,3.129,253,2.563,254,3.518,260,5.026,261,1.994,262,5.026,263,1.994,264,1.994,265,2.563,266,1.994,267,1.994,268,3.077,269,4.822,270,3.077,271,3.077,272,1.994,273,4.223,274,1.994,275,1.994,276,1.994,277,3.129,278,1.994,279,1.994,280,1.994,281,3.077,282,1.994,283,1.994,284,1.994,285,1.994,286,4.223,287,1.994,288,4.223,289,3.757,290,3.757,291,3.757,292,1.994,293,3.077,294,1.994,295,1.994,296,1.994,297,3.757,298,3.757,299,3.077,300,4.223,301,1.994,302,1.994,303,3.077,304,1.994,305,1.994,306,1.994,307,1.994,308,4.223,309,3.077,310,3.077,311,3.077,312,1.994,313,1.994,314,1.994,315,5.026,316,1.994,317,1.994,318,1.994,319,1.994,320,1.661,321,3.077,322,3.077,323,1.994,324,3.757,325,1.994,326,3.077,327,1.994,328,1.994,329,3.077,330,1.994,331,1.994,332,1.994,333,1.994,334,1.994,335,1.994,336,1.994,337,1.994,338,3.077,339,3.077,340,5.026,341,1.994,342,2.563,343,5.536,344,3.077,345,3.757,346,1.994,347,1.994,348,1.994,349,1.994,350,3.129,351,1.994,352,3.077,353,1.994,354,1.994,355,4.822,356,1.994,357,1.994,358,1.994,359,4.822,360,5.191,361,5.026,362,1.994,363,1.994,364,1.994,365,3.077,366,1.994,367,1.994,368,1.994,369,1.994,370,1.994,371,1.994,372,1.994]],["title/license.html",[187,1.693,188,1.693,373,2.2]],["body/license.html",[4,0.301,16,0.026,22,0.727,92,0.026,93,0.026,103,2.337,117,2.937,167,4.6,218,4.221,277,3.384,350,4.221,373,3.384,374,4.062,375,5.522,376,4.062,377,4.062,378,4.062,379,4.062,380,5.067,381,4.062,382,4.062,383,4.062,384,4.062,385,5.067,386,4.062,387,5.782,388,6.274,389,4.062,390,5.067,391,4.062,392,5.522,393,4.062,394,4.062,395,4.062,396,4.062,397,4.062,398,4.062,399,4.062,400,4.062,401,4.062,402,4.062,403,4.062,404,4.062,405,4.062,406,5.067,407,5.067,408,4.062,409,4.062,410,5.067,411,4.062,412,4.062,413,4.062,414,4.062,415,4.062,416,4.062,417,4.062,418,4.062,419,4.062,420,4.062,421,4.062,422,4.062,423,4.062,424,4.062,425,4.062,426,4.062,427,4.062,428,4.062,429,4.062,430,4.062,431,4.062,432,4.062]],["title/modules.html",[97,2.473]],["body/modules.html",[16,0.03,92,0.03,93,0.03,97,2.884,98,2.884,265,4.175,433,5.012,434,5.012,435,5.012]],["title/overview.html",[436,3.581]],["body/overview.html",[0,0.118,16,0.033,21,0.19,92,0.025,93,0.025,97,2.809,98,3.764,99,2.203,100,3.189,101,3.189,102,2.454,103,2.203,104,3.189,105,3.189,106,3.189,107,4.392,108,3.894,109,3.894,110,3.894,111,3.894,112,3.894,113,3.894,114,3.894,115,4.066,116,3.189,117,2.768,125,2.454,127,0.755,320,4.066,436,3.189,437,3.828,438,3.828]],["title/miscellaneous/variables.html",[439,2.2,440,3.161]],["body/miscellaneous/variables.html",[5,0.395,6,0.395,8,0.336,15,0.334,16,0.033,27,0.788,38,1.037,92,0.028,93,0.028,103,3.115,107,3.914,215,4.509,225,3.914,342,4.509,439,3.77,440,3.77,441,5.791,442,5.412,443,5.791,444,4.525,445,5.412,446,5.412,447,4.525]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":325,"title":{},"body":{"index.html":{}}}],["0.2.3",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":320,"title":{},"body":{"index.html":{},"overview.html":{}}}],["12",{"_index":306,"title":{},"body":{"index.html":{}}}],["16",{"_index":438,"title":{},"body":{"overview.html":{}}}],["2",{"_index":286,"title":{},"body":{"index.html":{}}}],["2017",{"_index":377,"title":{},"body":{"license.html":{}}}],["22",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":245,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4.0.0",{"_index":259,"title":{},"body":{"dependencies.html":{}}}],["49",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["5.4.2",{"_index":257,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":437,"title":{},"body":{"overview.html":{}}}],["_type",{"_index":175,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["abov",{"_index":405,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":160,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["action",{"_index":427,"title":{},"body":{"license.html":{}}}],["ad",{"_index":365,"title":{},"body":{"index.html":{}}}],["add",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["addicon",{"_index":47,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["addrul",{"_index":11,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["addruleset",{"_index":12,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["ag",{"_index":290,"title":{},"body":{"index.html":{}}}],["alert",{"_index":322,"title":{},"body":{"index.html":{}}}],["align",{"_index":312,"title":{},"body":{"index.html":{}}}],["allowemptyruleset",{"_index":73,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["allowruleset",{"_index":341,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":399,"title":{},"body":{"license.html":{}}}],["angular",{"_index":260,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":123,"title":{},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":121,"title":{},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"dependencies.html":{}}}],["angular/form",{"_index":20,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["angular2",{"_index":190,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["anoth",{"_index":328,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":282,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":288,"title":{},"body":{"index.html":{}}}],["app.component.t",{"_index":289,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":280,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":281,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":287,"title":{},"body":{"index.html":{}}}],["aris",{"_index":431,"title":{},"body":{"license.html":{}}}],["array",{"_index":25,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["associ",{"_index":389,"title":{},"body":{"license.html":{}}}],["author",{"_index":420,"title":{},"body":{"license.html":{}}}],["auto",{"_index":308,"title":{},"body":{"index.html":{}}}],["base",{"_index":263,"title":{},"body":{"index.html":{}}}],["basic",{"_index":279,"title":{},"body":{"index.html":{}}}],["be",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":212,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["birthday",{"_index":297,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":35,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":102,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":321,"title":{},"body":{"index.html":{}}}],["break",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":435,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":433,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":303,"title":{},"body":{"index.html":{}}}],["bug",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":370,"title":{},"body":{"index.html":{}}}],["builder",{"_index":262,"title":{},"body":{"index.html":{}}}],["builder.component.t",{"_index":443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder.interfaces.t",{"_index":7,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["builder.interfaces.ts:20",{"_index":96,"title":{},"body":{"interfaces/FieldMap.html":{}}}],["builder.interfaces.ts:42",{"_index":95,"title":{},"body":{"interfaces/EntityMap.html":{}}}],["builder.module.t",{"_index":119,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["builder/queri",{"_index":6,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":48,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["button.directive.t",{"_index":181,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:4",{"_index":183,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:5",{"_index":184,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["buttongroup",{"_index":49,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["buttongroupcontext",{"_index":1,"title":{"interfaces/ButtonGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["c",{"_index":376,"title":{},"body":{"license.html":{}}}],["callback",{"_index":197,"title":{},"body":{"changelog.html":{}}}],["categori",{"_index":219,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["caus",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":314,"title":{},"body":{"index.html":{}}}],["chang",{"_index":364,"title":{},"body":{"index.html":{}}}],["changefield",{"_index":196,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":189,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["charact",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["charg",{"_index":384,"title":{},"body":{"license.html":{}}}],["child",{"_index":345,"title":{},"body":{"index.html":{}}}],["claim",{"_index":423,"title":{},"body":{"license.html":{}}}],["class",{"_index":126,"title":{},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["classnam",{"_index":299,"title":{},"body":{"index.html":{}}}],["cluster_querybuildermodul",{"_index":104,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_declar",{"_index":105,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_export",{"_index":106,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["code",{"_index":333,"title":{},"body":{"index.html":{}}}],["col",{"_index":324,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":122,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["complet",{"_index":327,"title":{},"body":{"index.html":{}}}],["compon",{"_index":125,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["condit",{"_index":22,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{},"license.html":{}}}],["config",{"_index":254,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configur",{"_index":347,"title":{},"body":{"index.html":{}}}],["connect",{"_index":432,"title":{},"body":{"license.html":{}}}],["connector",{"_index":61,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["constructor",{"_index":134,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(publ",{"_index":143,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(templ",{"_index":135,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["contain",{"_index":361,"title":{},"body":{"index.html":{}}}],["context",{"_index":359,"title":{},"body":{"index.html":{}}}],["contract",{"_index":428,"title":{},"body":{"license.html":{}}}],["control",{"_index":315,"title":{},"body":{"index.html":{}}}],["control_value_accessor",{"_index":441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copi",{"_index":387,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":375,"title":{},"body":{"license.html":{}}}],["css",{"_index":223,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["current",{"_index":360,"title":{},"body":{"index.html":{}}}],["custom",{"_index":204,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["d",{"_index":309,"title":{},"body":{"index.html":{}}}],["damag",{"_index":424,"title":{},"body":{"license.html":{}}}],["danger",{"_index":323,"title":{},"body":{"index.html":{}}}],["data",{"_index":270,"title":{},"body":{"index.html":{}}}],["date",{"_index":298,"title":{},"body":{"index.html":{}}}],["deal",{"_index":390,"title":{},"body":{"license.html":{}}}],["declar",{"_index":101,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["default",{"_index":225,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultfield",{"_index":44,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["defaultoper",{"_index":37,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["defaultvalu",{"_index":36,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["defin",{"_index":94,"title":{},"body":{"interfaces/EntityMap.html":{},"interfaces/FieldMap.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["demo",{"_index":273,"title":{},"body":{"index.html":{}}}],["depend",{"_index":99,"title":{"dependencies.html":{}},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deprec",{"_index":349,"title":{},"body":{"index.html":{}}}],["descript",{"_index":340,"title":{},"body":{"index.html":{}}}],["detail",{"_index":338,"title":{},"body":{"index.html":{}}}],["differ",{"_index":344,"title":{},"body":{"index.html":{}}}],["direct",{"_index":127,"title":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["directive({selector",{"_index":142,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["display",{"_index":217,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["distribut",{"_index":397,"title":{},"body":{"license.html":{}}}],["document",{"_index":277,"title":{},"body":{"index.html":{},"license.html":{}}}],["element",{"_index":346,"title":{},"body":{"index.html":{}}}],["elementref",{"_index":140,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{}}}],["empti",{"_index":172,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["emptywarn",{"_index":63,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["entiti",{"_index":29,"title":{"interfaces/Entity.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{}}}],["entity.directive.t",{"_index":144,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:4",{"_index":146,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:5",{"_index":147,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entitycontext",{"_index":83,"title":{"interfaces/EntityContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["entitycontrol",{"_index":66,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["entitycontrols",{"_index":67,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["entitymap",{"_index":43,"title":{"interfaces/EntityMap.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["entitynam",{"_index":88,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["entityvalu",{"_index":84,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["es5",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":419,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":246,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":412,"title":{},"body":{"license.html":{}}}],["extens",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":296,"title":{},"body":{"index.html":{}}}],["fa",{"_index":300,"title":{},"body":{"index.html":{}}}],["femal",{"_index":295,"title":{},"body":{"index.html":{}}}],["field",{"_index":26,"title":{"interfaces/Field.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["field'",{"_index":362,"title":{},"body":{"index.html":{}}}],["field.directive.t",{"_index":148,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:4",{"_index":150,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:5",{"_index":151,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.nam",{"_index":334,"title":{},"body":{"index.html":{}}}],["fieldcontext",{"_index":85,"title":{"interfaces/FieldContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["fieldcontrol",{"_index":64,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["fieldcontrols",{"_index":65,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["fieldmap",{"_index":32,"title":{"interfaces/FieldMap.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["fieldnam",{"_index":75,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["fieldvalu",{"_index":86,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"license.html":{}}}],["first",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":415,"title":{},"body":{"license.html":{}}}],["fix",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":310,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":267,"title":{},"body":{"index.html":{}}}],["follow",{"_index":404,"title":{},"body":{"license.html":{}}}],["form",{"_index":201,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["formsmodul",{"_index":124,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["forwardref",{"_index":446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":383,"title":{},"body":{"license.html":{}}}],["full",{"_index":330,"title":{},"body":{"index.html":{}}}],["function",{"_index":17,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/OperatorContext.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"changelog.html":{},"index.html":{}}}],["furnish",{"_index":402,"title":{},"body":{"license.html":{}}}],["gender",{"_index":293,"title":{},"body":{"index.html":{}}}],["get",{"_index":187,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getfield",{"_index":87,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["getinputtyp",{"_index":76,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["getoper",{"_index":74,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["getopt",{"_index":77,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["grant",{"_index":382,"title":{},"body":{"license.html":{}}}],["group",{"_index":304,"title":{},"body":{"index.html":{}}}],["group.directive.t",{"_index":128,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:4",{"_index":137,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:5",{"_index":139,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["handl",{"_index":269,"title":{},"body":{"index.html":{}}}],["heavi",{"_index":266,"title":{},"body":{"index.html":{}}}],["here",{"_index":275,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":381,"title":{},"body":{"license.html":{}}}],["holder",{"_index":421,"title":{},"body":{"license.html":{}}}],["ie11",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["impli",{"_index":413,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":10,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["inabl",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":392,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["inlin",{"_index":318,"title":{},"body":{"index.html":{}}}],["input",{"_index":141,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["input.directive.t",{"_index":152,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:14",{"_index":155,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:16",{"_index":159,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:7",{"_index":158,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:8",{"_index":162,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["inputcontext",{"_index":89,"title":{"interfaces/InputContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["inputcontrol",{"_index":70,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["inputcontrols",{"_index":71,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["inputvalu",{"_index":90,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["instal",{"_index":271,"title":{},"body":{"index.html":{}}}],["instead",{"_index":351,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":42,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["invalid/valid",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["invalidruleset",{"_index":62,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["ionicframework",{"_index":285,"title":{},"body":{"index.html":{}}}],["ionicmodule.forroot(appcompon",{"_index":284,"title":{},"body":{"index.html":{}}}],["issu",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":313,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":264,"title":{},"body":{"index.html":{}}}],["key",{"_index":33,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["kind",{"_index":411,"title":{},"body":{"license.html":{}}}],["label",{"_index":316,"title":{},"body":{"index.html":{}}}],["legend",{"_index":100,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["liabil",{"_index":425,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":422,"title":{},"body":{"license.html":{}}}],["librari",{"_index":329,"title":{},"body":{"index.html":{}}}],["licens",{"_index":373,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":218,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":278,"title":{},"body":{"index.html":{}}}],["list",{"_index":355,"title":{},"body":{"index.html":{}}}],["localrulemeta",{"_index":41,"title":{"interfaces/LocalRuleMeta.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["look",{"_index":332,"title":{},"body":{"index.html":{}}}],["m",{"_index":291,"title":{},"body":{"index.html":{}}}],["main",{"_index":348,"title":{},"body":{"index.html":{}}}],["male",{"_index":294,"title":{},"body":{"index.html":{}}}],["map",{"_index":354,"title":{},"body":{"index.html":{}}}],["match",{"_index":93,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":326,"title":{},"body":{"index.html":{}}}],["merchant",{"_index":414,"title":{},"body":{"license.html":{}}}],["merg",{"_index":395,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":129,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["minor",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["minu",{"_index":301,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":439,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":374,"title":{},"body":{"license.html":{}}}],["ml",{"_index":307,"title":{},"body":{"index.html":{}}}],["mode",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["modern",{"_index":261,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":394,"title":{},"body":{"license.html":{}}}],["modul",{"_index":97,"title":{"modules/QueryBuilderModule.html":{},"modules.html":{}},"body":{"modules/QueryBuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":243,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["multi",{"_index":215,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiselect",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":31,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["new",{"_index":241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_valid",{"_index":447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel",{"_index":239,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngmodul",{"_index":120,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["ngmodule(import",{"_index":283,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":418,"title":{},"body":{"license.html":{}}}],["notic",{"_index":406,"title":{},"body":{"license.html":{}}}],["now",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":272,"title":{},"body":{"index.html":{}}}],["null",{"_index":40,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["nullabl",{"_index":34,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["number",{"_index":292,"title":{},"body":{"index.html":{}}}],["object",{"_index":343,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":386,"title":{},"body":{"license.html":{}}}],["onchang",{"_index":81,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{}}}],["oper",{"_index":28,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["operator.directive.t",{"_index":176,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:4",{"_index":178,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:5",{"_index":179,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operatorcontext",{"_index":80,"title":{"interfaces/OperatorContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["operatorcontrol",{"_index":68,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["operatorcontrols",{"_index":69,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["operatormap",{"_index":353,"title":{},"body":{"index.html":{}}}],["operatorvalu",{"_index":82,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["opt.nam",{"_index":335,"title":{},"body":{"index.html":{}}}],["option",{"_index":30,"title":{"interfaces/Option.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["order",{"_index":305,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":430,"title":{},"body":{"license.html":{}}}],["out",{"_index":117,"title":{},"body":{"modules/QueryBuilderModule.html":{},"license.html":{},"overview.html":{}}}],["overrid",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":436,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":173,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["p",{"_index":319,"title":{},"body":{"index.html":{}}}],["packag",{"_index":255,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":138,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["parent",{"_index":39,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["part",{"_index":358,"title":{},"body":{"index.html":{}}}],["particular",{"_index":416,"title":{},"body":{"license.html":{}}}],["peer",{"_index":258,"title":{},"body":{"dependencies.html":{}}}],["permiss",{"_index":380,"title":{},"body":{"license.html":{}}}],["permit",{"_index":401,"title":{},"body":{"license.html":{}}}],["person",{"_index":385,"title":{},"body":{"license.html":{}}}],["play",{"_index":274,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":331,"title":{},"body":{"index.html":{}}}],["plu",{"_index":302,"title":{},"body":{"index.html":{}}}],["plunker",{"_index":276,"title":{},"body":{"index.html":{}}}],["portion",{"_index":409,"title":{},"body":{"license.html":{}}}],["privat",{"_index":174,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["programat",{"_index":169,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["project",{"_index":369,"title":{},"body":{"index.html":{}}}],["proper",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["provid",{"_index":103,"title":{},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":132,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["publish",{"_index":396,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":417,"title":{},"body":{"license.html":{}}}],["px",{"_index":311,"title":{},"body":{"index.html":{}}}],["queri",{"_index":157,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["querybuild",{"_index":191,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["querybuilderclassnam",{"_index":45,"title":{"interfaces/QueryBuilderClassNames.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["querybuildercompon",{"_index":107,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["querybuilderconfig",{"_index":72,"title":{"interfaces/QueryBuilderConfig.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["querybuildermodul",{"_index":98,"title":{"modules/QueryBuilderModule.html":{}},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["querybuttongroup",{"_index":131,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"index.html":{}}}],["querybuttongroupdirect",{"_index":108,"title":{"directives/QueryButtonGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"overview.html":{}}}],["queryent",{"_index":145,"title":{},"body":{"directives/QueryEntityDirective.html":{},"changelog.html":{}}}],["queryentitydirect",{"_index":109,"title":{"directives/QueryEntityDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryEntityDirective.html":{},"overview.html":{}}}],["queryfield",{"_index":149,"title":{},"body":{"directives/QueryFieldDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryfielddirect",{"_index":110,"title":{"directives/QueryFieldDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryFieldDirective.html":{},"overview.html":{}}}],["queryinput",{"_index":153,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryinputdirect",{"_index":111,"title":{"directives/QueryInputDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryInputDirective.html":{},"overview.html":{}}}],["queryinputtyp",{"_index":154,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryinputtype(valu",{"_index":166,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryoper",{"_index":177,"title":{},"body":{"directives/QueryOperatorDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryoperatordirect",{"_index":112,"title":{"directives/QueryOperatorDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryOperatorDirective.html":{},"overview.html":{}}}],["queryremovebutton",{"_index":182,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"index.html":{}}}],["queryremovebuttondirect",{"_index":113,"title":{"directives/QueryRemoveButtonDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryRemoveButtonDirective.html":{},"overview.html":{}}}],["queryswitchgroup",{"_index":186,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["queryswitchgroupdirect",{"_index":114,"title":{"directives/QuerySwitchGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QuerySwitchGroupDirective.html":{},"overview.html":{}}}],["quick",{"_index":336,"title":{},"body":{"index.html":{}}}],["radio",{"_index":317,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":337,"title":{},"body":{"index.html":{}}}],["remov",{"_index":180,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"changelog.html":{},"index.html":{}}}],["removebutton",{"_index":50,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["removebuttoncontext",{"_index":91,"title":{"interfaces/RemoveButtonContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["removebuttons",{"_index":51,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["removeicon",{"_index":46,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["removerul",{"_index":79,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["removeruleset",{"_index":13,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["renam",{"_index":195,"title":{},"body":{"changelog.html":{}}}],["replac",{"_index":357,"title":{},"body":{"index.html":{}}}],["requir",{"_index":339,"title":{},"body":{"index.html":{}}}],["reset",{"_index":116,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["restrict",{"_index":391,"title":{},"body":{"license.html":{}}}],["result",{"_index":92,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":163,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["rewrit",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":393,"title":{},"body":{"license.html":{}}}],["rightalign",{"_index":57,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["root",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":60,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["rule",{"_index":24,"title":{"interfaces/Rule.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["ruleset",{"_index":14,"title":{"interfaces/RuleSet.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{}}}],["run",{"_index":371,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":256,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":206,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seed",{"_index":368,"title":{},"body":{"index.html":{}}}],["select",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":130,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["sell",{"_index":400,"title":{},"body":{"license.html":{}}}],["seriou",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":165,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["setqueryinputtype(valu",{"_index":161,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["setter",{"_index":170,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["shall",{"_index":407,"title":{},"body":{"license.html":{}}}],["show",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":388,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["specifi",{"_index":363,"title":{},"body":{"index.html":{}}}],["src/.../queri",{"_index":442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/components/queri",{"_index":5,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"miscellaneous/variables.html":{}}}],["src/queri",{"_index":118,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["start",{"_index":188,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["store",{"_index":352,"title":{},"body":{"index.html":{}}}],["string",{"_index":23,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["structur",{"_index":356,"title":{},"body":{"index.html":{}}}],["style",{"_index":224,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["subject",{"_index":403,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":398,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":408,"title":{},"body":{"license.html":{}}}],["support",{"_index":265,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":434,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":185,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{}}}],["switchcontrol",{"_index":56,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["switchgroup",{"_index":53,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["switchlabel",{"_index":54,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["switchradio",{"_index":55,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["switchrow",{"_index":52,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["target",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["templat",{"_index":133,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["templateref",{"_index":136,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["test",{"_index":372,"title":{},"body":{"index.html":{}}}],["that'",{"_index":366,"title":{},"body":{"index.html":{}}}],["this._typ",{"_index":164,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["tort",{"_index":429,"title":{},"body":{"license.html":{}}}],["touch",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["transit",{"_index":58,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["tree",{"_index":59,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["trigger",{"_index":171,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["true",{"_index":342,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tweak",{"_index":222,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":156,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["unrecogn",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["updat",{"_index":168,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["us",{"_index":350,"title":{},"body":{"index.html":{},"license.html":{}}}],["usag",{"_index":205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["useexist",{"_index":445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":38,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":19,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{}}}],["valu",{"_index":27,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":440,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":192,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":78,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"index.html":{}}}],["warranti",{"_index":410,"title":{},"body":{"license.html":{}}}],["way",{"_index":268,"title":{},"body":{"index.html":{}}}],["whether",{"_index":426,"title":{},"body":{"license.html":{}}}],["without",{"_index":167,"title":{},"body":{"directives/QueryInputDirective.html":{},"license.html":{}}}],["work",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":367,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["zeb",{"_index":378,"title":{},"body":{"license.html":{}}}],["zhao",{"_index":379,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":115,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ButtonGroupContext.html":{"url":"interfaces/ButtonGroupContext.html","title":"interface - ButtonGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ButtonGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        addRule\n                                \n                                \n                                        addRuleSet\n                                \n                                \n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultField\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultField\n                                    \n                                \n                                \n                                    \n                                        defaultField:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityContext.html":{"url":"interfaces/EntityContext.html","title":"interface - EntityContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        entities\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityMap.html":{"url":"interfaces/EntityMap.html","title":"interface - EntityMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Entity\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:42\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultOperator\n                                \n                                \n                                            Optional\n                                        defaultValue\n                                \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        operators\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        validator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOperator\n                                    \n                                \n                                \n                                    \n                                        defaultOperator:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultValue\n                                    \n                                \n                                \n                                    \n                                        defaultValue:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                    \n                                \n                                \n                                    \n                                        validator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldContext.html":{"url":"interfaces/FieldContext.html","title":"interface - FieldContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        fields\n                                \n                                \n                                        getFields\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFields\n                                    \n                                \n                                \n                                    \n                                        getFields:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldMap.html":{"url":"interfaces/FieldMap.html","title":"interface - FieldMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Field\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:20\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputContext.html":{"url":"interfaces/InputContext.html","title":"interface - InputContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InputContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        field\n                                \n                                \n                                        onChange\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     Field\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalRuleMeta.html":{"url":"interfaces/LocalRuleMeta.html","title":"interface - LocalRuleMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalRuleMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        invalid\n                                \n                                \n                                        ruleset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                    \n                                \n                                \n                                    \n                                        invalid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleset\n                                    \n                                \n                                \n                                    \n                                        ruleset:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperatorContext.html":{"url":"interfaces/OperatorContext.html","title":"interface - OperatorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OperatorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        onChange\n                                \n                                \n                                        operators\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Option.html":{"url":"interfaces/Option.html","title":"interface - Option","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderClassNames.html":{"url":"interfaces/QueryBuilderClassNames.html","title":"interface - QueryBuilderClassNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderClassNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addIcon\n                                \n                                \n                                            Optional\n                                        button\n                                \n                                \n                                            Optional\n                                        buttonGroup\n                                \n                                \n                                            Optional\n                                        connector\n                                \n                                \n                                            Optional\n                                        emptyWarning\n                                \n                                \n                                            Optional\n                                        entityControl\n                                \n                                \n                                            Optional\n                                        entityControlSize\n                                \n                                \n                                            Optional\n                                        fieldControl\n                                \n                                \n                                            Optional\n                                        fieldControlSize\n                                \n                                \n                                            Optional\n                                        inputControl\n                                \n                                \n                                            Optional\n                                        inputControlSize\n                                \n                                \n                                            Optional\n                                        invalidRuleSet\n                                \n                                \n                                            Optional\n                                        operatorControl\n                                \n                                \n                                            Optional\n                                        operatorControlSize\n                                \n                                \n                                            Optional\n                                        removeButton\n                                \n                                \n                                            Optional\n                                        removeButtonSize\n                                \n                                \n                                            Optional\n                                        removeIcon\n                                \n                                \n                                            Optional\n                                        rightAlign\n                                \n                                \n                                            Optional\n                                        row\n                                \n                                \n                                            Optional\n                                        rule\n                                \n                                \n                                            Optional\n                                        ruleSet\n                                \n                                \n                                            Optional\n                                        switchControl\n                                \n                                \n                                            Optional\n                                        switchGroup\n                                \n                                \n                                            Optional\n                                        switchLabel\n                                \n                                \n                                            Optional\n                                        switchRadio\n                                \n                                \n                                            Optional\n                                        switchRow\n                                \n                                \n                                            Optional\n                                        transition\n                                \n                                \n                                            Optional\n                                        tree\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addIcon\n                                    \n                                \n                                \n                                    \n                                        addIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        button\n                                    \n                                \n                                \n                                    \n                                        button:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttonGroup\n                                    \n                                \n                                \n                                    \n                                        buttonGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connector\n                                    \n                                \n                                \n                                    \n                                        connector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyWarning\n                                    \n                                \n                                \n                                    \n                                        emptyWarning:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControl\n                                    \n                                \n                                \n                                    \n                                        entityControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControlSize\n                                    \n                                \n                                \n                                    \n                                        entityControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControl\n                                    \n                                \n                                \n                                    \n                                        fieldControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControlSize\n                                    \n                                \n                                \n                                    \n                                        fieldControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControl\n                                    \n                                \n                                \n                                    \n                                        inputControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControlSize\n                                    \n                                \n                                \n                                    \n                                        inputControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidRuleSet\n                                    \n                                \n                                \n                                    \n                                        invalidRuleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControl\n                                    \n                                \n                                \n                                    \n                                        operatorControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControlSize\n                                    \n                                \n                                \n                                    \n                                        operatorControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButton\n                                    \n                                \n                                \n                                    \n                                        removeButton:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButtonSize\n                                    \n                                \n                                \n                                    \n                                        removeButtonSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeIcon\n                                    \n                                \n                                \n                                    \n                                        removeIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightAlign\n                                    \n                                \n                                \n                                    \n                                        rightAlign:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                    \n                                \n                                \n                                    \n                                        row:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rule\n                                    \n                                \n                                \n                                    \n                                        rule:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleSet\n                                    \n                                \n                                \n                                    \n                                        ruleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchControl\n                                    \n                                \n                                \n                                    \n                                        switchControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchGroup\n                                    \n                                \n                                \n                                    \n                                        switchGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchLabel\n                                    \n                                \n                                \n                                    \n                                        switchLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRadio\n                                    \n                                \n                                \n                                    \n                                        switchRadio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRow\n                                    \n                                \n                                \n                                    \n                                        switchRow:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transition\n                                    \n                                \n                                \n                                    \n                                        transition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tree\n                                    \n                                \n                                \n                                    \n                                        tree:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderConfig.html":{"url":"interfaces/QueryBuilderConfig.html","title":"interface - QueryBuilderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addRule\n                                \n                                \n                                            Optional\n                                        addRuleSet\n                                \n                                \n                                            Optional\n                                        allowEmptyRulesets\n                                \n                                \n                                            Optional\n                                        entities\n                                \n                                \n                                        fields\n                                \n                                \n                                            Optional\n                                        getInputType\n                                \n                                \n                                            Optional\n                                        getOperators\n                                \n                                \n                                            Optional\n                                        getOptions\n                                \n                                \n                                            Optional\n                                        removeRule\n                                \n                                \n                                            Optional\n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowEmptyRulesets\n                                    \n                                \n                                \n                                    \n                                        allowEmptyRulesets:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     EntityMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntityMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getInputType\n                                    \n                                \n                                \n                                    \n                                        getInputType:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOperators\n                                    \n                                \n                                \n                                    \n                                        getOperators:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOptions\n                                    \n                                \n                                \n                                    \n                                        getOptions:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryBuilderModule.html":{"url":"modules/QueryBuilderModule.html","title":"module - QueryBuilderModule","body":"\n                   \n\n\n\n\n  Modules\n  QueryBuilderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/query-builder.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                QueryBuilderComponent\n                            \n                            \n                                QueryButtonGroupDirective\n                            \n                            \n                                QueryEntityDirective\n                            \n                            \n                                QueryFieldDirective\n                            \n                            \n                                QueryInputDirective\n                            \n                            \n                                QueryOperatorDirective\n                            \n                            \n                                QueryRemoveButtonDirective\n                            \n                            \n                                QuerySwitchGroupDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    QueryBuilderComponent\n                            \n                            \n                                    QueryButtonGroupDirective\n                            \n                            \n                                    QueryEntityDirective\n                            \n                            \n                                    QueryFieldDirective\n                            \n                            \n                                    QueryInputDirective\n                            \n                            \n                                    QueryOperatorDirective\n                            \n                            \n                                    QueryRemoveButtonDirective\n                            \n                            \n                                    QuerySwitchGroupDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, } from '@angular/forms';\nimport {\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryOperatorDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective\n} from './components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective\n  ],\n  exports: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective\n  ]\n})\nexport class QueryBuilderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonGroupDirective.html":{"url":"directives/QueryButtonGroupDirective.html","title":"directive - QueryButtonGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryButtonGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-button-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryButtonGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-button-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-button-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryButtonGroup]'})\nexport class QueryButtonGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryEntityDirective.html":{"url":"directives/QueryEntityDirective.html","title":"directive - QueryEntityDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryEntityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-entity.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryEntity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-entity.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-entity.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryEntity]'})\nexport class QueryEntityDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryFieldDirective.html":{"url":"directives/QueryFieldDirective.html","title":"directive - QueryFieldDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryFieldDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-field.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryField]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-field.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-field.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryField]'})\nexport class QueryFieldDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryInputDirective.html":{"url":"directives/QueryInputDirective.html","title":"directive - QueryInputDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryInput]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryInputType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-input.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                    \n                        Unique name for query input type. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                \n\n\n                \n                    \n                        setqueryInputType(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/components/query-builder/query-input.directive.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryInput]'})\nexport class QueryInputDirective {\n  /** Unique name for query input type. */\n  @Input()\n  get queryInputType(): string { return this._type; }\n  set queryInputType(value: string) {\n    // If the directive is set without a type (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (!value) { return; }\n    this._type = value;\n  }\n  private _type: string;\n\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryOperatorDirective.html":{"url":"directives/QueryOperatorDirective.html","title":"directive - QueryOperatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryOperatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-operator.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryOperator]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-operator.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-operator.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryOperator]'})\nexport class QueryOperatorDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryRemoveButtonDirective.html":{"url":"directives/QueryRemoveButtonDirective.html","title":"directive - QueryRemoveButtonDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryRemoveButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-remove-button.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryRemoveButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-remove-button.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-remove-button.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryRemoveButton]'})\nexport class QueryRemoveButtonDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QuerySwitchGroupDirective.html":{"url":"directives/QuerySwitchGroupDirective.html","title":"directive - QuerySwitchGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QuerySwitchGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-switch-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [querySwitchGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-switch-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-switch-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[querySwitchGroup]'})\nexport class QuerySwitchGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveButtonContext.html":{"url":"interfaces/RemoveButtonContext.html","title":"interface - RemoveButtonContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RemoveButtonContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        removeRule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rule.html":{"url":"interfaces/Rule.html","title":"interface - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        operator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleSet.html":{"url":"interfaces/RuleSet.html","title":"interface - RuleSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        condition\n                                \n                                \n                                        rules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface OperatorContext {\n  onChange: (operatorValue: string, rule: Rule) => void;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: (inputValue: any, rule: Rule) => void;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAngular2-QueryBuilder Changelog\nVersion 0.3.0\n\nBreaking: Renamed changeField callback to onChange for queryField directive.\nAdd onChange callback to queryEntity, queryInput, queryOperator, queryInput for proper reactive form validation and touched behavior on custom components\nAdd proper touched behavior to reactive form usage (See #49)\nAdd entity mode (See #22)\nFix [value] unrecognized property binding\nFix QueryBuilderClassNames not being exported as interface\nFix in operator causing multi-select to be displayed for all types (only limited to category, boolean now)\nMinor tweaks to CSS styling of default component\n\nVersion 0.2.5\n\nFix root remove ruleset button showing\nFix default value bug where only the first character of the operator is shown\nFix inability to override multiselect operators (is in, is not in)\n\nVersion 0.2.4\n\nFix serious issue with validation causing ngModel value to be wrong\nNew QueryBuilderClassNames interface\nRewrite CSS for more extensible CSS classes\nNew bootstrap 4 example\n\nVersion 0.2.3\n\nFix IE11 not working (target ES5)\nFix invalid/valid state\nNew validator function on Field config\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^5.4.2\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : >=4.0.0\n        \n            @angular/core : >=4.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular-QueryBuilder\nA modernized Angular 4+ query builder based on jQuery QueryBuilder. Support for heavy customization with Angular components and provides a flexible way to handle custom data types.\nGetting Started\nInstall\nnpm install angular2-query-builder\nDemo\nPlay with the demo here.\nSee the Plunker\nDocumentation\nDocumentation link\nExamples\nBasic Usage\napp.module.ts\nimport { QueryBuilderModule } from \"angular2-query-builder\";\nimport { AppComponent } from \"./app.component\"\n\n@NgModule(imports: [\n  ...,\n  QueryBuilderModule,\n  IonicModule.forRoot(AppComponent) // (Optional) for IonicFramework 2+\n])\nexport class AppModule { }app.component.html\n...\n\n...app.component.ts\nimport { QueryBuilderConfig } from 'angular2-query-builder';\n\nexport class AppComponent {\n  query = {\n    condition: 'and',\n    rules: [\n      {field: 'age', operator: '=', value: 'm'}\n    ]\n  };\n\n  config: QueryBuilderConfig = {\n    fields: {\n      age: {name: 'Age', type: 'number'},\n      gender: {\n        name: 'Gender',\n        type: 'category',\n        options: [\n          {name: 'Male', value: 'm'},\n          {name: 'Female', value: 'f'}\n        ]\n      }\n    }\n  }\n}Custom Input Components\napp.component.html\n\n  \n    \n  \napp.component.ts\nquery = {\n  condition: 'and',\n  rules: [\n    {field: 'birthday', operator: '=', value: new Date()}\n  ]\n};\n\nconfig: QueryBuilderConfig = {\n  fields: {\n    birthday: {name: 'Birthday', type: 'date', operators: ['=', '']\n      defaultValue: (() => return new Date())\n    },\n  }\n}Custom Styling (with Bootstrap 4)\nBootstrap demo.\napp.component.html\napp.component.ts\nclassNames: QueryBuilderClassNames = {\n  removeIcon: 'fa fa-minus',\n  addIcon: 'fa fa-plus',\n  button: 'btn',\n  buttonGroup: 'btn-group',\n  rightAlign: 'order-12 ml-auto',\n  switchRow: 'd-flex px-2',\n  switchGroup: 'd-flex align-items-center',\n  switchRadio: 'custom-control-input',\n  switchLabel: 'custom-control-label',\n  switchControl: 'custom-control custom-radio custom-control-inline',\n  row: 'row p-2 m-1',\n  rule: 'border',\n  ruleSet: 'border',\n  invalidRuleSet: 'alert alert-danger',\n  operatorControl: 'form-control',\n  operatorControlSize: 'col-auto px-0',\n  fieldControl: 'form-control',\n  fieldControlSize: 'col-auto',\n  inputControl: 'form-control',\n  inputControlSize: 'col-auto'\n}Customizing with Angular Material\nExample of how you can completely customize the query component with another library like Angular Material. For the full example, please look at the source code provided in the demo.\napp.component.html\n\n  \n    + Rule\n    + Ruleset\n    - Ruleset\n  \n  \n    \n      remove\n    \n  \n  \n    \n      And\n      Or\n    \n  \n  \n    \n      \n        {{field.name}}\n      \n    \n  \n  \n    \n      \n        {{value}}\n      \n    \n  \n  \n  \n    \n  \n  \n  \n    \n      \n        \n          {{ opt.name }}\n        \n      \n    \n  \n  ...\nProperty Bindings Quick Reference\nSee documentation for more details on interfaces and properties.\nquery-builder\n\n\n\nName\nType\nRequired\nDefault\nDescription\n\n\n\n\nallowRuleset\nboolean\nOptional\ntrue\nDisplays the + Ruleset button if true.\n\n\nclassNames\nobject\nOptional\n\nCSS class names for different child elements in query-builder component.\n\n\nconfig\nQueryBuilderConfig\nRequired\n\nConfiguration object for the main component.\n\n\ndata\nRuleset\nOptional\n\nDEPRECATED (Use ngModel or value instead.)\n\n\nngModel\nRuleset\nOptional\n\nObject that stores the state of the component. Supports 2-way binding.\n\n\noperatorMap\n{ [key: string]: string[] }\nOptional\n\nUsed to map field types to list of operators.\n\n\nvalue\nRuleset\nOptional\n\nObject that stores the state of the component.\n\n\n\nStructural Directives\nUse these directives to replace different parts of query builder with custom components.\nqueryInput\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nfield\nField\nCurrent field object which contains the field's value and name\n\n\noptions\nOption[]\nList of options for the field, returned by getOptions\n\n\n\nqueryOperator\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\noperators\nstring[]\nList of operators for the field, returned by getOperators\n\n\n\nqueryField\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nfields\nField[]\nList of fields for the component, specified by config\n\n\nchangeField\n(fieldName: string, rule: Rule) => void\nFunction to handle changes to the field component\n\n\n\nquerySwitchGroup\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\n\nqueryButtonGroup\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\naddRule\n() => void\nFunction to handle adding a new rule\n\n\naddRuleSet\n() => void\nFunction to handle adding a new rule set\n\n\nremoveRuleSet\n() => void\nFunction to handle removing the current rule set\n\n\n\nqueryRemoveButton\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nremoveRule\n(rule: Rule) => void\nFunction to handle removing a rule\n\n\n\nDependencies\n\nAngular 4+\n\nThat's it.\nWorkflow\nSee the angular-library-seed project for details on how to build and run tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Zeb Zhao\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryBuilderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        16 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTROL_VALUE_ACCESSOR   (src/.../query-builder.component.ts)\n                        \n                        \n                            VALIDATOR   (src/.../query-builder.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/query-builder/query-builder.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VALIDATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        VALIDATOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
