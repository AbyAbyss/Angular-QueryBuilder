var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ButtonGroupContext.html",[0,0.117,1,0.596]],["body/interfaces/ButtonGroupContext.html",[0,0.229,1,0.705,2,0.217,3,0.185,4,0.185,5,0.217,6,0.217,7,0.535,8,0.185,9,0.363,10,1.097,11,0.963,12,0.963,13,1.202,14,0.963,15,0.939,16,0.316,17,0.033,18,1.931,19,0.185,20,0.535,21,0.488,22,0.295,23,0.401,24,1.123,25,0.961,26,0.535,27,0.923,28,0.672,29,0.825,30,0.852,31,0.38,32,0.369,33,0.705,34,0.705,35,0.535,36,1.01,37,0.443,38,0.535,39,0.443,40,1.056,41,0.535,42,0.488,43,0.535,44,0.705,45,0.535,46,0.401,47,0.488,48,0.488,49,0.401,50,0.488,51,0.535,52,0.535,53,0.488,54,0.488,55,0.488,56,0.488,57,0.488,58,0.488,59,0.535,60,0.535,61,0.488,62,0.535,63,0.488,64,0.535,65,0.488,66,0.488,67,0.535,68,0.535,69,0.488,70,0.488,71,0.488,72,0.488,73,0.443,74,0.535,75,0.488,76,0.535,77,0.535,78,0.488,79,1.038,80,0.705,81,0.488,82,0.875,83,0.535,84,0.488,85,0.488,86,0.488,87,0.488,88,0.488,89,0.488,90,0.488,91,0.488,92,0.488,93,0.019,94,0.019]],["title/interfaces/Entity.html",[0,0.117,30,0.491]],["body/interfaces/Entity.html",[0,0.229,1,0.495,2,0.221,3,0.188,4,0.188,5,0.221,6,0.221,7,0.543,8,0.188,9,0.367,10,1.04,11,0.713,12,0.713,13,1.14,14,0.713,15,0.926,16,0.288,17,0.033,19,0.188,20,0.543,21,0.495,22,0.295,23,0.407,24,1.126,25,0.963,26,0.543,27,0.926,28,0.77,29,0.831,30,0.875,31,0.417,32,0.45,33,0.713,34,0.713,35,0.543,36,1.013,37,0.45,38,0.543,39,0.45,40,1.062,41,0.543,42,0.495,43,0.543,44,0.713,45,1.002,46,0.407,47,0.495,48,0.495,49,0.407,50,0.495,51,0.543,52,0.543,53,0.495,54,0.495,55,0.495,56,0.495,57,0.495,58,0.495,59,0.543,60,0.543,61,0.495,62,0.543,63,0.495,64,0.543,65,0.495,66,0.495,67,0.543,68,0.543,69,0.495,70,0.495,71,0.495,72,0.495,73,0.45,74,0.543,75,0.495,76,0.543,77,0.543,78,0.495,79,1.041,80,0.713,81,0.495,82,0.881,83,0.543,84,0.495,85,0.495,86,0.495,87,0.495,88,0.495,89,0.495,90,0.495,91,0.495,92,0.495,93,0.019,94,0.019]],["title/interfaces/EntityContext.html",[0,0.117,84,0.596]],["body/interfaces/EntityContext.html",[0,0.229,1,0.492,2,0.219,3,0.187,4,0.187,5,0.219,6,0.219,7,0.539,8,0.187,9,0.365,10,1.099,11,0.71,12,0.71,13,1.204,14,0.71,15,0.925,16,0.304,17,0.033,18,1.66,19,0.187,20,0.539,21,0.492,22,0.295,23,0.405,24,1.124,25,0.97,26,0.539,27,0.925,28,0.675,29,0.829,30,0.925,31,0.382,32,0.371,33,0.71,34,0.71,35,0.539,36,1.011,37,0.447,38,0.539,39,0.447,40,1.059,41,0.539,42,0.492,43,0.539,44,0.71,45,0.539,46,0.405,47,0.492,48,0.492,49,0.405,50,0.492,51,0.539,52,0.539,53,0.492,54,0.492,55,0.492,56,0.492,57,0.492,58,0.492,59,0.539,60,0.539,61,0.492,62,0.539,63,0.492,64,0.539,65,0.492,66,0.492,67,0.539,68,0.539,69,0.492,70,0.492,71,0.492,72,0.492,73,0.447,74,0.539,75,0.492,76,0.539,77,0.539,78,0.492,79,1.04,80,0.71,81,0.492,82,0.966,83,0.539,84,0.71,85,0.492,86,0.492,87,0.492,88,0.492,89,0.492,90,0.492,91,0.492,92,0.492,93,0.019,94,0.019]],["title/interfaces/EntityMap.html",[0,0.117,44,0.596]],["body/interfaces/EntityMap.html",[0,0.23,1,0.507,2,0.226,3,0.192,4,0.192,5,0.323,6,0.323,7,0.555,8,0.192,10,1.047,11,0.725,12,0.725,13,1.148,14,0.725,15,0.93,16,0.16,17,0.033,19,0.192,20,0.555,21,0.507,22,0.296,23,0.417,24,1.126,25,0.966,26,0.555,27,0.93,28,0.684,29,0.84,30,0.881,31,0.385,32,0.377,33,0.725,34,0.847,35,0.555,36,1.018,37,0.461,38,0.555,39,0.461,40,1.071,41,0.555,42,0.507,43,0.555,44,0.847,45,0.555,46,0.417,47,0.507,48,0.507,49,0.417,50,0.507,51,0.555,52,0.555,53,0.507,54,0.507,55,0.507,56,0.507,57,0.507,58,0.507,59,0.555,60,0.555,61,0.507,62,0.555,63,0.507,64,0.555,65,0.507,66,0.507,67,0.555,68,0.555,69,0.507,70,0.507,71,0.507,72,0.507,73,0.461,74,0.555,75,0.507,76,0.555,77,0.555,78,0.507,79,1.045,80,0.725,81,0.507,82,0.889,83,0.555,84,0.507,85,0.507,86,0.507,87,0.507,88,0.507,89,0.507,90,0.507,91,0.507,92,0.507,93,0.019,94,0.019,95,1.09,96,2.707]],["title/interfaces/Field.html",[0,0.117,27,0.491]],["body/interfaces/Field.html",[0,0.227,1,0.461,2,0.205,3,0.175,4,0.175,5,0.205,6,0.205,7,0.505,8,0.175,9,0.348,10,1.017,11,0.677,12,0.677,13,1.115,14,0.677,15,0.913,16,0.356,17,0.033,18,1.232,19,0.175,20,0.505,21,0.461,22,0.292,23,0.379,24,1.126,25,0.954,26,0.505,27,0.922,28,0.753,29,0.924,30,0.89,31,0.453,32,0.438,33,0.677,34,0.677,35,0.968,36,1.019,37,0.803,38,0.968,39,0.803,40,1.032,41,0.505,42,0.461,43,0.505,44,0.677,45,0.505,46,0.379,47,0.461,48,0.461,49,0.379,50,0.461,51,0.505,52,0.505,53,0.461,54,0.461,55,0.461,56,0.461,57,0.461,58,0.461,59,0.505,60,0.505,61,0.461,62,0.505,63,0.461,64,0.505,65,0.461,66,0.461,67,0.505,68,0.505,69,0.461,70,0.461,71,0.461,72,0.461,73,0.419,74,0.505,75,0.461,76,0.505,77,0.505,78,0.461,79,1.028,80,0.677,81,0.461,82,0.856,83,0.505,84,0.461,85,0.461,86,0.461,87,0.461,88,0.461,89,0.461,90,0.461,91,0.461,92,0.461,93,0.018,94,0.018]],["title/interfaces/FieldContext.html",[0,0.117,86,0.596]],["body/interfaces/FieldContext.html",[0,0.229,1,0.488,2,0.217,3,0.185,4,0.185,5,0.217,6,0.217,7,0.535,8,0.185,9,0.363,10,1.097,11,0.705,12,0.705,13,1.202,14,0.705,15,0.923,16,0.316,17,0.033,18,1.828,19,0.185,20,0.535,21,0.488,22,0.295,23,0.401,24,1.123,25,0.969,26,0.535,27,0.957,28,0.672,29,0.825,30,0.852,31,0.38,32,0.369,33,0.705,34,0.705,35,0.535,36,1.01,37,0.443,38,0.535,39,0.443,40,1.056,41,0.535,42,0.488,43,0.535,44,0.705,45,0.535,46,0.401,47,0.488,48,0.488,49,0.401,50,0.488,51,0.535,52,0.535,53,0.488,54,0.488,55,0.488,56,0.488,57,0.488,58,0.488,59,0.535,60,0.535,61,0.488,62,0.535,63,0.488,64,0.535,65,0.488,66,0.488,67,0.535,68,0.535,69,0.488,70,0.488,71,0.488,72,0.488,73,0.443,74,0.535,75,0.488,76,0.535,77,0.535,78,0.488,79,1.038,80,0.705,81,0.488,82,0.963,83,0.535,84,0.488,85,0.488,86,0.705,87,0.488,88,0.908,89,0.488,90,0.488,91,0.488,92,0.488,93,0.019,94,0.019]],["title/interfaces/FieldMap.html",[0,0.117,33,0.596]],["body/interfaces/FieldMap.html",[0,0.23,1,0.507,2,0.226,3,0.192,4,0.192,5,0.323,6,0.323,7,0.555,8,0.192,10,1.047,11,0.725,12,0.725,13,1.148,14,0.725,15,0.93,16,0.16,17,0.033,19,0.192,20,0.555,21,0.507,22,0.296,23,0.417,24,1.126,25,0.966,26,0.555,27,0.938,28,0.684,29,0.84,30,0.861,31,0.385,32,0.377,33,0.847,34,0.847,35,0.555,36,1.018,37,0.461,38,0.555,39,0.461,40,1.071,41,0.555,42,0.507,43,0.555,44,0.725,45,0.555,46,0.417,47,0.507,48,0.507,49,0.417,50,0.507,51,0.555,52,0.555,53,0.507,54,0.507,55,0.507,56,0.507,57,0.507,58,0.507,59,0.555,60,0.555,61,0.507,62,0.555,63,0.507,64,0.555,65,0.507,66,0.507,67,0.555,68,0.555,69,0.507,70,0.507,71,0.507,72,0.507,73,0.461,74,0.555,75,0.507,76,0.555,77,0.555,78,0.507,79,1.045,80,0.725,81,0.507,82,0.889,83,0.555,84,0.507,85,0.507,86,0.507,87,0.507,88,0.507,89,0.507,90,0.507,91,0.507,92,0.507,93,0.019,94,0.019,95,1.09,97,2.707]],["title/interfaces/InputContext.html",[0,0.117,91,0.596]],["body/interfaces/InputContext.html",[0,0.229,1,0.488,2,0.217,3,0.185,4,0.185,5,0.217,6,0.217,7,0.535,8,0.185,9,0.363,10,1.097,11,0.705,12,0.705,13,1.202,14,0.705,15,0.923,16,0.316,17,0.033,18,1.654,19,0.185,20,0.535,21,0.488,22,0.295,23,0.401,24,1.123,25,0.969,26,0.535,27,0.957,28,0.672,29,0.825,30,0.852,31,0.421,32,0.369,33,0.705,34,0.705,35,0.535,36,1.01,37,0.443,38,0.535,39,0.443,40,1.056,41,0.535,42,0.488,43,0.535,44,0.705,45,0.535,46,0.401,47,0.488,48,0.488,49,0.401,50,0.488,51,0.535,52,0.535,53,0.488,54,0.488,55,0.488,56,0.488,57,0.488,58,0.488,59,0.535,60,0.535,61,0.488,62,0.535,63,0.488,64,0.535,65,0.488,66,0.488,67,0.535,68,0.535,69,0.488,70,0.488,71,0.488,72,0.488,73,0.443,74,0.535,75,0.488,76,0.535,77,0.535,78,0.488,79,1.038,80,0.705,81,0.488,82,0.963,83,0.535,84,0.488,85,0.488,86,0.488,87,0.488,88,0.488,89,0.488,90,0.488,91,0.705,92,0.488,93,0.019,94,0.019]],["title/interfaces/LocalRuleMeta.html",[0,0.117,42,0.596]],["body/interfaces/LocalRuleMeta.html",[0,0.23,1,0.501,2,0.223,3,0.19,4,0.19,5,0.223,6,0.223,7,0.549,8,0.19,9,0.37,10,1.043,11,0.719,12,0.719,13,1.144,14,0.719,15,0.95,16,0.265,17,0.033,19,0.19,20,0.549,21,0.501,22,0.296,23,0.412,24,1.125,25,0.965,26,0.549,27,0.928,28,0.68,29,0.835,30,0.858,31,0.384,32,0.375,33,0.719,34,0.719,35,0.549,36,1.05,37,0.455,38,0.549,39,0.455,40,1.067,41,0.549,42,0.719,43,1.007,44,0.719,45,0.549,46,0.412,47,0.501,48,0.501,49,0.412,50,0.501,51,0.549,52,0.549,53,0.501,54,0.501,55,0.501,56,0.501,57,0.501,58,0.501,59,0.549,60,0.549,61,0.501,62,0.549,63,0.501,64,0.549,65,0.501,66,0.501,67,0.549,68,0.549,69,0.501,70,0.501,71,0.501,72,0.501,73,0.455,74,0.549,75,0.501,76,0.549,77,0.549,78,0.501,79,1.043,80,0.719,81,0.501,82,0.885,83,0.549,84,0.501,85,0.501,86,0.501,87,0.501,88,0.501,89,0.501,90,0.501,91,0.501,92,0.501,93,0.019,94,0.019]],["title/interfaces/OperatorContext.html",[0,0.117,90,0.596]],["body/interfaces/OperatorContext.html",[0,0.229,1,0.492,2,0.219,3,0.187,4,0.187,5,0.219,6,0.219,7,0.539,8,0.187,9,0.365,10,1.099,11,0.71,12,0.71,13,1.204,14,0.71,15,0.925,16,0.304,17,0.033,18,1.66,19,0.187,20,0.539,21,0.492,22,0.295,23,0.405,24,1.125,25,0.97,26,0.539,27,0.925,28,0.675,29,0.943,30,0.854,31,0.382,32,0.371,33,0.71,34,0.71,35,0.539,36,1.011,37,0.447,38,0.539,39,0.447,40,1.059,41,0.539,42,0.492,43,0.539,44,0.71,45,0.539,46,0.405,47,0.492,48,0.492,49,0.405,50,0.492,51,0.539,52,0.539,53,0.492,54,0.492,55,0.492,56,0.492,57,0.492,58,0.492,59,0.539,60,0.539,61,0.492,62,0.539,63,0.492,64,0.539,65,0.492,66,0.492,67,0.539,68,0.539,69,0.492,70,0.492,71,0.492,72,0.492,73,0.447,74,0.539,75,0.492,76,0.539,77,0.539,78,0.492,79,1.04,80,0.71,81,0.492,82,0.966,83,0.539,84,0.492,85,0.492,86,0.492,87,0.492,88,0.492,89,0.492,90,0.71,91,0.492,92,0.492,93,0.019,94,0.019]],["title/interfaces/Option.html",[0,0.117,31,0.226]],["body/interfaces/Option.html",[0,0.23,1,0.502,2,0.224,3,0.19,4,0.19,5,0.224,6,0.224,7,0.55,8,0.19,9,0.371,10,1.044,11,0.72,12,0.72,13,1.144,14,0.72,15,0.929,16,0.265,17,0.033,19,0.19,20,0.55,21,0.502,22,0.296,23,0.413,24,1.126,25,0.965,26,0.55,27,0.929,28,0.773,29,0.836,30,0.859,31,0.396,32,0.452,33,0.72,34,0.72,35,0.55,36,1.016,37,0.457,38,0.55,39,0.457,40,1.068,41,0.55,42,0.502,43,0.55,44,0.72,45,0.55,46,0.413,47,0.502,48,0.502,49,0.413,50,0.502,51,0.55,52,0.55,53,0.502,54,0.502,55,0.502,56,0.502,57,0.502,58,0.502,59,0.55,60,0.55,61,0.502,62,0.55,63,0.502,64,0.55,65,0.502,66,0.502,67,0.55,68,0.55,69,0.502,70,0.502,71,0.502,72,0.502,73,0.457,74,0.55,75,0.502,76,0.55,77,0.55,78,0.502,79,1.043,80,0.72,81,0.502,82,0.886,83,0.55,84,0.502,85,0.502,86,0.502,87,0.502,88,0.502,89,0.502,90,0.502,91,0.502,92,0.502,93,0.019,94,0.019]],["title/interfaces/QueryBuilderClassNames.html",[0,0.117,46,0.491]],["body/interfaces/QueryBuilderClassNames.html",[0,0.221,1,0.384,2,0.171,3,0.145,4,0.145,5,0.171,6,0.171,7,0.42,8,0.145,9,0.303,10,0.956,11,0.59,12,0.59,13,1.048,14,0.59,15,0.907,16,0.371,17,0.033,19,0.145,20,0.42,21,0.384,22,0.284,23,0.316,24,1.133,25,0.943,26,0.42,27,0.878,28,0.597,29,0.733,30,0.787,31,0.465,32,0.32,33,0.59,34,0.59,35,0.42,36,0.956,37,0.349,38,0.42,39,0.349,40,0.953,41,0.42,42,0.384,43,0.42,44,0.59,45,0.42,46,0.485,47,0.806,48,0.806,49,0.663,50,0.806,51,0.883,52,0.883,53,0.806,54,0.806,55,0.806,56,0.806,57,0.806,58,0.806,59,0.883,60,0.883,61,0.806,62,0.883,63,0.806,64,0.883,65,0.806,66,0.806,67,0.883,68,0.883,69,0.806,70,0.806,71,0.806,72,0.806,73,0.349,74,0.42,75,0.384,76,0.42,77,0.42,78,0.384,79,0.993,80,0.59,81,0.384,82,0.791,83,0.42,84,0.384,85,0.384,86,0.384,87,0.384,88,0.384,89,0.384,90,0.384,91,0.384,92,0.384,93,0.016,94,0.016]],["title/interfaces/QueryBuilderConfig.html",[0,0.117,73,0.542]],["body/interfaces/QueryBuilderConfig.html",[0,0.227,1,0.457,2,0.204,3,0.173,4,0.173,5,0.204,6,0.204,7,0.501,8,0.173,9,0.346,10,1.015,11,0.938,12,0.938,13,1.112,14,0.938,15,0.912,16,0.345,17,0.033,18,2.057,19,0.173,20,0.501,21,0.457,22,0.292,23,0.376,24,1.12,25,0.953,26,0.501,27,0.936,28,0.652,29,0.8,30,0.889,31,0.449,32,0.356,33,0.881,34,0.673,35,0.501,36,1.018,37,0.416,38,0.501,39,0.416,40,1.029,41,0.501,42,0.457,43,0.501,44,0.881,45,0.501,46,0.376,47,0.457,48,0.457,49,0.376,50,0.457,51,0.501,52,0.501,53,0.457,54,0.457,55,0.457,56,0.457,57,0.457,58,0.457,59,0.501,60,0.501,61,0.457,62,0.501,63,0.457,64,0.501,65,0.457,66,0.457,67,0.501,68,0.501,69,0.457,70,0.457,71,0.457,72,0.457,73,0.612,74,0.965,75,0.881,76,0.501,77,0.965,78,0.881,79,1.027,80,0.938,81,0.457,82,0.853,83,0.501,84,0.457,85,0.457,86,0.457,87,0.457,88,0.457,89,0.457,90,0.457,91,0.457,92,0.457,93,0.018,94,0.018]],["title/modules/QueryBuilderModule.html",[98,1.846,99,1.846]],["body/modules/QueryBuilderModule.html",[2,0.288,3,0.245,4,0.245,17,0.033,19,0.404,21,0.647,22,0.26,93,0.023,94,0.023,98,2.658,99,3.81,100,2.004,101,2.886,102,4.293,103,2.229,104,2.004,105,2.886,106,2.886,107,2.886,108,4.568,109,4.057,110,4.057,111,4.057,112,4.057,113,4.057,114,4.057,115,4.057,116,3.827,117,2.886,118,2.51,119,3.458,120,3.458,121,4.585,122,1.393,123,4.585,124,2.886,125,4.585,126,2.229,127,1.281]],["title/directives/QueryButtonGroupDirective.html",[109,2.053,128,0.654]],["body/directives/QueryButtonGroupDirective.html",[2,0.372,3,0.316,4,0.316,5,0.483,6,0.483,8,0.316,9,0.519,16,0.318,17,0.032,19,0.316,22,0.211,31,0.316,32,0.372,49,0.891,93,0.027,94,0.027,95,2.169,109,3.471,122,1.796,127,1.651,128,1.105,129,3.721,130,2.137,131,2.137,132,4.495,133,2.581,134,2.95,135,2.137,136,2.137,137,2.997,138,3.721,139,2.137,140,3.721,141,4.458,142,2.137,143,2.137,144,2.137]],["title/directives/QueryEntityDirective.html",[110,2.053,128,0.654]],["body/directives/QueryEntityDirective.html",[2,0.375,3,0.319,4,0.319,5,0.484,6,0.484,8,0.319,9,0.522,16,0.319,17,0.032,19,0.319,22,0.213,31,0.319,32,0.375,93,0.027,94,0.027,95,2.181,110,3.489,122,1.811,127,1.666,128,1.111,130,2.155,131,2.155,133,2.595,134,2.957,135,2.155,136,2.155,137,3.003,139,2.155,142,2.155,143,2.155,144,2.155,145,4.496,146,3.93,147,4.496,148,4.496]],["title/directives/QueryFieldDirective.html",[111,2.053,128,0.654]],["body/directives/QueryFieldDirective.html",[2,0.375,3,0.319,4,0.319,5,0.484,6,0.484,8,0.319,9,0.522,16,0.319,17,0.032,19,0.319,22,0.213,31,0.319,32,0.375,93,0.027,94,0.027,95,2.181,111,3.489,122,1.811,127,1.666,128,1.111,130,2.155,131,2.155,133,2.595,134,2.957,135,2.155,136,2.155,137,3.003,139,2.155,142,2.155,143,2.155,144,2.155,149,4.496,150,3.93,151,4.496,152,4.496]],["title/directives/QueryInputDirective.html",[112,2.053,128,0.654]],["body/directives/QueryInputDirective.html",[2,0.321,3,0.273,4,0.273,5,0.492,6,0.492,8,0.273,9,0.474,16,0.361,17,0.032,19,0.273,22,0.183,24,1.043,28,0.791,31,0.349,32,0.476,79,0.655,93,0.024,94,0.024,95,2.299,112,3.168,122,1.55,127,1.426,128,1.111,130,1.844,131,1.844,133,2.356,134,2.826,135,1.844,136,1.844,137,2.89,139,2.356,142,2.89,143,1.844,144,1.844,153,3.848,154,3.568,155,5.706,156,3.848,157,4.915,158,3.568,159,3.848,160,3.848,161,3.848,162,3.848,163,3.848,164,4.52,165,4.915,166,4.52,167,3.848,168,3.212,169,3.212,170,4.915,171,3.848,172,3.848,173,3.848,174,3.848,175,3.848,176,3.848]],["title/directives/QueryOperatorDirective.html",[113,2.053,128,0.654]],["body/directives/QueryOperatorDirective.html",[2,0.375,3,0.319,4,0.319,5,0.484,6,0.484,8,0.319,9,0.522,16,0.319,17,0.032,19,0.319,22,0.213,31,0.319,32,0.375,93,0.027,94,0.027,95,2.181,113,3.489,122,1.811,127,1.666,128,1.111,130,2.155,131,2.155,133,2.595,134,2.957,135,2.155,136,2.155,137,3.003,139,2.155,142,2.155,143,2.155,144,2.155,177,4.496,178,3.93,179,4.496,180,4.496]],["title/directives/QueryRemoveButtonDirective.html",[114,2.053,128,0.654]],["body/directives/QueryRemoveButtonDirective.html",[2,0.373,3,0.318,4,0.318,5,0.484,6,0.484,8,0.318,9,0.52,16,0.318,17,0.032,19,0.318,22,0.212,31,0.318,32,0.373,93,0.027,94,0.027,95,2.175,114,3.48,122,1.804,127,1.659,128,1.108,130,2.146,131,2.146,133,2.588,134,2.953,135,2.146,136,2.146,137,3,139,2.146,143,2.146,144,2.146,181,4.208,182,4.477,183,4.507,184,4.477,185,4.477]],["title/directives/QuerySwitchGroupDirective.html",[115,2.053,128,0.654]],["body/directives/QuerySwitchGroupDirective.html",[2,0.373,3,0.317,4,0.317,5,0.483,6,0.483,8,0.317,9,0.52,16,0.318,17,0.032,19,0.317,22,0.212,31,0.317,32,0.373,93,0.027,94,0.027,95,2.172,115,3.476,122,1.8,127,1.655,128,1.107,129,3.729,130,2.141,131,2.141,133,2.585,134,2.951,135,2.141,136,2.141,137,2.999,138,3.729,139,2.141,140,3.729,142,2.141,143,2.141,144,2.141,186,4.835,187,4.501]],["title/interfaces/RemoveButtonContext.html",[0,0.117,92,0.596]],["body/interfaces/RemoveButtonContext.html",[0,0.229,1,0.496,2,0.221,3,0.188,4,0.188,5,0.221,6,0.221,7,0.544,8,0.188,9,0.368,10,1.101,11,0.714,12,0.714,13,1.207,14,0.714,15,0.927,16,0.288,17,0.033,18,1.667,19,0.188,20,0.544,21,0.496,22,0.295,23,0.408,24,1.124,25,0.971,26,0.544,27,0.927,28,0.678,29,0.832,30,0.856,31,0.383,32,0.373,33,0.714,34,0.714,35,0.544,36,1.013,37,0.451,38,0.544,39,0.451,40,1.063,41,0.544,42,0.496,43,0.544,44,0.714,45,0.544,46,0.408,47,0.496,48,0.496,49,0.408,50,0.496,51,0.544,52,0.544,53,0.496,54,0.496,55,0.496,56,0.496,57,0.496,58,0.496,59,0.544,60,0.544,61,0.496,62,0.544,63,0.496,64,0.544,65,0.496,66,0.496,67,0.544,68,0.544,69,0.496,70,0.496,71,0.496,72,0.496,73,0.451,74,0.544,75,0.496,76,0.544,77,0.544,78,0.496,79,1.041,80,0.97,81,0.496,82,0.882,83,0.544,84,0.496,85,0.496,86,0.496,87,0.496,88,0.496,89,0.496,90,0.496,91,0.496,92,0.714,93,0.019,94,0.019]],["title/interfaces/Rule.html",[0,0.117,25,0.491]],["body/interfaces/Rule.html",[0,0.229,1,0.49,2,0.218,3,0.186,4,0.186,5,0.218,6,0.218,7,0.537,8,0.186,9,0.364,10,1.036,11,0.707,12,0.707,13,1.136,14,0.707,15,0.924,16,0.304,17,0.033,19,0.186,20,0.537,21,0.49,22,0.295,23,0.403,24,1.127,25,0.966,26,0.537,27,0.946,28,0.767,29,0.942,30,0.903,31,0.426,32,0.37,33,0.707,34,0.707,35,0.537,36,1.01,37,0.445,38,0.537,39,0.445,40,1.057,41,0.537,42,0.49,43,0.537,44,0.707,45,0.537,46,0.403,47,0.49,48,0.49,49,0.403,50,0.49,51,0.537,52,0.537,53,0.49,54,0.49,55,0.49,56,0.49,57,0.49,58,0.49,59,0.537,60,0.537,61,0.49,62,0.537,63,0.49,64,0.537,65,0.49,66,0.49,67,0.537,68,0.537,69,0.49,70,0.49,71,0.49,72,0.49,73,0.445,74,0.537,75,0.49,76,0.537,77,0.537,78,0.49,79,1.039,80,0.707,81,0.49,82,0.877,83,0.537,84,0.49,85,0.49,86,0.49,87,0.49,88,0.49,89,0.49,90,0.49,91,0.49,92,0.49,93,0.019,94,0.019]],["title/interfaces/RuleSet.html",[0,0.117,15,0.491]],["body/interfaces/RuleSet.html",[0,0.23,1,0.501,2,0.223,3,0.19,4,0.19,5,0.223,6,0.223,7,0.549,8,0.19,9,0.37,10,1.043,11,0.719,12,0.719,13,1.144,14,0.719,15,0.936,16,0.265,17,0.033,19,0.19,20,0.549,21,0.501,22,0.296,23,0.756,24,1.126,25,0.976,26,0.922,27,0.928,28,0.68,29,0.835,30,0.858,31,0.384,32,0.375,33,0.719,34,0.719,35,0.549,36,1.015,37,0.455,38,0.549,39,0.455,40,1.067,41,0.549,42,0.501,43,0.549,44,0.719,45,0.549,46,0.412,47,0.501,48,0.501,49,0.412,50,0.501,51,0.549,52,0.549,53,0.501,54,0.501,55,0.501,56,0.501,57,0.501,58,0.501,59,0.549,60,0.549,61,0.501,62,0.549,63,0.501,64,0.549,65,0.501,66,0.501,67,0.549,68,0.549,69,0.501,70,0.501,71,0.501,72,0.501,73,0.455,74,0.549,75,0.501,76,0.549,77,0.549,78,0.501,79,1.043,80,0.719,81,0.501,82,0.885,83,0.549,84,0.501,85,0.501,86,0.501,87,0.501,88,0.501,89,0.501,90,0.501,91,0.501,92,0.501,93,0.019,94,0.019]],["title/interfaces/SwitchGroupContext.html",[0,0.117,81,0.596]],["body/interfaces/SwitchGroupContext.html",[0,0.229,1,0.496,2,0.221,3,0.188,4,0.188,5,0.221,6,0.221,7,0.544,8,0.188,9,0.368,10,1.101,11,0.714,12,0.714,13,1.207,14,0.714,15,0.942,16,0.288,17,0.033,18,1.667,19,0.188,20,0.544,21,0.496,22,0.295,23,0.408,24,1.124,25,0.964,26,0.544,27,0.927,28,0.678,29,0.832,30,0.856,31,0.383,32,0.373,33,0.714,34,0.714,35,0.544,36,1.013,37,0.451,38,0.544,39,0.451,40,1.063,41,0.544,42,0.496,43,0.544,44,0.714,45,0.544,46,0.408,47,0.496,48,0.496,49,0.408,50,0.496,51,0.544,52,0.544,53,0.496,54,0.496,55,0.496,56,0.496,57,0.496,58,0.496,59,0.544,60,0.544,61,0.496,62,0.544,63,0.496,64,0.544,65,0.496,66,0.496,67,0.544,68,0.544,69,0.496,70,0.496,71,0.496,72,0.496,73,0.451,74,0.544,75,0.496,76,0.544,77,0.544,78,0.496,79,1.041,80,0.714,81,0.714,82,0.968,83,0.544,84,0.496,85,0.496,86,0.496,87,0.496,88,0.496,89,0.496,90,0.496,91,0.496,92,0.496,93,0.019,94,0.019]],["title/changelog.html",[188,1.717,189,1.717,190,2.224]],["body/changelog.html",[0,0.176,9,0.357,15,0.571,16,0.218,17,0.024,18,1.263,22,0.176,23,0.571,25,0.571,27,0.739,28,0.737,29,0.905,30,0.571,36,0.63,37,0.63,39,0.905,46,0.739,49,0.571,82,0.816,93,0.024,94,0.024,103,2.388,126,3.091,127,1.372,128,0.76,146,2.689,150,2.689,154,3.481,158,2.689,169,4.003,178,2.689,181,2.689,190,3.092,191,3.092,192,3.092,193,5.826,194,3.704,195,4.003,196,5.826,197,2.689,198,3.861,199,3.092,200,3.092,201,3.704,202,3.092,203,6.276,204,5.318,205,4.003,206,4.796,207,3.092,208,3.704,209,3.704,210,3.704,211,4.796,212,3.704,213,4.695,214,4.003,215,3.704,216,3.704,217,3.704,218,3.704,219,4.003,220,4.796,221,4.796,222,4.003,223,4.796,224,3.092,225,3.092,226,4.003,227,3.704,228,3.704,229,3.704,230,3.704,231,3.092,232,4.796,233,3.092,234,3.704,235,3.092,236,3.092,237,3.092,238,3.704,239,3.704,240,3.704,241,3.704,242,3.704,243,3.704,244,3.704,245,3.704,246,3.704,247,3.704,248,3.704,249,3.704,250,3.704,251,3.704,252,3.704,253,3.092,254,3.704,255,4.44,256,3.704,257,3.092,258,3.704,259,3.092,260,3.092,261,3.704,262,3.704,263,3.704,264,3.704,265,3.704,266,3.704,267,3.092]],["title/dependencies.html",[100,2.219,268,2.665]],["body/dependencies.html",[17,0.031,93,0.028,94,0.028,100,3.342,122,2.016,124,4.178,269,5.005,270,5.005,271,5.005,272,5.766]],["title/index.html",[8,0.189,188,1.717,189,1.717]],["body/index.html",[0,0.073,3,0.142,9,0.298,10,0.948,11,0.374,12,0.374,14,0.374,15,0.827,16,0.339,17,0.032,18,1.449,19,0.268,22,0.146,23,0.476,24,0.826,25,0.965,27,0.935,28,0.795,29,0.964,30,0.707,31,0.396,32,0.489,34,0.374,36,0.34,37,0.34,46,0.308,47,0.374,48,0.374,49,0.476,50,0.374,53,0.374,54,0.374,55,0.374,56,0.374,57,0.374,58,0.374,61,0.578,63,0.374,65,0.374,66,0.374,69,0.374,70,0.374,71,0.374,72,0.374,73,0.723,75,0.374,78,0.374,79,0.933,80,0.374,82,0.782,85,0.374,87,0.374,88,0.374,89,0.374,93,0.015,94,0.015,99,1.79,100,1.158,103,1.99,104,1.79,126,3.778,127,1.398,128,0.634,132,1.667,142,1.809,146,1.45,150,1.45,154,1.45,158,3.979,164,3.151,166,3.545,178,1.45,181,2.74,183,1.667,186,1.667,187,1.667,188,1.288,189,1.288,191,3.151,192,2.578,195,3.833,197,2.74,198,1.45,199,4.225,200,2.578,202,3.545,205,2.578,213,1.667,214,1.667,219,3.833,222,3.151,224,4.729,225,1.667,226,3.151,231,2.578,235,1.667,237,1.667,253,2.578,255,3.545,257,1.667,259,3.151,260,3.151,267,3.833,273,1.998,274,5.062,275,1.998,276,1.998,277,2.578,278,1.998,279,1.998,280,3.088,281,5.482,282,3.088,283,3.088,284,1.998,285,1.998,286,1.998,287,1.998,288,3.151,289,1.998,290,1.998,291,1.998,292,3.088,293,1.998,294,1.998,295,1.998,296,1.998,297,4.247,298,1.998,299,4.247,300,3.775,301,3.775,302,3.775,303,1.998,304,3.088,305,1.998,306,1.998,307,1.998,308,3.775,309,3.775,310,3.088,311,4.247,312,1.998,313,1.998,314,3.088,315,3.088,316,1.998,317,1.998,318,1.998,319,4.247,320,3.088,321,3.088,322,3.088,323,1.998,324,1.998,325,1.998,326,5.062,327,1.998,328,1.998,329,1.998,330,1.998,331,1.667,332,3.088,333,3.088,334,1.998,335,3.775,336,1.998,337,1.998,338,1.998,339,3.088,340,1.998,341,1.998,342,1.998,343,1.998,344,1.998,345,1.998,346,1.998,347,1.998,348,3.088,349,3.088,350,5.229,351,1.998,352,2.578,353,5.665,354,3.088,355,3.775,356,1.998,357,1.998,358,1.998,359,1.998,360,3.088,361,1.998,362,1.998,363,5.229,364,1.998,365,1.998,366,1.998,367,5.062,368,5.367,369,5.229,370,1.998,371,1.998,372,3.088,373,3.088,374,1.998,375,1.998,376,1.998,377,1.998,378,1.998,379,1.998,380,1.998]],["title/license.html",[188,1.717,189,1.717,381,2.224]],["body/license.html",[4,0.297,17,0.026,23,0.645,93,0.026,94,0.026,104,2.428,118,3.041,168,4.7,197,3.763,207,3.496,236,4.327,288,3.496,381,3.496,382,4.189,383,5.63,384,4.189,385,4.189,386,4.189,387,4.189,388,5.184,389,4.189,390,4.189,391,4.189,392,4.189,393,5.184,394,4.189,395,5.883,396,6.36,397,4.189,398,5.184,399,4.189,400,5.63,401,4.189,402,4.189,403,4.189,404,4.189,405,4.189,406,4.189,407,4.189,408,4.189,409,4.189,410,4.189,411,4.189,412,4.189,413,5.184,414,5.184,415,4.189,416,4.189,417,5.184,418,4.189,419,4.189,420,4.189,421,4.189,422,4.189,423,4.189,424,4.189,425,4.189,426,4.189,427,4.189,428,4.189,429,4.189,430,4.189,431,4.189,432,4.189,433,4.189,434,4.189,435,4.189,436,4.189,437,4.189,438,4.189,439,4.189]],["title/modules.html",[98,2.515]],["body/modules.html",[17,0.029,93,0.029,94,0.029,98,2.943,99,2.943,277,4.239,440,5.078,441,5.078,442,5.078]],["title/overview.html",[443,3.622]],["body/overview.html",[0,0.145,17,0.032,22,0.188,93,0.025,94,0.025,98,2.904,99,3.836,100,2.298,101,3.31,102,3.31,103,2.556,104,2.298,105,3.31,106,3.31,107,3.31,108,4.479,109,3.977,110,3.977,111,3.977,112,3.977,113,3.977,114,3.977,115,3.977,116,4.182,117,3.31,118,2.878,126,2.556,128,0.814,331,4.182,443,3.31,444,3.965,445,3.965]],["title/miscellaneous/variables.html",[446,2.224,447,3.196]],["body/miscellaneous/variables.html",[5,0.386,6,0.386,8,0.328,16,0.325,17,0.032,28,0.763,39,1.001,93,0.027,94,0.027,104,3.192,108,3.997,198,3.997,233,4.597,352,4.597,446,3.862,447,3.862,448,5.879,449,5.507,450,5.879,451,4.626,452,5.507,453,5.507,454,4.626]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"index.html":{}}}],["0.2.3",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":194,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":331,"title":{},"body":{"index.html":{},"overview.html":{}}}],["12",{"_index":317,"title":{},"body":{"index.html":{}}}],["17",{"_index":445,"title":{},"body":{"overview.html":{}}}],["2",{"_index":297,"title":{},"body":{"index.html":{}}}],["2017",{"_index":385,"title":{},"body":{"license.html":{}}}],["22",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":259,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["4.0.0",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["49",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["5.4.2",{"_index":270,"title":{},"body":{"dependencies.html":{}}}],["6.0",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["61",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":444,"title":{},"body":{"overview.html":{}}}],["_type",{"_index":176,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["abov",{"_index":412,"title":{},"body":{"license.html":{}}}],["accessor",{"_index":161,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["action",{"_index":434,"title":{},"body":{"license.html":{}}}],["ad",{"_index":373,"title":{},"body":{"index.html":{}}}],["add",{"_index":196,"title":{},"body":{"changelog.html":{}}}],["addicon",{"_index":48,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["addrul",{"_index":11,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["addruleset",{"_index":12,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["ag",{"_index":301,"title":{},"body":{"index.html":{}}}],["alert",{"_index":333,"title":{},"body":{"index.html":{}}}],["align",{"_index":323,"title":{},"body":{"index.html":{}}}],["allowemptyruleset",{"_index":74,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["allowruleset",{"_index":351,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":207,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["angular",{"_index":199,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":124,"title":{},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{}}}],["angular/cor",{"_index":122,"title":{},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"dependencies.html":{}}}],["angular/form",{"_index":21,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["angular2",{"_index":191,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["anoth",{"_index":338,"title":{},"body":{"index.html":{}}}],["app.compon",{"_index":293,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":299,"title":{},"body":{"index.html":{}}}],["app.component.t",{"_index":300,"title":{},"body":{"index.html":{}}}],["app.module.t",{"_index":291,"title":{},"body":{"index.html":{}}}],["appcompon",{"_index":292,"title":{},"body":{"index.html":{}}}],["appmodul",{"_index":298,"title":{},"body":{"index.html":{}}}],["aris",{"_index":438,"title":{},"body":{"license.html":{}}}],["array",{"_index":26,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["associ",{"_index":397,"title":{},"body":{"license.html":{}}}],["author",{"_index":427,"title":{},"body":{"license.html":{}}}],["auto",{"_index":319,"title":{},"body":{"index.html":{}}}],["base",{"_index":275,"title":{},"body":{"index.html":{}}}],["basic",{"_index":290,"title":{},"body":{"index.html":{}}}],["be",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["behavior",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":231,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["birthday",{"_index":308,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":36,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["bootstrap",{"_index":103,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["border",{"_index":332,"title":{},"body":{"index.html":{}}}],["break",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":442,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":440,"title":{},"body":{"modules.html":{}}}],["btn",{"_index":314,"title":{},"body":{"index.html":{}}}],["bug",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":378,"title":{},"body":{"index.html":{}}}],["builder",{"_index":274,"title":{},"body":{"index.html":{}}}],["builder.component.t",{"_index":450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder.interfaces.t",{"_index":7,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["builder.interfaces.ts:20",{"_index":97,"title":{},"body":{"interfaces/FieldMap.html":{}}}],["builder.interfaces.ts:42",{"_index":96,"title":{},"body":{"interfaces/EntityMap.html":{}}}],["builder.module.t",{"_index":120,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["builder/queri",{"_index":6,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":49,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["button.directive.t",{"_index":182,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:4",{"_index":184,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["button.directive.ts:5",{"_index":185,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{}}}],["buttongroup",{"_index":50,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["buttongroupcontext",{"_index":1,"title":{"interfaces/ButtonGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["c",{"_index":384,"title":{},"body":{"license.html":{}}}],["callback",{"_index":219,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["categori",{"_index":237,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["caus",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["center",{"_index":325,"title":{},"body":{"index.html":{}}}],["chang",{"_index":195,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changefield",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":190,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["charact",{"_index":245,"title":{},"body":{"changelog.html":{}}}],["charg",{"_index":392,"title":{},"body":{"license.html":{}}}],["child",{"_index":355,"title":{},"body":{"index.html":{}}}],["claim",{"_index":430,"title":{},"body":{"license.html":{}}}],["class",{"_index":127,"title":{},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{}}}],["classnam",{"_index":310,"title":{},"body":{"index.html":{}}}],["cluster_querybuildermodul",{"_index":105,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_declar",{"_index":106,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["cluster_querybuildermodule_export",{"_index":107,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["code",{"_index":343,"title":{},"body":{"index.html":{}}}],["col",{"_index":335,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":123,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["complet",{"_index":337,"title":{},"body":{"index.html":{}}}],["compon",{"_index":126,"title":{},"body":{"modules/QueryBuilderModule.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["condit",{"_index":23,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["conditionvalu",{"_index":83,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["config",{"_index":267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configur",{"_index":357,"title":{},"body":{"index.html":{}}}],["connect",{"_index":439,"title":{},"body":{"license.html":{}}}],["connector",{"_index":62,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["constructor",{"_index":135,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(publ",{"_index":144,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["constructor(templ",{"_index":136,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["contain",{"_index":369,"title":{},"body":{"index.html":{}}}],["context",{"_index":367,"title":{},"body":{"index.html":{}}}],["contract",{"_index":435,"title":{},"body":{"license.html":{}}}],["control",{"_index":326,"title":{},"body":{"index.html":{}}}],["control_value_accessor",{"_index":448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copi",{"_index":395,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":383,"title":{},"body":{"license.html":{}}}],["correspond",{"_index":371,"title":{},"body":{"index.html":{}}}],["css",{"_index":213,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["current",{"_index":368,"title":{},"body":{"index.html":{}}}],["custom",{"_index":224,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["d",{"_index":320,"title":{},"body":{"index.html":{}}}],["damag",{"_index":431,"title":{},"body":{"license.html":{}}}],["danger",{"_index":334,"title":{},"body":{"index.html":{}}}],["data",{"_index":282,"title":{},"body":{"index.html":{}}}],["date",{"_index":309,"title":{},"body":{"index.html":{}}}],["deal",{"_index":398,"title":{},"body":{"license.html":{}}}],["declar",{"_index":102,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["default",{"_index":198,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultfield",{"_index":45,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["defaultoper",{"_index":38,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["defaultvalu",{"_index":37,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["defin",{"_index":95,"title":{},"body":{"interfaces/EntityMap.html":{},"interfaces/FieldMap.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["demo",{"_index":202,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["depend",{"_index":100,"title":{"dependencies.html":{}},"body":{"modules/QueryBuilderModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["descript",{"_index":350,"title":{},"body":{"index.html":{}}}],["detail",{"_index":348,"title":{},"body":{"index.html":{}}}],["differ",{"_index":354,"title":{},"body":{"index.html":{}}}],["direct",{"_index":128,"title":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["directive({selector",{"_index":143,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["disabl",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["display",{"_index":235,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["distribut",{"_index":405,"title":{},"body":{"license.html":{}}}],["document",{"_index":288,"title":{},"body":{"index.html":{},"license.html":{}}}],["element",{"_index":356,"title":{},"body":{"index.html":{}}}],["elementref",{"_index":141,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{}}}],["empti",{"_index":173,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["emptywarn",{"_index":64,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entiti",{"_index":30,"title":{"interfaces/Entity.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["entity.directive.t",{"_index":145,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:4",{"_index":147,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entity.directive.ts:5",{"_index":148,"title":{},"body":{"directives/QueryEntityDirective.html":{}}}],["entitycontext",{"_index":84,"title":{"interfaces/EntityContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitycontrol",{"_index":67,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitycontrols",{"_index":68,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitymap",{"_index":44,"title":{"interfaces/EntityMap.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["entitynam",{"_index":89,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["entityvalu",{"_index":85,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["es5",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":426,"title":{},"body":{"license.html":{}}}],["exampl",{"_index":260,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["export",{"_index":22,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":419,"title":{},"body":{"license.html":{}}}],["extens",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":307,"title":{},"body":{"index.html":{}}}],["fa",{"_index":311,"title":{},"body":{"index.html":{}}}],["featur",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["femal",{"_index":306,"title":{},"body":{"index.html":{}}}],["field",{"_index":27,"title":{"interfaces/Field.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["field'",{"_index":370,"title":{},"body":{"index.html":{}}}],["field.directive.t",{"_index":149,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:4",{"_index":151,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.directive.ts:5",{"_index":152,"title":{},"body":{"directives/QueryFieldDirective.html":{}}}],["field.nam",{"_index":344,"title":{},"body":{"index.html":{}}}],["fieldcontext",{"_index":86,"title":{"interfaces/FieldContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldcontrol",{"_index":65,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["fieldcontrols",{"_index":66,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["fieldmap",{"_index":33,"title":{"interfaces/FieldMap.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldnam",{"_index":76,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["fieldvalu",{"_index":87,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"license.html":{}}}],["first",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":422,"title":{},"body":{"license.html":{}}}],["fix",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":321,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":279,"title":{},"body":{"index.html":{}}}],["follow",{"_index":411,"title":{},"body":{"license.html":{}}}],["form",{"_index":222,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["formsmodul",{"_index":125,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["forwardref",{"_index":453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["free",{"_index":391,"title":{},"body":{"license.html":{}}}],["full",{"_index":340,"title":{},"body":{"index.html":{}}}],["function",{"_index":18,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/OperatorContext.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["furnish",{"_index":409,"title":{},"body":{"license.html":{}}}],["gender",{"_index":304,"title":{},"body":{"index.html":{}}}],["get",{"_index":188,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["getdisabledst",{"_index":13,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["getfield",{"_index":88,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["getinputtyp",{"_index":77,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["getoper",{"_index":75,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["getopt",{"_index":78,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["grant",{"_index":390,"title":{},"body":{"license.html":{}}}],["group",{"_index":315,"title":{},"body":{"index.html":{}}}],["group.directive.t",{"_index":129,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:4",{"_index":138,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["group.directive.ts:5",{"_index":140,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["handl",{"_index":281,"title":{},"body":{"index.html":{}}}],["heavi",{"_index":278,"title":{},"body":{"index.html":{}}}],["here",{"_index":286,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":389,"title":{},"body":{"license.html":{}}}],["holder",{"_index":428,"title":{},"body":{"license.html":{}}}],["ie11",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["impli",{"_index":420,"title":{},"body":{"license.html":{}}}],["implicit",{"_index":10,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["import",{"_index":19,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["inabl",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":400,"title":{},"body":{"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["inlin",{"_index":329,"title":{},"body":{"index.html":{}}}],["input",{"_index":142,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["input.directive.t",{"_index":153,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:14",{"_index":156,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:16",{"_index":160,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:7",{"_index":159,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["input.directive.ts:8",{"_index":163,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["inputcontext",{"_index":91,"title":{"interfaces/InputContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["inputcontrol",{"_index":71,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["inputcontrols",{"_index":72,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["instal",{"_index":283,"title":{},"body":{"index.html":{}}}],["instead",{"_index":359,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["invalid",{"_index":43,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["invalid/valid",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["invalidruleset",{"_index":63,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["ionicframework",{"_index":296,"title":{},"body":{"index.html":{}}}],["ionicmodule.forroot(appcompon",{"_index":295,"title":{},"body":{"index.html":{}}}],["issu",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":324,"title":{},"body":{"index.html":{}}}],["jqueri",{"_index":276,"title":{},"body":{"index.html":{}}}],["key",{"_index":34,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["kind",{"_index":418,"title":{},"body":{"license.html":{}}}],["label",{"_index":327,"title":{},"body":{"index.html":{}}}],["legend",{"_index":101,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["liabil",{"_index":432,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":429,"title":{},"body":{"license.html":{}}}],["librari",{"_index":339,"title":{},"body":{"index.html":{}}}],["licens",{"_index":381,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":236,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["link",{"_index":289,"title":{},"body":{"index.html":{}}}],["list",{"_index":363,"title":{},"body":{"index.html":{}}}],["localrulemeta",{"_index":42,"title":{"interfaces/LocalRuleMeta.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["look",{"_index":342,"title":{},"body":{"index.html":{}}}],["m",{"_index":302,"title":{},"body":{"index.html":{}}}],["main",{"_index":358,"title":{},"body":{"index.html":{}}}],["male",{"_index":305,"title":{},"body":{"index.html":{}}}],["map",{"_index":362,"title":{},"body":{"index.html":{}}}],["match",{"_index":94,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["materi",{"_index":200,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["merchant",{"_index":421,"title":{},"body":{"license.html":{}}}],["merg",{"_index":403,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":130,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["minor",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["minu",{"_index":312,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":446,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":382,"title":{},"body":{"license.html":{}}}],["ml",{"_index":318,"title":{},"body":{"index.html":{}}}],["mode",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["modern",{"_index":273,"title":{},"body":{"index.html":{}}}],["modifi",{"_index":402,"title":{},"body":{"license.html":{}}}],["modul",{"_index":98,"title":{"modules/QueryBuilderModule.html":{},"modules.html":{}},"body":{"modules/QueryBuilderModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["multi",{"_index":233,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["multiselect",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":32,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["new",{"_index":255,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ng_valid",{"_index":454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng_value_accessor",{"_index":451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ngmodel",{"_index":253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ngmodul",{"_index":121,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["ngmodule(import",{"_index":294,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":425,"title":{},"body":{"license.html":{}}}],["notic",{"_index":413,"title":{},"body":{"license.html":{}}}],["now",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":284,"title":{},"body":{"index.html":{}}}],["null",{"_index":41,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["nullabl",{"_index":35,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["number",{"_index":303,"title":{},"body":{"index.html":{}}}],["object",{"_index":353,"title":{},"body":{"index.html":{}}}],["obtain",{"_index":394,"title":{},"body":{"license.html":{}}}],["onchang",{"_index":82,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["oper",{"_index":29,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["operator.directive.t",{"_index":177,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:4",{"_index":179,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operator.directive.ts:5",{"_index":180,"title":{},"body":{"directives/QueryOperatorDirective.html":{}}}],["operatorcontext",{"_index":90,"title":{"interfaces/OperatorContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["operatorcontrol",{"_index":69,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["operatorcontrols",{"_index":70,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["operatormap",{"_index":361,"title":{},"body":{"index.html":{}}}],["opt.nam",{"_index":345,"title":{},"body":{"index.html":{}}}],["option",{"_index":31,"title":{"interfaces/Option.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["order",{"_index":316,"title":{},"body":{"index.html":{}}}],["otherwis",{"_index":437,"title":{},"body":{"license.html":{}}}],["out",{"_index":118,"title":{},"body":{"modules/QueryBuilderModule.html":{},"license.html":{},"overview.html":{}}}],["overrid",{"_index":248,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":443,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrit",{"_index":174,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["p",{"_index":330,"title":{},"body":{"index.html":{}}}],["packag",{"_index":268,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":139,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["parent",{"_index":40,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["part",{"_index":366,"title":{},"body":{"index.html":{}}}],["particular",{"_index":423,"title":{},"body":{"license.html":{}}}],["peer",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["permiss",{"_index":388,"title":{},"body":{"license.html":{}}}],["permit",{"_index":408,"title":{},"body":{"license.html":{}}}],["person",{"_index":393,"title":{},"body":{"license.html":{}}}],["play",{"_index":285,"title":{},"body":{"index.html":{}}}],["pleas",{"_index":341,"title":{},"body":{"index.html":{}}}],["plu",{"_index":313,"title":{},"body":{"index.html":{}}}],["plunker",{"_index":287,"title":{},"body":{"index.html":{}}}],["portion",{"_index":416,"title":{},"body":{"license.html":{}}}],["privat",{"_index":175,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["programat",{"_index":170,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["project",{"_index":377,"title":{},"body":{"index.html":{}}}],["proper",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["provid",{"_index":104,"title":{},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"license.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":133,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["publish",{"_index":404,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":424,"title":{},"body":{"license.html":{}}}],["px",{"_index":322,"title":{},"body":{"index.html":{}}}],["queri",{"_index":158,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["querybuild",{"_index":192,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["querybuilderclassnam",{"_index":46,"title":{"interfaces/QueryBuilderClassNames.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["querybuildercompon",{"_index":108,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["querybuilderconfig",{"_index":73,"title":{"interfaces/QueryBuilderConfig.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["querybuildermodul",{"_index":99,"title":{"modules/QueryBuilderModule.html":{}},"body":{"modules/QueryBuilderModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["querybuttongroup",{"_index":132,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"index.html":{}}}],["querybuttongroupdirect",{"_index":109,"title":{"directives/QueryButtonGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"overview.html":{}}}],["queryent",{"_index":146,"title":{},"body":{"directives/QueryEntityDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryentitydirect",{"_index":110,"title":{"directives/QueryEntityDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryEntityDirective.html":{},"overview.html":{}}}],["queryfield",{"_index":150,"title":{},"body":{"directives/QueryFieldDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryfielddirect",{"_index":111,"title":{"directives/QueryFieldDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryFieldDirective.html":{},"overview.html":{}}}],["queryinput",{"_index":154,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryinputdirect",{"_index":112,"title":{"directives/QueryInputDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryInputDirective.html":{},"overview.html":{}}}],["queryinputtyp",{"_index":155,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryinputtype(valu",{"_index":167,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["queryoper",{"_index":178,"title":{},"body":{"directives/QueryOperatorDirective.html":{},"changelog.html":{},"index.html":{}}}],["queryoperatordirect",{"_index":113,"title":{"directives/QueryOperatorDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryOperatorDirective.html":{},"overview.html":{}}}],["queryremovebutton",{"_index":183,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"index.html":{}}}],["queryremovebuttondirect",{"_index":114,"title":{"directives/QueryRemoveButtonDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QueryRemoveButtonDirective.html":{},"overview.html":{}}}],["queryswitchgroup",{"_index":187,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["queryswitchgroupdirect",{"_index":115,"title":{"directives/QuerySwitchGroupDirective.html":{}},"body":{"modules/QueryBuilderModule.html":{},"directives/QuerySwitchGroupDirective.html":{},"overview.html":{}}}],["quick",{"_index":346,"title":{},"body":{"index.html":{}}}],["radio",{"_index":328,"title":{},"body":{"index.html":{}}}],["reactiv",{"_index":221,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":347,"title":{},"body":{"index.html":{}}}],["remov",{"_index":181,"title":{},"body":{"directives/QueryRemoveButtonDirective.html":{},"changelog.html":{},"index.html":{}}}],["removebutton",{"_index":51,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removebuttoncontext",{"_index":92,"title":{"interfaces/RemoveButtonContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removebuttons",{"_index":52,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["removeicon",{"_index":47,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["removerul",{"_index":80,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["removeruleset",{"_index":14,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["renam",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["replac",{"_index":365,"title":{},"body":{"index.html":{}}}],["requir",{"_index":349,"title":{},"body":{"index.html":{}}}],["reset",{"_index":117,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}],["restrict",{"_index":399,"title":{},"body":{"license.html":{}}}],["result",{"_index":93,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":164,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["rewrit",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":401,"title":{},"body":{"license.html":{}}}],["rightalign",{"_index":58,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["root",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":61,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["rule",{"_index":25,"title":{"interfaces/Rule.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["ruleset",{"_index":15,"title":{"interfaces/RuleSet.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{}}}],["run",{"_index":379,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":269,"title":{},"body":{"dependencies.html":{}}}],["see",{"_index":226,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["seed",{"_index":376,"title":{},"body":{"index.html":{}}}],["select",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":131,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["sell",{"_index":407,"title":{},"body":{"license.html":{}}}],["seriou",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":166,"title":{},"body":{"directives/QueryInputDirective.html":{},"index.html":{}}}],["setqueryinputtype(valu",{"_index":162,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["setter",{"_index":171,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["shall",{"_index":414,"title":{},"body":{"license.html":{}}}],["show",{"_index":242,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["softwar",{"_index":396,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"modules/QueryBuilderModule.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["specifi",{"_index":372,"title":{},"body":{"index.html":{}}}],["src/.../queri",{"_index":449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/components/queri",{"_index":5,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"miscellaneous/variables.html":{}}}],["src/queri",{"_index":119,"title":{},"body":{"modules/QueryBuilderModule.html":{}}}],["start",{"_index":189,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["state",{"_index":205,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["store",{"_index":360,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["structur",{"_index":364,"title":{},"body":{"index.html":{}}}],["style",{"_index":214,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["subject",{"_index":410,"title":{},"body":{"license.html":{}}}],["sublicens",{"_index":406,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":415,"title":{},"body":{"license.html":{}}}],["support",{"_index":277,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":441,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":186,"title":{},"body":{"directives/QuerySwitchGroupDirective.html":{},"index.html":{}}}],["switchcontrol",{"_index":57,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchgroup",{"_index":54,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchgroupcontext",{"_index":81,"title":{"interfaces/SwitchGroupContext.html":{}},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["switchlabel",{"_index":55,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchradio",{"_index":56,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["switchrow",{"_index":53,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["target",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["templat",{"_index":134,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["templateref",{"_index":137,"title":{},"body":{"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{}}}],["test",{"_index":380,"title":{},"body":{"index.html":{}}}],["that'",{"_index":374,"title":{},"body":{"index.html":{}}}],["this._typ",{"_index":165,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["tort",{"_index":436,"title":{},"body":{"license.html":{}}}],["touch",{"_index":204,"title":{},"body":{"changelog.html":{}}}],["transit",{"_index":59,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["tree",{"_index":60,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["trigger",{"_index":172,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["true",{"_index":352,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tweak",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryButtonGroupDirective.html":{},"directives/QueryEntityDirective.html":{},"directives/QueryFieldDirective.html":{},"directives/QueryInputDirective.html":{},"directives/QueryOperatorDirective.html":{},"directives/QueryRemoveButtonDirective.html":{},"directives/QuerySwitchGroupDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":157,"title":{},"body":{"directives/QueryInputDirective.html":{}}}],["unrecogn",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["updat",{"_index":169,"title":{},"body":{"directives/QueryInputDirective.html":{},"changelog.html":{}}}],["us",{"_index":197,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":225,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["useexist",{"_index":452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":39,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["validationerror",{"_index":20,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{}}}],["valu",{"_index":28,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vanilla",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["variabl",{"_index":447,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":193,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":79,"title":{},"body":{"interfaces/ButtonGroupContext.html":{},"interfaces/Entity.html":{},"interfaces/EntityContext.html":{},"interfaces/EntityMap.html":{},"interfaces/Field.html":{},"interfaces/FieldContext.html":{},"interfaces/FieldMap.html":{},"interfaces/InputContext.html":{},"interfaces/LocalRuleMeta.html":{},"interfaces/OperatorContext.html":{},"interfaces/Option.html":{},"interfaces/QueryBuilderClassNames.html":{},"interfaces/QueryBuilderConfig.html":{},"directives/QueryInputDirective.html":{},"interfaces/RemoveButtonContext.html":{},"interfaces/Rule.html":{},"interfaces/RuleSet.html":{},"interfaces/SwitchGroupContext.html":{},"index.html":{}}}],["warranti",{"_index":417,"title":{},"body":{"license.html":{}}}],["way",{"_index":280,"title":{},"body":{"index.html":{}}}],["whether",{"_index":433,"title":{},"body":{"license.html":{}}}],["without",{"_index":168,"title":{},"body":{"directives/QueryInputDirective.html":{},"license.html":{}}}],["work",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["workflow",{"_index":375,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["zeb",{"_index":386,"title":{},"body":{"license.html":{}}}],["zhao",{"_index":387,"title":{},"body":{"license.html":{}}}],["zoom",{"_index":116,"title":{},"body":{"modules/QueryBuilderModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ButtonGroupContext.html":{"url":"interfaces/ButtonGroupContext.html","title":"interface - ButtonGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ButtonGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        addRule\n                                \n                                \n                                        addRuleSet\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Entity.html":{"url":"interfaces/Entity.html","title":"interface - Entity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Entity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultField\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultField\n                                    \n                                \n                                \n                                    \n                                        defaultField:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityContext.html":{"url":"interfaces/EntityContext.html","title":"interface - EntityContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        entities\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     Entity[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Entity[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EntityMap.html":{"url":"interfaces/EntityMap.html","title":"interface - EntityMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  EntityMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Entity\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:42\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        defaultOperator\n                                \n                                \n                                            Optional\n                                        defaultValue\n                                \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        name\n                                \n                                \n                                            Optional\n                                        nullable\n                                \n                                \n                                            Optional\n                                        operators\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        type\n                                \n                                \n                                            Optional\n                                        validator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultOperator\n                                    \n                                \n                                \n                                    \n                                        defaultOperator:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultValue\n                                    \n                                \n                                \n                                    \n                                        defaultValue:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nullable\n                                    \n                                \n                                \n                                    \n                                        nullable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                    \n                                \n                                \n                                    \n                                        validator:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldContext.html":{"url":"interfaces/FieldContext.html","title":"interface - FieldContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        fields\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        getFields\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getFields\n                                    \n                                \n                                \n                                    \n                                        getFields:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldMap.html":{"url":"interfaces/FieldMap.html","title":"interface - FieldMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    Field\n\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-builder.interfaces.ts:20\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputContext.html":{"url":"interfaces/InputContext.html","title":"interface - InputContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InputContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        field\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                                \n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     Field\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Field\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Option[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Option[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalRuleMeta.html":{"url":"interfaces/LocalRuleMeta.html","title":"interface - LocalRuleMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalRuleMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        invalid\n                                \n                                \n                                        ruleset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        invalid\n                                    \n                                \n                                \n                                    \n                                        invalid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleset\n                                    \n                                \n                                \n                                    \n                                        ruleset:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OperatorContext.html":{"url":"interfaces/OperatorContext.html","title":"interface - OperatorContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OperatorContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                                \n                                        operators\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operators\n                                    \n                                \n                                \n                                    \n                                        operators:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Option.html":{"url":"interfaces/Option.html","title":"interface - Option","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Option\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderClassNames.html":{"url":"interfaces/QueryBuilderClassNames.html","title":"interface - QueryBuilderClassNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderClassNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addIcon\n                                \n                                \n                                            Optional\n                                        button\n                                \n                                \n                                            Optional\n                                        buttonGroup\n                                \n                                \n                                            Optional\n                                        connector\n                                \n                                \n                                            Optional\n                                        emptyWarning\n                                \n                                \n                                            Optional\n                                        entityControl\n                                \n                                \n                                            Optional\n                                        entityControlSize\n                                \n                                \n                                            Optional\n                                        fieldControl\n                                \n                                \n                                            Optional\n                                        fieldControlSize\n                                \n                                \n                                            Optional\n                                        inputControl\n                                \n                                \n                                            Optional\n                                        inputControlSize\n                                \n                                \n                                            Optional\n                                        invalidRuleSet\n                                \n                                \n                                            Optional\n                                        operatorControl\n                                \n                                \n                                            Optional\n                                        operatorControlSize\n                                \n                                \n                                            Optional\n                                        removeButton\n                                \n                                \n                                            Optional\n                                        removeButtonSize\n                                \n                                \n                                            Optional\n                                        removeIcon\n                                \n                                \n                                            Optional\n                                        rightAlign\n                                \n                                \n                                            Optional\n                                        row\n                                \n                                \n                                            Optional\n                                        rule\n                                \n                                \n                                            Optional\n                                        ruleSet\n                                \n                                \n                                            Optional\n                                        switchControl\n                                \n                                \n                                            Optional\n                                        switchGroup\n                                \n                                \n                                            Optional\n                                        switchLabel\n                                \n                                \n                                            Optional\n                                        switchRadio\n                                \n                                \n                                            Optional\n                                        switchRow\n                                \n                                \n                                            Optional\n                                        transition\n                                \n                                \n                                            Optional\n                                        tree\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addIcon\n                                    \n                                \n                                \n                                    \n                                        addIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        button\n                                    \n                                \n                                \n                                    \n                                        button:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        buttonGroup\n                                    \n                                \n                                \n                                    \n                                        buttonGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        connector\n                                    \n                                \n                                \n                                    \n                                        connector:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emptyWarning\n                                    \n                                \n                                \n                                    \n                                        emptyWarning:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControl\n                                    \n                                \n                                \n                                    \n                                        entityControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entityControlSize\n                                    \n                                \n                                \n                                    \n                                        entityControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControl\n                                    \n                                \n                                \n                                    \n                                        fieldControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldControlSize\n                                    \n                                \n                                \n                                    \n                                        fieldControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControl\n                                    \n                                \n                                \n                                    \n                                        inputControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputControlSize\n                                    \n                                \n                                \n                                    \n                                        inputControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidRuleSet\n                                    \n                                \n                                \n                                    \n                                        invalidRuleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControl\n                                    \n                                \n                                \n                                    \n                                        operatorControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operatorControlSize\n                                    \n                                \n                                \n                                    \n                                        operatorControlSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButton\n                                    \n                                \n                                \n                                    \n                                        removeButton:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeButtonSize\n                                    \n                                \n                                \n                                    \n                                        removeButtonSize:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeIcon\n                                    \n                                \n                                \n                                    \n                                        removeIcon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rightAlign\n                                    \n                                \n                                \n                                    \n                                        rightAlign:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        row\n                                    \n                                \n                                \n                                    \n                                        row:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rule\n                                    \n                                \n                                \n                                    \n                                        rule:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ruleSet\n                                    \n                                \n                                \n                                    \n                                        ruleSet:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchControl\n                                    \n                                \n                                \n                                    \n                                        switchControl:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchGroup\n                                    \n                                \n                                \n                                    \n                                        switchGroup:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchLabel\n                                    \n                                \n                                \n                                    \n                                        switchLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRadio\n                                    \n                                \n                                \n                                    \n                                        switchRadio:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        switchRow\n                                    \n                                \n                                \n                                    \n                                        switchRow:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transition\n                                    \n                                \n                                \n                                    \n                                        transition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tree\n                                    \n                                \n                                \n                                    \n                                        tree:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryBuilderConfig.html":{"url":"interfaces/QueryBuilderConfig.html","title":"interface - QueryBuilderConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  QueryBuilderConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        addRule\n                                \n                                \n                                            Optional\n                                        addRuleSet\n                                \n                                \n                                            Optional\n                                        allowEmptyRulesets\n                                \n                                \n                                            Optional\n                                        entities\n                                \n                                \n                                        fields\n                                \n                                \n                                            Optional\n                                        getInputType\n                                \n                                \n                                            Optional\n                                        getOperators\n                                \n                                \n                                            Optional\n                                        getOptions\n                                \n                                \n                                            Optional\n                                        removeRule\n                                \n                                \n                                            Optional\n                                        removeRuleSet\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        addRule\n                                    \n                                \n                                \n                                    \n                                        addRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        addRuleSet\n                                    \n                                \n                                \n                                    \n                                        addRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        allowEmptyRulesets\n                                    \n                                \n                                \n                                    \n                                        allowEmptyRulesets:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        entities\n                                    \n                                \n                                \n                                    \n                                        entities:     EntityMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EntityMap\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getInputType\n                                    \n                                \n                                \n                                    \n                                        getInputType:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOperators\n                                    \n                                \n                                \n                                    \n                                        getOperators:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getOptions\n                                    \n                                \n                                \n                                    \n                                        getOptions:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRuleSet\n                                    \n                                \n                                \n                                    \n                                        removeRuleSet:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/QueryBuilderModule.html":{"url":"modules/QueryBuilderModule.html","title":"module - QueryBuilderModule","body":"\n                   \n\n\n\n\n  Modules\n  QueryBuilderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/query-builder.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                QueryBuilderComponent\n                            \n                            \n                                QueryButtonGroupDirective\n                            \n                            \n                                QueryEntityDirective\n                            \n                            \n                                QueryFieldDirective\n                            \n                            \n                                QueryInputDirective\n                            \n                            \n                                QueryOperatorDirective\n                            \n                            \n                                QueryRemoveButtonDirective\n                            \n                            \n                                QuerySwitchGroupDirective\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    QueryBuilderComponent\n                            \n                            \n                                    QueryButtonGroupDirective\n                            \n                            \n                                    QueryEntityDirective\n                            \n                            \n                                    QueryFieldDirective\n                            \n                            \n                                    QueryInputDirective\n                            \n                            \n                                    QueryOperatorDirective\n                            \n                            \n                                    QueryRemoveButtonDirective\n                            \n                            \n                                    QuerySwitchGroupDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, } from '@angular/forms';\nimport {\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryOperatorDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective\n} from './components';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective\n  ],\n  exports: [\n    QueryBuilderComponent,\n    QueryInputDirective,\n    QueryOperatorDirective,\n    QueryFieldDirective,\n    QueryEntityDirective,\n    QueryButtonGroupDirective,\n    QuerySwitchGroupDirective,\n    QueryRemoveButtonDirective\n  ]\n})\nexport class QueryBuilderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryButtonGroupDirective.html":{"url":"directives/QueryButtonGroupDirective.html","title":"directive - QueryButtonGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryButtonGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-button-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryButtonGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-button-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-button-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryButtonGroup]'})\nexport class QueryButtonGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryEntityDirective.html":{"url":"directives/QueryEntityDirective.html","title":"directive - QueryEntityDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryEntityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-entity.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryEntity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-entity.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-entity.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryEntity]'})\nexport class QueryEntityDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryFieldDirective.html":{"url":"directives/QueryFieldDirective.html","title":"directive - QueryFieldDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryFieldDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-field.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryField]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-field.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-field.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryField]'})\nexport class QueryFieldDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryInputDirective.html":{"url":"directives/QueryInputDirective.html","title":"directive - QueryInputDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryInputDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-input.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryInput]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                queryInputType\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-input.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                    \n                        Unique name for query input type. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:7\n                            \n                        \n            \n        \n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-input.directive.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        queryInputType\n                    \n                \n\n\n                \n                    \n                        setqueryInputType(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/components/query-builder/query-input.directive.ts:8\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryInput]'})\nexport class QueryInputDirective {\n  /** Unique name for query input type. */\n  @Input()\n  get queryInputType(): string { return this._type; }\n  set queryInputType(value: string) {\n    // If the directive is set without a type (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (!value) { return; }\n    this._type = value;\n  }\n  private _type: string;\n\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryOperatorDirective.html":{"url":"directives/QueryOperatorDirective.html","title":"directive - QueryOperatorDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryOperatorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-operator.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryOperator]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-operator.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-operator.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryOperator]'})\nexport class QueryOperatorDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QueryRemoveButtonDirective.html":{"url":"directives/QueryRemoveButtonDirective.html","title":"directive - QueryRemoveButtonDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QueryRemoveButtonDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-remove-button.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [queryRemoveButton]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-remove-button.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-remove-button.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[queryRemoveButton]'})\nexport class QueryRemoveButtonDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/QuerySwitchGroupDirective.html":{"url":"directives/QuerySwitchGroupDirective.html","title":"directive - QuerySwitchGroupDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  QuerySwitchGroupDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-switch-group.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [querySwitchGroup]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                template\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: TemplateRef)\n                    \n                \n                        \n                            \n                                Defined in src/components/query-builder/query-switch-group.directive.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            template\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        template:     TemplateRef\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/components/query-builder/query-switch-group.directive.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({selector: '[querySwitchGroup]'})\nexport class QuerySwitchGroupDirective {\n  constructor(public template: TemplateRef) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RemoveButtonContext.html":{"url":"interfaces/RemoveButtonContext.html","title":"interface - RemoveButtonContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RemoveButtonContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        removeRule\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     Rule\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rule\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removeRule\n                                    \n                                \n                                \n                                    \n                                        removeRule:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rule.html":{"url":"interfaces/Rule.html","title":"interface - Rule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Rule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        entity\n                                \n                                \n                                        field\n                                \n                                \n                                            Optional\n                                        operator\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entity\n                                    \n                                \n                                \n                                    \n                                        entity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        operator\n                                    \n                                \n                                \n                                    \n                                        operator:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RuleSet.html":{"url":"interfaces/RuleSet.html","title":"interface - RuleSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RuleSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        condition\n                                \n                                \n                                        rules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        condition\n                                    \n                                \n                                \n                                    \n                                        condition:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwitchGroupContext.html":{"url":"interfaces/SwitchGroupContext.html","title":"interface - SwitchGroupContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SwitchGroupContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/components/query-builder/query-builder.interfaces.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        $implicit\n                                \n                                \n                                        getDisabledState\n                                \n                                \n                                        onChange\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $implicit\n                                    \n                                \n                                \n                                    \n                                        $implicit:     RuleSet\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RuleSet\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        getDisabledState\n                                    \n                                \n                                \n                                    \n                                        getDisabledState:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                    \n                                \n                                \n                                    \n                                        onChange:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationErrors } from '@angular/forms';\n\nexport interface RuleSet {\n  condition: string;\n  rules: Array;\n}\n\nexport interface Rule {\n  field: string;\n  value?: any;\n  operator?: string;\n  entity?: string;\n}\n\nexport interface Option {\n  name: string;\n  value: any;\n}\n\nexport interface FieldMap {\n  [key: string]: Field;\n}\n\nexport interface Field {\n  name: string;\n  value?: string;\n  type: string;\n  nullable?: boolean;\n  options?: Option[];\n  operators?: string[];\n  defaultValue?: any;\n  defaultOperator?: any;\n  entity?: string;\n  validator?: (rule: Rule, parent: RuleSet) => any | null;\n}\n\nexport interface LocalRuleMeta {\n  ruleset: boolean;\n  invalid: boolean;\n}\n\nexport interface EntityMap {\n  [key: string]: Entity;\n}\n\nexport interface Entity {\n  name: string;\n  value?: string;\n  defaultField?: any;\n}\n\nexport interface QueryBuilderClassNames {\n  removeIcon?: string;\n  addIcon?: string;\n  button?: string;\n  buttonGroup?: string;\n  removeButton?: string;\n  removeButtonSize?: string;\n  switchRow?: string;\n  switchGroup?: string;\n  switchLabel?: string;\n  switchRadio?: string;\n  switchControl?: string;\n  rightAlign?: string;\n  transition?: string;\n  tree?: string;\n  row?: string;\n  connector?: string;\n  rule?: string;\n  ruleSet?: string;\n  invalidRuleSet?: string;\n  emptyWarning?: string;\n  fieldControl?: string;\n  fieldControlSize?: string;\n  entityControl?: string;\n  entityControlSize?: string;\n  operatorControl?: string;\n  operatorControlSize?: string;\n  inputControl?: string;\n  inputControlSize?: string;\n}\n\nexport interface QueryBuilderConfig {\n  fields: FieldMap;\n  entities?: EntityMap;\n  allowEmptyRulesets?: boolean;\n  getOperators?: (fieldName: string, field: Field) => string[];\n  getInputType?: (field: string, operator: string) => string;\n  getOptions?: (field: string) => Option[];\n  addRuleSet?: (parent: RuleSet) => void;\n  addRule?: (parent: RuleSet) => void;\n  removeRuleSet?: (ruleset: RuleSet, parent: RuleSet) => void;\n  removeRule?: (rule: Rule, parent: RuleSet) => void;\n}\n\nexport interface SwitchGroupContext {\n  onChange: (conditionValue: string) => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface EntityContext {\n  onChange: (entityValue: string, rule: Rule) => void;\n  getDisabledState: () => boolean;\n  entities: Entity[];\n  $implicit: Rule;\n}\n\nexport interface FieldContext {\n  onChange: (fieldValue: string, rule: Rule) => void;\n  getFields: (entityName: string) => void;\n  getDisabledState: () => boolean;\n  fields: Field[];\n  $implicit: Rule;\n}\n\nexport interface OperatorContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  operators: string[];\n  $implicit: Rule;\n}\n\nexport interface InputContext {\n  onChange: () => void;\n  getDisabledState: () => boolean;\n  options: Option[];\n  field: Field;\n  $implicit: Rule;\n}\n\nexport interface ButtonGroupContext {\n  addRule: () => void;\n  addRuleSet: () => void;\n  removeRuleSet: () => void;\n  getDisabledState: () => boolean;\n  $implicit: RuleSet;\n}\n\nexport interface RemoveButtonContext {\n  removeRule: (rule: Rule) => void;\n  getDisabledState: () => boolean;\n  $implicit: Rule;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAngular2-QueryBuilder Changelog\nVersion 0.3.1\n\nChange: add Rule will use defaultValue of Field as the default\nUpdated Angular Materials to 6.0 in demos\nFix touched state not being updated when changing the query condition (AND/OR)\nAdd [disabled] feature #61\nTweaks to Vanilla CSS styling\n\nVersion 0.3.0\n\nBreaking: Renamed changeField callback to onChange for queryField directive.\nAdd onChange callback to queryEntity, queryInput, queryOperator, queryInput for proper reactive form validation and touched behavior on custom components\nAdd proper touched behavior to reactive form usage (See #49)\nAdd entity mode (See #22)\nFix [value] unrecognized property binding\nFix QueryBuilderClassNames not being exported as interface\nFix in operator causing multi-select to be displayed for all types (only limited to category, boolean now)\nMinor tweaks to CSS styling of default component\n\nVersion 0.2.5\n\nFix root remove ruleset button showing\nFix default value bug where only the first character of the operator is shown\nFix inability to override multiselect operators (is in, is not in)\n\nVersion 0.2.4\n\nFix serious issue with validation causing ngModel value to be wrong\nNew QueryBuilderClassNames interface\nRewrite CSS for more extensible CSS classes\nNew bootstrap 4 example\n\nVersion 0.2.3\n\nFix IE11 not working (target ES5)\nFix invalid/valid state\nNew validator function on Field config\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            rxjs : ^5.4.2\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/common : >=4.0.0\n        \n            @angular/core : >=4.0.0\n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAngular-QueryBuilder\nA modernized Angular 4+ query builder based on jQuery QueryBuilder. Support for heavy customization with Angular components and provides a flexible way to handle custom data types.\nGetting Started\nInstall\nnpm install angular2-query-builder\nDemo\nPlay with the demo here.\nSee the Plunker\nDocumentation\nDocumentation link\nExamples\nBasic Usage\napp.module.ts\nimport { QueryBuilderModule } from \"angular2-query-builder\";\nimport { AppComponent } from \"./app.component\"\n\n@NgModule(imports: [\n  ...,\n  QueryBuilderModule,\n  IonicModule.forRoot(AppComponent) // (Optional) for IonicFramework 2+\n])\nexport class AppModule { }app.component.html\n...\n\n...app.component.ts\nimport { QueryBuilderConfig } from 'angular2-query-builder';\n\nexport class AppComponent {\n  query = {\n    condition: 'and',\n    rules: [\n      {field: 'age', operator: '=', value: 'm'}\n    ]\n  };\n\n  config: QueryBuilderConfig = {\n    fields: {\n      age: {name: 'Age', type: 'number'},\n      gender: {\n        name: 'Gender',\n        type: 'category',\n        options: [\n          {name: 'Male', value: 'm'},\n          {name: 'Female', value: 'f'}\n        ]\n      }\n    }\n  }\n}Custom Input Components\napp.component.html\n\n  \n    \n  \napp.component.ts\nquery = {\n  condition: 'and',\n  rules: [\n    {field: 'birthday', operator: '=', value: new Date()}\n  ]\n};\n\nconfig: QueryBuilderConfig = {\n  fields: {\n    birthday: {name: 'Birthday', type: 'date', operators: ['=', '']\n      defaultValue: (() => return new Date())\n    },\n  }\n}Custom Styling (with Bootstrap 4)\nBootstrap demo.\napp.component.html\napp.component.ts\nclassNames: QueryBuilderClassNames = {\n  removeIcon: 'fa fa-minus',\n  addIcon: 'fa fa-plus',\n  button: 'btn',\n  buttonGroup: 'btn-group',\n  rightAlign: 'order-12 ml-auto',\n  switchRow: 'd-flex px-2',\n  switchGroup: 'd-flex align-items-center',\n  switchRadio: 'custom-control-input',\n  switchLabel: 'custom-control-label',\n  switchControl: 'custom-control custom-radio custom-control-inline',\n  row: 'row p-2 m-1',\n  rule: 'border',\n  ruleSet: 'border',\n  invalidRuleSet: 'alert alert-danger',\n  operatorControl: 'form-control',\n  operatorControlSize: 'col-auto px-0',\n  fieldControl: 'form-control',\n  fieldControlSize: 'col-auto',\n  inputControl: 'form-control',\n  inputControlSize: 'col-auto'\n}Customizing with Angular Material\nExample of how you can completely customize the query component with another library like Angular Material. For the full example, please look at the source code provided in the demo.\napp.component.html\n\n  \n    + Rule\n    + Ruleset\n    - Ruleset\n  \n  \n    \n      remove\n    \n  \n  \n    \n      And\n      Or\n    \n  \n  \n    \n      \n        {{field.name}}\n      \n    \n  \n  \n    \n      \n        {{value}}\n      \n    \n  \n  \n  \n    \n  \n  \n  \n    \n      \n        \n          {{ opt.name }}\n        \n      \n    \n  \n  ...\nProperty Bindings Quick Reference\nSee documentation for more details on interfaces and properties.\nquery-builder\n\n\n\nName\nType\nRequired\nDefault\nDescription\n\n\n\n\nallowRuleset\nboolean\nOptional\ntrue\nDisplays the + Ruleset button if true.\n\n\nclassNames\nobject\nOptional\n\nCSS class names for different child elements in query-builder component.\n\n\nconfig\nQueryBuilderConfig\nRequired\n\nConfiguration object for the main component.\n\n\ndata\nRuleset\nOptional\n\n(Use ngModel or value instead.)\n\n\nngModel\nRuleset\nOptional\n\nObject that stores the state of the component. Supports 2-way binding.\n\n\noperatorMap\n{ [key: string]: string[] }\nOptional\n\nUsed to map field types to list of operators.\n\n\nvalue\nRuleset\nOptional\n\nObject that stores the state of the component.\n\n\n\nStructural Directives\nUse these directives to replace different parts of query builder with custom components.\nqueryInput\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nfield\nField\nCurrent field object which contains the field's value and name\n\n\noptions\nOption[]\nList of options for the field, returned by getOptions\n\n\nonChange\n() => void\nCallback to handle changes to the input component\n\n\n\nqueryOperator\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\noperators\nstring[]\nList of operators for the field, returned by getOperators\n\n\nonChange\n() => void\nCallback to handle changes to the operator component\n\n\n\nqueryField\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\ngetFields\n(entityName: string) => void\nGet the list of fields corresponding to an entity\n\n\nfields\nField[]\nList of fields for the component, specified by config\n\n\nonChange\n(fieldValue: string, rule: Rule) => void\nCallback to handle changes to the field component\n\n\n\nqueryEntity\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nentities\nEntity[]\nList of entities for the component, specified by config\n\n\nonChange\n(entityValue: string, rule: Rule) => void\nCallback to handle changes to the entity component\n\n\n\nquerySwitchGroup\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\nonChange\n() => void\nCallback to handle changes to the switch group component\n\n\n\nqueryButtonGroup\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRuleSet\nCurrent rule set object which contain a list of child rules\n\n\naddRule\n() => void\nFunction to handle adding a new rule\n\n\naddRuleSet\n() => void\nFunction to handle adding a new rule set\n\n\nremoveRuleSet\n() => void\nFunction to handle removing the current rule set\n\n\n\nqueryRemoveButton\n\n\n\nContext Name\nType\nDescription\n\n\n\n\n$implicit\nRule\nCurrent rule object which contains the field, value, and operator\n\n\nremoveRule\n(rule: Rule) => void\nFunction to handle removing a rule\n\n\n\nDependencies\n\nAngular 4+\n\nThat's it.\nWorkflow\nSee the angular-library-seed project for details on how to build and run tests.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2017 Zeb Zhao\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        QueryBuilderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_QueryBuilderModule\n\n\n\ncluster_QueryBuilderModule_declarations\n\n\n\ncluster_QueryBuilderModule_exports\n\n\n\n\nQueryBuilderComponent\n\nQueryBuilderComponent\n\n\n\nQueryBuilderModule\n\nQueryBuilderModule\n\nQueryBuilderModule -->\n\nQueryBuilderComponent->QueryBuilderModule\n\n\n\n\n\nQueryButtonGroupDirective\n\nQueryButtonGroupDirective\n\nQueryBuilderModule -->\n\nQueryButtonGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryEntityDirective\n\nQueryEntityDirective\n\nQueryBuilderModule -->\n\nQueryEntityDirective->QueryBuilderModule\n\n\n\n\n\nQueryFieldDirective\n\nQueryFieldDirective\n\nQueryBuilderModule -->\n\nQueryFieldDirective->QueryBuilderModule\n\n\n\n\n\nQueryInputDirective\n\nQueryInputDirective\n\nQueryBuilderModule -->\n\nQueryInputDirective->QueryBuilderModule\n\n\n\n\n\nQueryOperatorDirective\n\nQueryOperatorDirective\n\nQueryBuilderModule -->\n\nQueryOperatorDirective->QueryBuilderModule\n\n\n\n\n\nQueryRemoveButtonDirective\n\nQueryRemoveButtonDirective\n\nQueryBuilderModule -->\n\nQueryRemoveButtonDirective->QueryBuilderModule\n\n\n\n\n\nQuerySwitchGroupDirective\n\nQuerySwitchGroupDirective\n\nQueryBuilderModule -->\n\nQuerySwitchGroupDirective->QueryBuilderModule\n\n\n\n\n\nQueryBuilderComponent \n\nQueryBuilderComponent \n\nQueryBuilderComponent  -->\n\nQueryBuilderModule->QueryBuilderComponent \n\n\n\n\n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective \n\nQueryButtonGroupDirective  -->\n\nQueryBuilderModule->QueryButtonGroupDirective \n\n\n\n\n\nQueryEntityDirective \n\nQueryEntityDirective \n\nQueryEntityDirective  -->\n\nQueryBuilderModule->QueryEntityDirective \n\n\n\n\n\nQueryFieldDirective \n\nQueryFieldDirective \n\nQueryFieldDirective  -->\n\nQueryBuilderModule->QueryFieldDirective \n\n\n\n\n\nQueryInputDirective \n\nQueryInputDirective \n\nQueryInputDirective  -->\n\nQueryBuilderModule->QueryInputDirective \n\n\n\n\n\nQueryOperatorDirective \n\nQueryOperatorDirective \n\nQueryOperatorDirective  -->\n\nQueryBuilderModule->QueryOperatorDirective \n\n\n\n\n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective \n\nQueryRemoveButtonDirective  -->\n\nQueryBuilderModule->QueryRemoveButtonDirective \n\n\n\n\n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective \n\nQuerySwitchGroupDirective  -->\n\nQueryBuilderModule->QuerySwitchGroupDirective \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        17 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONTROL_VALUE_ACCESSOR   (src/.../query-builder.component.ts)\n                        \n                        \n                            VALIDATOR   (src/.../query-builder.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/components/query-builder/query-builder.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CONTROL_VALUE_ACCESSOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        CONTROL_VALUE_ACCESSOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            VALIDATOR\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        VALIDATOR:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => QueryBuilderComponent),\n  multi: true\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
